%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 13.0.1%%For: (MacPro) ()%%Title: (RUGR_logoNL_zwart_RGB.eps)%%CreationDate: 8/16/07 10:33 AM%%BoundingBox: 100 550 310 600%%HiResBoundingBox: 100 550.5986 309.2939 600%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 0.858823 0.85098 0.788235 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 298.5 420.3887 298.5 420.3887%AI3_TileBox: 18.1377 40.9434 577.1377 823.9438%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 595.2756 841.8898%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -398 842.8887 1.31 1426 1115 18 0 0 50 75 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 0%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 32 8%%BeginData: 5242 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD08FFA8F8A8FD75FFF852A8A8FFFFFF7DF8F8F87DFFFFFFA87D52%27FD6DFF525227F8A8FFFFF8F852F8F8FFFFA8F8275252FD6FFF27F87D7D%A852F827F8527D7D52F827FD71FFA8F8FF277DFF27F852FF5227A8F8A8FD%71FFA82752F8F827F8F8F827F8272727FD73FF27F82727277D527D2727F8%F852FD25FFA8A8FFFF7DFF7D7DA8FD16FFA8A8FD16FFA8A8FD0BFFA8A8FD%08FF7D7DFF52A8A87DFFA852FF7D7DFD25FF5227FF7D27A8A8F87DFD16FF%5252FD16FF277DFFFF7DFD08FF7D27FFFFA8A8FFFFA8FF7D525227FD05F8%2752527DFD23FFA8FFA8FFFFFFA8FFFF277DFD05FFA8FD11FFA8FD08FFA8%FD06FFA8FFFFFFA8FD05FF7D27A8FFFFFFA8FFFFFFA8FFFFFFF87DFF277D%7D7D2752525227522727F8F8F87D52F852FD15FF5227A8FD04FFA8F85227%F87D2752A82727A8FFF87D7D277DFF2727F8A87DF87DFFF852FF52F852F8%27A8A8F852A82727A85252A85227277DA8F82727F8A85227277DA8F87DA8%F8F8527DFF2752277DA82727FF27F8277D7DFFA8A8FFA8FFFFFF7DA852F8%277D7D52F852FD14FFA8F852FD06FF52F8A827FF2727FF7DF8FFFF275252%52FF7DF87D7D7DFFF852FF5227FF7DF852FFF87DFF5227FF2727FF525252%27FF5227FF52F87D277DF87D7D7DFF2752FF5227A8FF5227FF7DF8FF52F8%FFA8F8A8FF7D7DF827F827F852FFFF27F8277DA852F8F852FD13FFA8F827%FD07FF2727FFFFFF52F8FF7DF8A8FF2727F8FFFFFFF8F827A8FFF852FF52%27FFA8F8FFFF2752FF5227FF7DF8A8F8FF2727525227FF2727FFFFA827F8%52A8FF2752FF7DF8FFFF52F8522752FF7DF8FFA8F87DFF7D52F8275227F8%27FF7DF8F8A8A852F8277D7DFD13FF27F8FD08FF5227FFFFFF5252FFA8F8%FFFF27522752FFA8A87DF827FFF87DFF5227FFA8F8A8FFF87DFF7D27FFFF%272752FF2727FFA8A8FF5227FFFFFFA8A8F852FF2752FF5227A8A85227FF%FF7DFF5227FFA8F8A87D7D52F8F87D27F827FF52F8A87D7DF8F87D5252FD%12FF52F8A8FD07FFA8F8F87DFFA8F8F8FF7DF8A8A8F85252F8527DF8A8F8%52FF27F87DF8F8A852F87DA8F827FF27F87DFF27F87DFF7DF87D2727FFF8%F87DFF52F8A82752A8F827FF7DF82727A8F87D2727A827F8A8A8F8F8F87D%A852275227527DFF7D52A8A8F8F852A87D52FD11FFA8F87DFD08FFA87D7D%7DFFA87D7DA8A8F8A87D7D7DA87D7DA87D527DFFFFA85252A87DA87D7D7D%A8FD057DA8FFFF7DFFFFFF7D5252FFA87D7DA8FFFF527D7DFFA87D7DFFFF%7D52FFFFA8527DA8FF7D7D7DFF7D527D52FF2752F852F87DA8A87D52F8F8%27A87DF827FD11FFF852FD10FF7D5252F8A8FD45FF7DFFA827275252527D%7DA8522727A87D27F852FD10FF2727FD11FFA827527DFD46FF52FFFF7D27%FD0452A87D7DA8527D27F82752FD0FFF52F8A8FD21FFA827A8FD37FF7DFD%04FF7DA8527D7D7D52FF7D27F827527DFD0EFF7DF87DFD23FF52FD38FF52%FFFFA87D7D277D527D7D2752522752A87D52FD0DFFA8F827FD0DFFA87D52%A87D7D7DA852A8FF7D527DFFA852A8527DA8FF7D7DFFA852A8527DA8FFFF%7D527D7DFFA87D52A8FF7D7DA8527DFD20FF525252F8F8527D527DA8A852%A87DFD04FF7DFD0DFF2727FD0EFF27527DF87D7DF827F8277D277DF8A8A8%F8F87DF852FF7DF8FFA8F8F852F852FF7DF87DF852FF27527DF8FF7DF827%52F87DFD1FFF5252F8F8527D5252527D7D7DA87D527DA8FF52FD0CFF52F8%A8FD0DFFA8F8A8A8F8A8FFF87DA8A8F87DFF52F8FF2752FF52F8FFA8F8A8%FFF852FF52F8FF2727FF2752A8F87D7DF87DFFF87DFFF852FD1FFF52F8F8%527D7D52F827F827277DF827F852FF7DFD0BFF7DF8A8FD0FFF52275227FF%FFF87DFFFFF87DFF5227FF2752FF5227FFFFF8FFFF2752FF5227FFA8F87D%F8A87DF8527D7DFFA8F8A8FFF87DFD1FFFF8F8527D7DF8F85252A827F8F8%5227F827A87DFD0AFFA8F852FD10FF52F852FFFFFFF87DFFFFF852FF2727%FFF852FF52F8FF7DF87DFFF852FF52F8FFA8F827A8FFA8F8A8FF52A8A8F8%A8FFF827FD1FFF7D27A87D27F852A8A8FF7DF8275227F87DA8A8FD0AFFF8%27FD11FF52277D52FF7D2727FFFFA8275227FF7D2727A827277D52F8527D%2727A827277DA8F87D52A8FF7D275227FF522752A8F827A8FD1EFF7D527D%27F8527D7D27A8A827F827F8277D7DA8FD09FF27F8A8FD10FF7DF8FFA8F8%52FFA8FFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8F87D%FF52F8FFFFA8A8FFFFFFA8FFA8FFA8FD20FF5227F85252FF27F8A8FF2752%2752277D7DFD09FF7DF87DFD11FFA8F8527DF8A8FD1BFF2727A82752FD2C%FFA8F827A8A827F8F8FFFFA827F8277D52FD09FFA8F852FD13FFA87D52A8%FD1CFFA87D52A8FD2EFF7D277D52F8F8A8FFFFFFA8527D52A8FD09FF2727%FD67FFA827F8F8A852FD04FFA852A8FD09FF52F8FD6AFF52527D7D7DA87D%7D7DFD0AFF7DF8A8FD6BFFA8A87D7D7DA8A8FD0AFFA8F87DFD65FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp1 Bn%AI5_BeginGradient: (Unnamed gradient 86)(Unnamed gradient 86) 1 2 Bd[<04040505050404040404050505040404040505050604050505060606070706060606060607070807070707070707070606070708080909090808080809090A0A0A09090A0A0A0A0B0B0B0A0A0A0B0B0C0C0C0D0B0B0C0C0C0C0D0D0D0D0C0C0C0C0C0C0C0C0C0B0B0C0C0C0C0D0D0D0E0C0D0D0D0E0E0E0E0F0F0E0E0E0E0F0F0F0F101010100F0F1010101010><ACABAAA9A8A7A6A4A3A2A1A09F9E9D9C9B9998979695949391908F8E8C8B8A898887868684838281807E7D7B7A797776757372716F6E6D6B6B6B69686765636261605E5D5C5A59575756555452514F4E4C4B494A494746444341403E3E3D3C3A393735343432312F2E2C2C2A29272624252321201F1D1D1B1A18171715141212100E0C0C0A090A080606040303><D3D2D3D2D2D0CFCFCECECDCDCCCACAC9C9C8C8C8C7C7C6C5C5C4C4C3C4C3C2C2C1C1C0C0BFBFBFBEBEBDBDBCBBBABAB9B8B9B8B8B8B7B7B6B6B5B5B4B3B4B3B3B2B2B1B1B1B1B0AFAFAFAEAEAEADADADADACACABAAABAAAAA9AAA9A9A8A8A8A8A7A7A6A6A5A5A4A4A3A3A3A3A2A2A2A2A1A1A1A1A1A1A0A09FA09F9F9E9E9F9E9E9D9E9C9D9D9C9C9B9B9C9B9B>0<E9E9E9E9E9EAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBECECECECECECECECECEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8><6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F90919192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A6A7A8A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBEBFC0C1C2C3C4C5C6C6C7C8C9CACBCCCDCDCECFD0D1D2D2D3D4D5D6D7D7D8D9DADBDCDCDDDEDFE0E0E1E2E3E3E4E5E6E6E7E8E8E9EAEAEBECEC><35363637373839393A3A3B3B3C3D3D3E3E3F4040414142434344444545464747484849494A4B4B4C4C4D4D4E4F4F5050515152525354545555565657585859595A5A5B5B5C5C5D5E5E5F5F606061616262636364656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F7070717172727373747475757676777778787979797A7A7B7B7C7C7C7D7D7E7E7E7F7F>4 %_Br[0.015686 0.67451 0.827451 0 0.913725 0.435294 0.207843 2 46.0674 0 %_BS%_0.015686 0.67451 0.827451 0 0.913725 0.435294 0.207843 2 46.0674 0 Bs0.062745 0.011765 0.607843 0 0.972549 0.92549 0.498039 2 50 100 %_BS%_0.062745 0.011765 0.607843 0 0.972549 0.92549 0.498039 2 50 100 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed 2)0 Auu0 J 0 j 1 w 4 M []0 d0 XR-4020.2314 4739.2334 m-3911.6592 4739.2334 L-3911.6592 4737.8208 L-4020.2314 4737.8208 L-4020.2314 4739.2334 Lnu0 O0.729412 0.709804 0.635294 0.760784 0.137255 0.121569 0.12549 Xa-3911.6592 4737.8584 m-3911.7109 4737.8208 L-3911.8438 4737.9248 L-3911.6592 4737.8584 Lf-3912.5342 4738.0889 m-3912.5083 4738.1084 -3912.5205 4738.1396 -3912.4946 4738.1592 C-3911.9814 4737.8623 L-3912.2109 4737.6943 -3912.3828 4738.2017 -3912.5342 4738.0889 cf-3912.6855 4738.0596 m-3912.8843 4737.9902 -3912.9668 4738.1289 -3913.0132 4738.1768 C-3912.9434 4738.0688 -3912.6416 4738.21 -3912.6855 4738.0596 Cf-3930.2212 4738.1289 m-3930.2026 4738.1279 -3930.1782 4738.124 -3930.1592 4738.1201 C-3930.1904 4738.1152 -3930.2109 4738.1201 -3930.2212 4738.1289 Cf-3934.7964 4738.6016 m-3934.8442 4738.7124 L-3933.9907 4738.5142 -3933.0273 4738.7158 -3932.1252 4738.6289 C-3932.1855 4738.6685 L-3929.8945 4738.7119 -3927.7822 4738.5264 -3925.5088 4738.4414 C-3925.5444 4738.4541 -3925.5566 4738.4863 -3925.5933 4738.499 c-3925.4834 4738.4604 -3925.3618 4738.3896 -3925.2388 4738.3984 C-3925.2073 4738.4238 -3925.2734 4738.4512 -3925.3125 4738.4619 C-3924.8333 4738.6455 -3923.9028 4738.3457 -3923.6025 4738.4873 C-3923.4678 4738.4668 -3923.4082 4738.3911 -3923.4834 4738.332 C-3921.7041 4738.2856 -3919.8013 4738.25 -3917.9893 4738.1064 C-3917.9019 4738.1318 -3917.8862 4738.1816 -3917.9102 4738.2451 C-3916.3613 4737.9473 -3914.7378 4738.0659 -3913.1533 4738.1143 C-3913.0923 4738.0356 -3913.3145 4738.0313 -3913.1587 4737.9492 C-3913.6682 4737.8521 -3914.0918 4738.1421 -3914.5537 4737.999 C-3914.4946 4737.9238 L-3914.8311 4737.8765 -3914.5625 4738.1143 -3914.9116 4738.0166 C-3915.0488 4737.9541 -3914.8772 4737.9209 -3914.9414 4737.915 C-3915.6558 4737.9463 -3916.4014 4737.8779 -3917.0742 4738.0615 C-3917.2402 4737.8975 -3917.8418 4738.0557 -3918.1062 4737.8984 C-3918.2913 4737.9639 -3918.4766 4737.9473 -3918.5469 4738.0557 C-3921.0479 4737.9692 -3923.6025 4738.1279 -3926.1653 4738.1152 C-3927.3638 4738.4336 -3928.7998 4738.0547 -3930.2227 4738.1611 C-3930.2324 4738.1504 -3930.2305 4738.1377 -3930.2212 4738.1289 C-3930.6855 4738.207 -3931.3613 4738.2437 -3931.9153 4738.2041 C-3932.3838 4738.3389 L-3935.7158 4738.0625 -3939.1201 4738.2568 -3942.5044 4738.1421 c-3946.3496 4738.0625 -3949.7188 4737.8345 -3953.4639 4738.2524 C-3953.4592 4738.2212 -3953.4893 4738.2041 -3953.3926 4738.1924 C-3954.4731 4738.2559 -3955.4583 4738.1421 -3956.4756 4738.208 C-3956.4727 4738.1768 L-3958.9983 4738.438 -3961.7292 4738.1421 -3964.1636 4738.4238 C-3967.1274 4738.3955 -3970.4785 4738.4238 -3973.6157 4738.5044 C-3973.6084 4738.4414 L-3976.1187 4738.5742 -3978.5444 4738.2412 -3981.0488 4738.3408 C-3983.6252 4738.1982 -3986.3457 4738.7017 -3988.9434 4738.5107 C-3990.5508 4738.2017 -3992.6621 4738.8628 -3994.1719 4738.5439 C-3997.2734 4738.0615 -4000.2822 4738.3721 -4003.3828 4738.6611 C-4006.2432 4738.4893 -4009.0996 4738.9307 -4011.8701 4738.5796 C-4013.1826 4738.8047 -4014.6323 4738.3013 -4016.0933 4738.3662 C-4016.0413 4738.4443 L-4016.5654 4738.208 -4017.2092 4738.7744 -4017.5361 4738.4238 C-4017.4814 4738.4072 L-4017.7588 4738.2295 -4018.1262 4738.8276 -4018.2949 4738.6152 C-4018.3398 4738.7041 L-4018.6758 4738.7295 -4018.3794 4738.604 -4018.6387 4738.5688 C-4018.7363 4738.5796 -4018.6758 4738.7295 -4018.8794 4738.6787 C-4018.9238 4738.3184 -4019.7026 4738.7568 -4019.7256 4738.3521 C-4019.5422 4738.3521 -4020.0137 4738.1953 -4019.6011 4738.1104 C-4019.7188 4738.0688 -4020.2822 4738.0889 -4020.2314 4738.2607 C-4020.2793 4738.4429 -4020.4995 4738.6021 -4020.1572 4738.7432 C-4020.0884 4738.6104 L-4019.9731 4738.7432 -4020.0012 4738.6768 -4019.9595 4738.7764 C-4019.5122 4738.7939 -4019.4521 4738.9873 -4019.1318 4739.0664 C-4019.1348 4739.0625 -4019.1377 4739.0596 -4019.1333 4739.0527 C-4018.9141 4738.8936 -4018.6104 4738.9873 -4018.4375 4739.0107 C-4018.3672 4739.0854 L-4018.2617 4739.2393 -4017.8584 4738.7822 -4017.9946 4739.0479 C-4017.0852 4738.9819 -4016.0432 4738.9849 -4015.0264 4738.9819 C-4014.8843 4738.8809 -4014.2493 4738.9912 -4014.4707 4738.7969 c-4014.2163 4739.0181 -4013.46 4739.0742 -4013.1797 4739.0659 C-4013.1899 4739.0864 -4013.2021 4739.1104 -4013.2461 4739.1021 C-4012.7012 4739.3896 -4012.6006 4738.8359 -4012.0898 4739.188 C-4012.0103 4738.938 -4011.1626 4739.2671 -4010.8743 4738.9751 C-4010.8105 4739.0303 -4010.7898 4739.0796 -4010.8125 4739.124 C-4009.8936 4739.1289 -4008.8789 4739.2192 -4008.1011 4739.2305 C-4007.4365 4739.0132 -4006.4922 4739.3291 -4005.9209 4739.0283 C-4005.4478 4739.0928 -4004.6816 4739.2168 -4004.0215 4739.0967 C-4004.0852 4739.1328 L-4003.3398 4739.1152 -4002.4082 4739.0996 -4001.8965 4738.9111 C-4001.6763 4739.1992 -4001.3545 4739.1421 -4001.0317 4739.2334 C-4000.5342 4739.0996 -3999.5293 4739.1396 -3998.7695 4739.0181 C-3998.6533 4739.1509 -3998.1426 4738.9619 -3998.1035 4739.1553 C-3995.9756 4738.7822 -3993.3442 4738.9121 -3991.0718 4739.1943 C-3991.1045 4739.208 L-3990.8096 4739.1021 -3990.4697 4738.8677 -3990.1699 4738.7305 C-3990.1406 4738.748 -3990.1436 4738.7793 -3990.2073 4738.7793 C-3989.7922 4738.7432 -3989.4033 4738.9331 -3988.9893 4738.8975 C-3988.9922 4738.9292 -3988.9922 4738.9292 -3989.0596 4738.96 C-3988.6709 4738.874 -3988.2559 4739.1143 -3987.7964 4738.9648 C-3987.7712 4739.0161 L-3987.4785 4738.9443 L-3987.4858 4739.0078 -3987.4971 4739.104 -3987.6533 4739.083 C-3984.0898 4739.1455 -3980.4116 4738.8145 -3976.7529 4738.8623 C-3976.8877 4738.9229 L-3976.1782 4738.8145 L-3976.1816 4738.8467 -3976.2158 4738.8623 -3976.2495 4738.8774 C-3975.3457 4738.9849 -3974.4082 4738.8047 -3973.5273 4738.832 C-3973.5317 4738.8628 -3973.6653 4738.9248 -3973.5422 4738.96 C-3972.8896 4738.7856 -3972.4946 4739.1865 -3972.1682 4738.8252 C-3972.1377 4738.8408 -3972.1172 4738.9229 -3972.1836 4738.9517 C-3970.3701 4738.832 -3968.5078 4738.8389 -3966.6807 4738.8975 C-3965.1587 4738.5703 -3963.4583 4738.8662 -3961.8772 4738.6064 C-3961.8853 4738.6719 L-3959.8389 4738.4429 -3957.6682 4738.688 -3955.5469 4738.6421 C-3954.6663 4738.6685 -3954.0708 4738.5908 -3953.1855 4738.5864 C-3953.1636 4738.6685 L-3951.6738 4738.3584 -3950.0322 4738.9463 -3948.4785 4738.6055 C-3948.5852 4738.7158 L-3948.3442 4738.5449 -3947.6455 4738.7764 -3947.7373 4738.4824 C-3947.4629 4738.5708 L-3946.4067 4738.1841 -3945.5413 4738.75 -3944.2471 4738.499 C-3944.3323 4738.5688 L-3943.9878 4738.5142 -3943.5869 4738.4712 -3943.3323 4738.5356 C-3943.3716 4738.5459 -3943.3535 4738.5664 -3943.4346 4738.5854 C-3942.3574 4738.8604 -3941.1582 4738.5557 -3940.0215 4738.5664 C-3940.1499 4738.6958 L-3939.6006 4738.5439 -3938.5923 4738.6855 -3937.8701 4738.6152 C-3937.9141 4738.6768 L-3937.5483 4738.5908 L-3937.5391 4738.7124 L-3936.5986 4738.7212 -3935.7139 4738.6152 -3934.7964 4738.6016 Cf-3925.3125 4738.4619 m-3925.3154 4738.4604 -3925.3193 4738.4604 -3925.3228 4738.458 C-3925.3506 4738.4688 -3925.3369 4738.4668 -3925.3125 4738.4619 Cf-4019.0166 4739.0928 m-4019.0596 4739.0854 -4019.0957 4739.0771 -4019.1318 4739.0664 C-4019.1233 4739.0928 -4019.0532 4739.0864 -4019.0166 4739.0928 cfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7893 8609.1953 m-7697.0332 8609.1953 L-7697.0332 8549.167 L-7893 8549.167 L-7893 8609.1953 Lnu0 O0.015686 0.67451 0.827451 0 0.913725 0.435294 0.207843 Xa-7872.96 8602.5723 m-7884.9639 8597.7666 -7890.4199 8601.3789 v-7885.6582 8601.2217 -7881.4912 8603.0352 v-7890.6182 8603.4033 -7893 8608.5166 v-7890.0234 8605.6191 -7883.0781 8606.9238 v-7876.1357 8608.2285 -7859.6685 8611.8896 -7864.8252 8606.293 C-7868.0791 8604.9639 -7869.7061 8604.2354 -7872.96 8602.5723 Cf0.172549 0.839216 0.984314 0.062745 0.764706 0.266667 0.117647 Xa-7863.9961 8607.4258 m-7866.1016 8605.7217 -7876.7441 8604.8682 -7875.4082 8600.9297 c-7874.0723 8596.9922 -7871.4971 8595.457 Y-7869.6094 8595.4473 -7868.6665 8595.4209 -7866.7773 8595.3154 C-7864.7656 8604.8086 -7863.9961 8607.4258 Vf0.015686 0.67451 0.827451 0 0.913725 0.435294 0.207843 Xa-7871.6641 8588.7119 m-7873.1621 8595.2861 -7873.9102 8596.5186 -7875.4082 8600.9297 C-7873.4229 8595.6143 -7866.9844 8598.8135 v-7860.1191 8602.2236 -7838.1914 8598.4111 -7852.6309 8588.665 C-7860.2441 8589.3945 -7864.0508 8589.5186 -7871.6641 8588.7119 Cf0.172549 0.839216 0.984314 0.062745 0.764706 0.266667 0.117647 Xa-7875.9395 8570.4414 m-7873.7524 8571.6025 -7875.9355 8575.3125 v-7882.7813 8586.9375 -7881.6582 8593.8721 -7874.4814 8592.6367 c-7867.3047 8591.4014 -7852.1719 8588.1377 -7848.8955 8591.9453 C-7850.9912 8583.3701 -7853.0435 8578.6328 -7855.1387 8568.7686 C-7872.4814 8563.085 -7875.9395 8570.4414 vf0.015686 0.67451 0.827451 0 0.913725 0.435294 0.207843 Xa-7717.0723 8596.7842 m-7705.0664 8596.7441 -7699.6094 8602.0576 v-7704.3701 8599.8271 -7708.5381 8600.3799 v-7699.4121 8604.3223 -7697.0332 8608.8828 v-7700.0059 8605.5811 -7706.9512 8605.2637 v-7713.8965 8604.9463 -7730.3652 8607.1777 -7725.2061 8599.8193 C-7721.9531 8598.4971 -7720.3252 8597.8789 -7717.0723 8596.7842 Cf0.172549 0.839216 0.984314 0.062745 0.764706 0.266667 0.117647 Xa-7726.0332 8601.3916 m-7723.9307 8599.1455 -7713.2852 8600.9941 -7714.6221 8595.5605 c-7715.9595 8590.127 -7718.5313 8587.1777 Y-7720.6274 8586.1563 -7721.6758 8585.6533 -7723.7715 8584.6797 C-7725.2666 8597.4814 -7726.0332 8601.3916 Vf0.015686 0.67451 0.827451 0 0.913725 0.435294 0.207843 Xa-7718.3633 8580.3896 m-7716.8662 8586.3994 -7716.1191 8589.4746 -7714.6221 8595.5605 C-7716.6523 8587.6201 -7723.0449 8589.8506 v-7732.6563 8593.2031 -7750.0996 8585.1777 -7737.3984 8576.7295 C-7729.7852 8577.6289 -7725.9766 8578.3506 -7718.3633 8580.3896 Cf0.172549 0.839216 0.984314 0.062745 0.764706 0.266667 0.117647 Xa-7714.0938 8569.374 m-7716.0264 8569.0254 -7714.0957 8572.1426 v-7707.3496 8583.0322 -7710.9688 8588.5566 -7718.1445 8583.6318 c-7725.3203 8578.7041 -7738.2949 8577.9609 -7741.5713 8581.2559 C-7739.1289 8573.2988 -7737.3359 8569.7842 -7734.8926 8565.04 C-7717.5527 8564.2061 -7714.0938 8569.374 vfu0.015686 0.67451 0.827451 0 0.913725 0.435294 0.207843 Xa-7729.4277 8570.5674 m-7743.8345 8571.2266 -7758.0845 8575.6191 -7771.8652 8579.8662 c-7787.4668 8584.6738 -7802.2051 8589.2158 -7817.1953 8588.8594 c-7822.2734 8588.7393 -7831.0762 8586.7334 -7840.3955 8584.6094 c-7857.1255 8580.7959 -7869.4551 8578.2969 -7876.5449 8579.6904 C-7877.6865 8579.833 -7879.4863 8580.2998 V-7879.7852 8583.4121 -7880.2598 8585.4365 Y-7876.8242 8575.501 -7832.5723 8591.376 -7817.2637 8591.7393 c-7787.9629 8592.4346 -7759.0166 8574.8066 -7729.2959 8573.4434 c-7712.2471 8572.6631 -7710.2988 8581.9521 Y-7710.8262 8579.2969 -7711.4404 8575.7666 V-7713.3857 8574.0566 -7714.8164 8573.0654 Y-7718.0762 8571.4141 -7722.7383 8570.2607 -7729.4277 8570.5674 cf-7860.8848 8552.2754 m-7847.8828 8553.5625 -7834.5156 8556.7793 -7827.6255 8560.2783 c-7810.3325 8569.0625 -7791.5723 8566.4727 -7775.5039 8562.7793 C-7772.3438 8562.0498 L-7757.0684 8558.4971 -7726.6387 8551.4209 -7714.6074 8557.041 C-7713.5615 8557.3418 -7711.9824 8558.3838 V-7710.5977 8557.1934 -7708.7383 8557.8369 -7709.8906 8556.748 c-7720.8496 8546.377 -7759.0234 8556.041 -7776.1484 8559.9746 c-7792.8721 8563.8154 -7810.4111 8565.792 -7826.3213 8557.7109 c-7841.3535 8550.0762 -7882.4902 8544.8125 -7886.9609 8552.9014 c-7887.2578 8553.4385 -7886.5547 8553.5361 -7885.4473 8554.4971 C-7883.9785 8553.6221 -7882.71 8553.165 Y-7879.6895 8551.9766 -7872.7485 8551.1016 -7860.8848 8552.2754 cf0.023529 0.305882 0.67451 0 0.964706 0.737255 0.384314 Xa-7711.9824 8558.3838 m-7713.5615 8557.3418 -7714.6074 8557.041 Y-7726.6387 8551.4209 -7757.0684 8558.4971 -7772.3438 8562.0498 C-7775.5039 8562.7793 L-7791.5723 8566.4727 -7810.3325 8569.0625 -7827.6255 8560.2783 c-7834.5156 8556.7793 -7847.8828 8553.5625 -7860.8848 8552.2754 c-7872.7485 8551.1016 -7879.6895 8551.9766 -7882.71 8553.165 C-7883.9785 8553.6221 -7885.4473 8554.4971 V-7883.8018 8555.9209 -7881.2598 8559.249 -7879.7524 8568.749 c-7879.0684 8573.0625 -7879.1904 8577.2158 -7879.4863 8580.2998 C-7877.6865 8579.833 -7876.5449 8579.6904 Y-7869.4551 8578.2969 -7857.1255 8580.7959 -7840.3955 8584.6094 c-7831.0762 8586.7334 -7822.2734 8588.7393 -7817.1953 8588.8594 c-7802.2051 8589.2158 -7787.4668 8584.6738 -7771.8652 8579.8662 c-7758.0845 8575.6191 -7743.8345 8571.2266 -7729.4277 8570.5674 c-7722.7383 8570.2607 -7718.0762 8571.4141 -7714.8164 8573.0654 C-7713.3857 8574.0566 -7711.4404 8575.7666 V-7712.1328 8571.7881 -7712.9385 8566.6982 -7713.2256 8563.0449 c-7713.4346 8560.3945 -7712.7891 8559.0781 -7711.9824 8558.3838 CfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 2)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7893 8611.8896 m-7867.1089 8611.8896 L-7867.1089 8586.0498 L-7893 8586.0498 L-7893 8611.8896 Ln*u0 O0.627451 0 0.831372 0 0.435294 0.705882 0.309804 Xa-7867.4077 8590.2705 m-7867.2969 8590.1865 -7867.1973 8590.0957 -7867.1089 8589.998 C-7867.1089 8587.2783 L-7867.7085 8586.5361 -7868.7285 8586.0498 -7869.5703 8586.0498 c-7870.1948 8586.0498 -7870.8989 8586.415 -7871.1328 8586.7031 C-7871.2632 8586.832 -7871.4199 8586.8838 -7871.5752 8586.8838 c-7871.7329 8586.8838 -7871.8613 8586.832 -7871.9141 8586.7266 c-7872.0957 8586.3369 -7872.4351 8586.0762 -7872.9048 8586.0762 c-7873.6592 8586.0762 -7876.5239 8588.7578 -7876.5239 8589.5146 c-7876.5239 8589.6445 -7876.4199 8589.6973 -7876.2373 8589.6973 c-7876.0029 8589.6973 -7875.6128 8589.5928 -7875.2476 8589.4111 C-7875.0132 8589.3066 -7873.9199 8588.499 -7873.6328 8588.499 c-7873.2949 8588.499 -7873.0605 8589.3066 -7872.7207 8589.3066 c-7872.4351 8589.3066 -7871.3408 8588.3174 -7871.0796 8588.1338 c-7870.8452 8587.9775 -7870.0908 8587.2236 -7869.4399 8587.2236 c-7868.5288 8587.2236 -7867.6157 8587.7158 -7867.6157 8588.707 c-7867.6157 8589.2285 -7868.4238 8590.7646 -7871.2632 8591.2598 c-7871.5239 8591.3105 -7872.8765 8591.2871 -7873.1895 8591.3105 c-7873.5029 8591.3369 -7875.0391 8590.8682 -7875.3789 8590.791 c-7876.4199 8590.5566 -7876.4985 8590.5566 -7878.4512 8590.5566 c-7878.5825 8590.5566 -7878.6606 8590.5566 -7878.6606 8590.4775 c-7878.6606 8590.4258 -7878.6333 8590.3477 -7878.5557 8590.2432 C-7878.2949 8589.8535 -7878.0605 8589.333 -7878.0605 8588.7334 c-7878.0605 8587.4033 -7879.4155 8586.0498 -7880.9263 8586.0498 c-7883.8428 8586.0498 -7883.8428 8587.7695 -7883.8428 8588.0039 c-7883.8428 8588.5518 -7883.5039 8589.6709 -7882.2549 8589.6709 c-7881.5508 8589.6709 -7881.2637 8589.333 -7881.2637 8589.0205 c-7881.2637 8588.7861 -7881.3945 8588.6025 -7881.5771 8588.5244 c-7881.8389 8588.4209 -7881.9419 8588.2891 -7881.9419 8588.1602 c-7881.9419 8587.8994 -7881.5771 8587.665 -7881.1343 8587.665 c-7880.3262 8587.665 -7879.5708 8588.4463 -7879.5708 8589.0986 c-7879.5708 8591.1826 -7883.9209 8591.7822 -7884.1548 8591.7793 c-7886.0254 8591.7695 -7887.2549 8592.8125 -7887.2168 8594.8418 c-7887.1938 8596.1953 -7888.3892 8599.7393 -7890.2646 8599.7393 c-7890.8389 8599.7393 -7891.2813 8599.4014 -7891.2813 8598.6973 c-7891.2813 8598.0449 -7891.0991 8597.6025 -7890.8892 8597.6025 c-7890.7861 8597.6025 -7890.6548 8597.7598 -7890.5254 8598.0449 C-7890.4727 8598.2031 -7890.2915 8598.3066 -7890.0825 8598.3066 c-7889.6133 8598.3066 -7889.0151 8597.8906 -7889.0151 8596.7178 c-7889.0151 8595.5449 -7889.7183 8595.0781 -7890.4468 8595.0781 c-7891.7754 8595.0781 -7893 8596.1953 -7893 8598.5664 c-7893 8600.5205 -7891.75 8601.457 -7890.6812 8601.457 c-7889.6133 8601.457 -7889.2495 8600.8584 -7888.8848 8600.5723 c-7888.7549 8600.4688 -7888.6758 8600.417 -7888.6245 8600.417 c-7888.5469 8600.417 -7888.52 8600.4951 -7888.52 8600.6514 c-7888.52 8601.2754 -7888.0508 8604.0625 -7888.0508 8604.6357 c-7888.0508 8605.3643 -7888.0508 8611.3281 -7890.1089 8611.3281 c-7891.0728 8611.3281 -7891.5679 8610.5742 -7891.5679 8609.6865 c-7891.5679 8609.0361 -7890.6289 8608.1777 -7890.3169 8607.7344 c-7889.7959 8607.0322 -7889.7959 8606.5098 Y-7889.7959 8606.3545 -7889.8477 8606.2754 -7889.9517 8606.251 C-7890.9678 8606.1201 -7891.1768 8606.041 -7891.1768 8605.7559 c-7891.1768 8605.2871 -7890.4209 8604.4785 -7890.0303 8604.2979 c-7889.7437 8604.167 -7889.6133 8603.8809 -7889.6133 8603.5938 c-7889.6133 8603.3066 -7889.7437 8602.9697 -7890.1865 8602.9697 c-7891.2021 8602.9697 -7892.9229 8605.5996 -7892.9229 8606.0938 c-7892.9229 8606.5625 -7892.6616 8606.9014 -7892.27 8607.085 c-7892.1665 8607.1357 -7892.1143 8607.2666 -7892.1143 8607.4209 c-7892.1143 8607.5791 -7892.1665 8607.7344 -7892.2969 8607.8652 C-7892.5835 8608.0986 -7892.9468 8608.8037 -7892.9468 8609.4277 c-7892.9468 8610.2686 -7892.4604 8611.2891 -7891.7207 8611.8896 C-7889.0439 8611.8896 L-7888.9341 8611.7979 -7888.8301 8611.6973 -7888.7285 8611.5898 c-7888.4678 8611.3281 -7888.3125 8611.2256 -7888.1812 8611.2256 c-7888.0254 8611.2256 -7887.6089 8611.8242 -7887.4785 8611.8242 c-7886.8008 8611.8242 -7886.8008 8611.2773 -7886.8008 8610.0791 c-7886.8008 8609.8945 -7886.8535 8609.0625 -7886.8535 8608.9072 c-7886.8535 8608.6475 -7886.7754 8608.5166 -7886.6445 8608.5166 c-7886.5396 8608.5166 -7886.4102 8608.6201 -7886.2788 8608.7773 c-7885.5078 8609.7334 -7884.0596 8611.1426 -7882.0928 8611.8896 C-7876.5278 8611.8896 L-7875.3564 8611.4287 -7874.4448 8610.6865 -7873.7349 8609.8184 C-7873.5425 8610.6689 -7872.9136 8611.8877 -7870.9766 8611.8877 c-7869.9438 8611.8877 -7869.0239 8611.3389 -7868.6079 8610.5098 C-7867.6665 8610.1777 -7867.1108 8609.1689 -7867.1108 8608.0215 c-7867.1108 8606.085 -7868.3301 8605.4561 -7869.1797 8605.2617 C-7868.3096 8604.5557 -7867.5693 8603.6426 -7867.1089 8602.4717 C-7867.1089 8596.9053 L-7867.8564 8594.9385 -7869.2646 8593.4902 -7870.2207 8592.7178 c-7870.3774 8592.5879 -7870.4551 8592.4834 -7870.4551 8592.4033 c-7870.4551 8592.0146 -7868.2148 8591.9873 -7867.7461 8591.9873 c-7867.4863 8591.9873 -7867.3564 8591.7549 -7867.3564 8591.5205 c-7867.3564 8591.3105 -7867.4336 8591.1289 -7867.6157 8591.1025 c-7867.8237 8591.0781 -7867.9551 8591.0254 -7867.9551 8590.8945 c-7867.9551 8590.7646 -7867.7988 8590.582 -7867.4077 8590.2705 cf1 D-7870.2988 8608.4717 m-7870.23 8608.459 -7870.1743 8608.4492 -7870.1421 8608.4492 c-7869.7783 8608.4492 -7869.2832 8608.8398 -7869.2832 8609.5439 c-7869.2832 8609.6006 -7869.2896 8609.6572 -7869.2998 8609.7139 C-7869.9854 8609.7002 -7870.3662 8609.2139 -7870.3662 8608.8545 c-7870.3662 8608.792 -7870.3276 8608.6191 -7870.2988 8608.4717 Cf-7867.9185 8608.0479 m-7867.9185 8608.4385 -7868.0835 8608.9326 -7868.3872 8609.2813 C-7868.5181 8608.249 -7869.4956 8607.6162 -7870.2471 8607.6162 c-7870.8208 8607.6162 -7871.1846 8607.876 -7871.1846 8608.1631 c-7871.1846 8608.1953 -7871.1846 8608.2705 -7871.1509 8608.3477 C-7871.1812 8608.4658 -7871.1992 8608.6016 -7871.1992 8608.751 c-7871.1992 8609.4336 -7870.6772 8610.3018 -7869.8086 8610.5557 C-7870.1445 8610.8662 -7870.5825 8611.0811 -7870.9502 8611.0811 c-7872.4077 8611.0811 -7872.9292 8610.0625 -7872.9292 8609.2314 c-7872.9292 8609.0146 -7872.9209 8608.8271 -7872.8945 8608.6572 C-7872.4512 8608.0234 -7872.1064 8607.5439 -7871.8179 8607.1826 C-7871.4541 8606.8906 -7870.9736 8606.5479 -7870.3423 8606.1025 C-7870.1709 8606.0762 -7869.9849 8606.0674 -7869.7676 8606.0674 c-7868.9336 8606.0674 -7867.9185 8606.5889 -7867.9185 8608.0479 cf-7869.7261 8595.2969 m-7869.4141 8595.2969 -7867.6157 8596.4951 -7867.6157 8599.6465 c-7867.6157 8602.6113 -7869.3276 8605.5273 -7872.5757 8605.583 C-7872.5781 8605.5557 -7872.5796 8605.5254 -7872.5796 8605.4961 c-7872.5796 8605.3711 -7872.7769 8603.6494 -7873.8911 8602.2881 C-7873.8086 8602.2979 -7873.7236 8602.3037 -7873.6328 8602.3037 c-7872.5132 8602.3037 -7871.6274 8601.1826 -7871.6274 8600.1934 c-7871.6274 8599.2041 -7872.4351 8597.5625 -7874.9092 8597.5625 c-7877.1797 8597.5625 -7878.2173 8599.3994 -7878.3564 8600.7256 C-7879.6064 8601.0361 -7881.0449 8602.0791 -7881.0449 8604.0889 c-7881.0449 8606.5625 -7879.4048 8607.3711 -7878.4141 8607.3711 c-7877.4238 8607.3711 -7876.3047 8606.4854 -7876.3047 8605.3643 c-7876.3047 8605.2949 -7876.3086 8605.2266 -7876.3145 8605.1631 C-7875.0869 8606.1025 -7873.7246 8606.4189 -7873.5029 8606.4189 c-7873.4751 8606.4189 -7873.4468 8606.4199 -7873.4199 8606.4209 C-7873.5645 8609.5605 -7876.1621 8611.3818 -7879.3516 8611.3818 c-7881.6436 8611.3818 -7884.3008 8609.9482 -7884.3008 8608.959 c-7884.3008 8608.543 -7883.5181 8608.4648 -7883.3628 8608.4648 c-7883.2588 8608.4648 -7882.6592 8608.5938 Y-7882.5293 8608.5938 -7882.4512 8608.4902 -7882.4512 8608.3594 c-7882.4512 8608.125 -7883.0767 8607.1621 -7884.0132 8607.1621 c-7884.5352 8607.1621 -7885.2383 8607.1104 -7885.4727 8606.8232 c-7885.6289 8606.6416 -7886.1499 8605.4688 -7886.1499 8605.2354 c-7886.1499 8605.1025 -7886.0708 8605.0264 -7885.9155 8605.0264 c-7885.7075 8605.0264 -7884.7949 8605.208 -7884.6133 8605.208 c-7883.2329 8605.208 -7882.2168 8604.4014 -7882.2168 8602.9424 c-7882.2168 8602.7871 -7882.2432 8602.2139 -7882.4775 8602.2139 c-7882.6079 8602.2139 -7882.9727 8602.7607 -7883.1021 8602.7607 c-7883.2329 8602.7607 -7883.3101 8602.6826 -7883.3101 8602.5518 c-7883.3101 8602.5264 -7883.2075 8601.875 -7883.2075 8601.7705 c-7883.2075 8600.8076 -7883.8325 8600.4951 -7884.0669 8600.4951 c-7884.5605 8600.4951 -7884.8213 8600.8848 -7884.8213 8601.4063 c-7884.8213 8601.5361 -7884.7949 8601.667 -7884.7695 8601.8232 C-7884.6133 8602.501 -7884.0669 8602.7607 -7884.0669 8603.3066 c-7884.0669 8604.0625 -7885.0557 8604.3232 -7885.8115 8604.3232 c-7886.7231 8604.3232 -7887.2695 8602.708 -7887.2695 8600.9873 c-7887.2695 8599.96 -7886.8765 8598.4785 -7886.4009 8597.3125 c-7885.9727 8596.2666 -7884.9492 8596.2881 -7884.5552 8596.209 c-7884.5449 8596.208 -7883.5605 8596.0059 -7883.2412 8595.7119 c-7882.8276 8595.3281 -7882.6992 8594.5088 -7882.6982 8594.4971 c-7882.6621 8594.1416 -7882.6807 8592.9912 -7881.5845 8592.5557 c-7880.4326 8592.0986 -7879.0088 8591.7285 -7878.0088 8591.7285 c-7876.2896 8591.7285 -7874.6748 8592.2754 -7874.6748 8593.1865 c-7874.6748 8593.9424 -7874.9355 8594.5674 -7875.6909 8594.5674 c-7876.2373 8594.5674 -7876.4985 8594.0205 -7877.1758 8593.8643 C-7877.3325 8593.8369 -7877.4629 8593.8125 -7877.5918 8593.8125 c-7878.1133 8593.8125 -7878.5039 8594.0732 -7878.5039 8594.5674 c-7878.5039 8594.8018 -7878.1919 8595.4258 -7877.2285 8595.4258 c-7877.1235 8595.4258 -7876.4717 8595.3232 -7876.4453 8595.3232 c-7876.3154 8595.3232 -7876.2373 8595.4014 -7876.2373 8595.5313 c-7876.2373 8595.6621 -7876.7837 8596.0254 -7876.7837 8596.1563 c-7876.7837 8596.3916 -7876.2109 8596.417 -7876.0552 8596.417 c-7875.0918 8596.417 -7873.7896 8595.792 -7873.7896 8594.333 c-7873.7896 8594.1504 -7873.9717 8593.291 -7873.9717 8593.083 c-7873.9717 8592.9258 -7873.8936 8592.8486 -7873.7637 8592.8486 c-7873.0332 8592.8486 -7871.8096 8593.5518 -7871.8096 8595.1143 c-7871.8096 8595.8438 -7870.9502 8596.5469 -7870.6108 8596.5469 c-7870.4028 8596.5469 -7869.9604 8595.2969 -7869.7261 8595.2969 cf-7878.3271 8601.7578 m-7878.2246 8602.5537 -7877.9595 8603.2236 -7877.6016 8603.7822 C-7877.6357 8603.7783 -7877.6636 8603.7754 -7877.6846 8603.7754 c-7878.0493 8603.7754 -7878.4668 8603.9326 -7878.7012 8604.167 C-7878.9355 8604.375 -7879.1436 8604.4785 -7879.3262 8604.4785 c-7879.5869 8604.4785 -7879.8472 8604.2197 -7879.8472 8603.6201 c-7879.8472 8602.5146 -7879.0615 8601.9912 -7878.3271 8601.7578 Cf-7874.8311 8599.8545 m-7875.1172 8599.959 -7875.2476 8600.4014 -7875.2476 8600.792 c-7875.2476 8600.8945 -7875.23 8601.04 -7875.1836 8601.1982 C-7875.7646 8600.877 -7876.4727 8600.665 -7877.3354 8600.6289 C-7877.1729 8599.835 -7876.6836 8598.7344 -7875.2739 8598.7344 c-7874.4409 8598.7344 -7874.3101 8599.3594 -7874.3101 8599.4375 c-7874.3101 8599.6201 -7874.4927 8599.751 -7874.8311 8599.8545 Cf-7877.3936 8601.5898 m-7877.3589 8601.5889 -7877.3247 8601.5889 -7877.2949 8601.5889 c-7875.5078 8601.5889 -7873.7461 8603.2871 -7873.4556 8605.5078 C-7875.5215 8605.1162 -7877.2188 8603.252 -7877.3936 8601.5898 Cf*UU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 4)0 Au0 D0 J 0 j 1 w 4 M []0 d0 XR-7892.8833 8611.8447 m-7801.0479 8611.8447 L-7801.0479 8607.5654 L-7892.8833 8607.5654 L-7892.8833 8611.8447 Ln0 O0.729412 0.709804 0.635294 0.760784 0.137255 0.121569 0.12549 Xa-7892.6631 8609.165 m-7893 8609.2314 -7892.4814 8609.4209 -7892.8833 8609.2783 C-7892.8379 8609.1602 -7892.7725 8609.0713 -7892.6631 8609.165 Cf-7802.1675 8609.3311 m-7803.2524 8610.0938 -7804.6816 8609.3232 -7805.8701 8609.8096 C-7806.0098 8609.8418 -7805.8345 8609.3916 -7806.1484 8609.4922 C-7807.3008 8610.085 -7809.1162 8609.7314 -7810.5195 8609.2744 C-7810.4346 8609.1563 L-7810.7017 8609.0713 -7811.0283 8609.4609 -7811.3115 8609.4072 C-7811.3135 8609.3281 -7811.2207 8609.2959 -7811.2861 8609.1885 C-7811.3574 8609.4248 -7811.7983 8609.2979 -7811.9185 8609.4736 C-7812.0303 8609.3818 -7812.0195 8609.1943 -7812.1641 8609.0908 C-7812.3262 8609.3594 L-7812.7769 8609.999 -7813.4209 8609.3154 -7814.0361 8609.6455 C-7814.0063 8609.583 -7813.9453 8609.5342 -7813.9941 8609.4736 C-7814.9814 8609.8623 -7816.2168 8609.79 -7817.3208 8609.9326 C-7817.2769 8609.8369 -7817.2363 8609.665 -7817.3008 8609.5576 C-7817.3555 8609.8408 -7817.6963 8609.9121 -7817.9922 8609.9678 C-7818.1255 8609.6768 -7818.4995 8610.2334 -7818.8467 8610.0732 C-7818.8169 8610.0088 L-7819.0732 8610.3135 -7819.1973 8609.833 -7819.4053 8610.1982 C-7819.5684 8609.9697 L-7819.6807 8610.3799 -7819.9395 8609.7568 -7820.1514 8609.9658 C-7820.1445 8610.0498 L-7820.3442 8610.1494 -7820.4482 8609.9434 -7820.6338 8610.0127 C-7820.6514 8609.9658 L-7821.0854 8610.0732 -7821.3379 8609.8447 -7821.3271 8610.165 C-7821.4795 8609.9082 -7820.9063 8610.0479 -7821.1455 8609.6748 C-7822.5732 8610.0049 -7824.0459 8609.9404 -7825.4834 8609.9463 C-7825.6465 8609.8174 -7825.7505 8609.7783 -7825.7871 8609.6572 C-7825.9307 8609.7217 -7826.3281 8609.7158 -7826.4585 8609.8799 C-7826.4102 8609.873 -7826.5513 8609.7158 -7826.6274 8609.7002 C-7826.8887 8609.5791 -7826.9131 8610.0518 -7827.2002 8609.9082 C-7827.0859 8609.8232 -7827.0469 8609.7197 -7827.0854 8609.6006 C-7827.3301 8609.8506 -7827.6577 8609.8105 -7827.9473 8609.8906 C-7827.9023 8609.8369 -7827.8325 8609.8057 -7827.8433 8609.7041 C-7828.1602 8609.9873 -7828.4209 8609.6455 -7828.6982 8609.8242 C-7828.5947 8609.6396 L-7829.0415 8609.415 -7828.7266 8610.0264 -7829.1128 8609.8936 C-7829.02 8609.835 -7829.0527 8609.7617 -7829.0361 8609.6865 C-7829.3965 8610.0234 -7829.9795 8609.9121 -7830.3389 8610.0264 C-7830.3174 8610.001 -7830.3232 8609.9502 Y-7830.7148 8609.9922 -7831.1245 8609.8877 -7831.5552 8610.0342 C-7831.7119 8609.9521 -7831.5039 8609.583 -7831.9185 8609.6514 C-7831.9033 8610.0225 -7832.6221 8609.8037 -7832.3779 8610.2236 C-7832.7319 8610.1631 -7833.2925 8610.0234 -7833.5283 8610.1494 C-7833.3691 8610.0088 -7833.7007 8609.6953 -7833.4063 8609.665 C-7833.6289 8609.4395 L-7833.5957 8609.2881 -7833.3999 8609.4912 -7833.4707 8609.2998 C-7833.6182 8609.3154 -7834.0479 8609.4609 -7834.1797 8609.4014 C-7834.4531 8609.6289 -7834.7041 8610.0537 -7835.1465 8610.1006 C-7834.9385 8609.9561 -7835.2646 8609.6914 -7835.1235 8609.6279 C-7835.7407 8610.3389 L-7835.8877 8610.3564 -7835.7725 8610.0449 -7835.9854 8610.1426 C-7835.9746 8610.2412 -7836.0674 8610.3018 -7836.1318 8610.3818 C-7836.1875 8610.3389 -7836.7441 8610.4736 -7836.8081 8610.1084 C-7836.8735 8609.9658 -7836.5684 8610.0322 -7836.7314 8609.9014 C-7837.0029 8609.9053 -7837.0151 8610.0303 -7837.2871 8610.0361 C-7837.2925 8609.9873 L-7837.4717 8609.9326 -7837.8213 8610.1426 -7837.6265 8610.3447 C-7837.5015 8610.3564 -7837.6738 8610.125 -7837.4888 8610.2314 C-7837.6152 8610.4434 -7837.9312 8610.5029 -7838.2031 8610.5068 C-7838.1104 8610.4482 -7838.1216 8610.3506 -7838.0845 8610.2471 C-7838.4497 8610.5342 -7838.8369 8610.625 -7839.2451 8610.7441 C-7839.2515 8610.9189 -7839.0928 8610.4287 -7839.0327 8610.5205 C-7839.5557 8610.2793 -7840.1128 8610.8623 -7840.5479 8610.5098 C-7840.4766 8610.4785 -7840.5098 8610.7568 -7840.5146 8610.708 C-7840.7666 8610.6865 -7840.7549 8610.4346 -7840.9189 8610.5273 C-7840.9355 8610.3799 -7841.1255 8610.5752 -7841.2944 8610.6201 C-7841.3818 8610.7266 -7841.3384 8610.5479 -7841.1914 8610.5322 C-7841.4268 8610.6572 -7842.3691 8610.8838 -7842.9131 8610.6689 C-7842.9023 8610.7666 -7843.2471 8611.0273 -7843.3721 8611.0166 C-7843.3232 8610.7881 L-7843.4375 8610.6514 -7843.7422 8610.8076 -7843.7632 8610.6113 C-7844.0303 8610.8896 -7842.7344 8610.376 -7843.0957 8610.5898 C-7843.1895 8610.3994 -7843.5991 8610.9541 -7843.5215 8610.6426 C-7843.7725 8610.6514 -7844.0161 8610.9082 -7844.2559 8610.6943 C-7844.1865 8610.7314 -7844.0522 8610.377 -7844.2549 8610.3936 C-7844.6123 8610.4346 -7844.3564 8610.5029 -7844.6465 8610.5791 C-7844.8281 8610.6729 L-7844.8398 8610.8945 -7845.1475 8610.6426 -7845.0146 8610.8906 C-7845.0586 8610.708 -7845.5337 8611.0049 -7845.4971 8610.6357 C-7845.4473 8610.3447 L-7845.6016 8610.3662 -7845.7002 8610.6514 -7845.8213 8610.7793 C-7845.8418 8610.7529 -7845.8823 8610.6943 -7845.8745 8610.6475 C-7845.8994 8611.0928 -7846.2432 8610.6104 -7846.4268 8610.9541 C-7846.7505 8610.7998 -7847.2495 8610.9404 -7847.4023 8610.6631 C-7847.6514 8610.7979 -7847.8784 8610.958 -7848.1621 8610.8623 C-7848.1055 8610.8193 -7848.0283 8610.8076 -7848.0122 8610.7119 C-7848.1904 8610.5811 -7848.2344 8610.6982 -7848.3975 8610.7705 C-7848.3608 8610.7041 -7848.7539 8610.5098 -7848.9521 8610.3525 C-7849.1992 8610.4854 -7849.1143 8610.7256 -7849.1392 8610.8721 C-7849.3652 8610.4326 -7849.8379 8611.1553 -7850.1211 8610.7568 C-7850.0352 8610.6953 -7849.7598 8610.541 -7849.9658 8610.4307 C-7850.1919 8609.9922 -7850.4219 8610.7549 -7850.7861 8610.5439 C-7850.6968 8610.9082 L-7850.8594 8610.6826 -7851.2334 8611.1201 -7851.1963 8610.749 C-7851.3184 8610.8799 -7851.6265 8610.6279 -7851.5859 8610.9834 C-7852.1846 8610.6826 -7853.0425 8611.165 -7853.4102 8610.5273 C-7853.4961 8610.5869 -7853.7104 8610.5264 -7853.6665 8610.709 C-7853.5239 8610.9072 -7853.4673 8610.5674 -7853.4141 8610.7021 C-7853.4912 8610.7129 -7853.5078 8610.8105 -7853.5161 8610.8594 C-7853.7021 8610.7783 -7853.8486 8610.7529 -7853.6729 8610.457 C-7854.0869 8610.2373 -7854.1001 8611.0615 -7854.6274 8610.9229 C-7854.6035 8610.7754 -7854.6436 8610.7197 -7854.7979 8610.7432 C-7855.0903 8610.9951 L-7855.4312 8610.9365 -7855.2842 8610.6602 -7855.2925 8610.4111 C-7855.4746 8610.4541 -7855.6973 8610.4424 -7855.7803 8610.6279 C-7856.0015 8610.3154 L-7855.8398 8610.541 -7856.1514 8610.4658 -7856.2368 8610.5264 C-7856.1514 8610.4658 L-7856.1846 8610.3594 -7856.3955 8610.4248 -7856.5024 8610.4561 C-7856.4766 8610.6104 -7856.2617 8610.6729 -7856.1445 8610.7178 C-7856.2373 8610.8271 -7856.3823 8610.8018 -7856.5059 8610.9307 C-7856.4648 8610.6865 -7856.8027 8610.7568 -7856.9473 8610.7314 C-7857.1133 8610.6777 -7857.1348 8610.9502 -7857.1831 8610.9424 C-7857.1875 8610.8154 -7857.4541 8610.9209 -7857.3247 8610.7432 C-7857.2681 8610.7021 -7857.1953 8610.8662 -7857.1016 8610.7549 C-7857.2109 8610.6602 -7857.1982 8610.4395 -7857.4258 8610.6006 C-7857.5967 8610.7217 -7857.3818 8611.083 -7857.7061 8610.9287 C-7857.6211 8610.8682 -7857.6055 8610.7705 -7857.5391 8610.6826 C-7857.8433 8610.5557 L-7857.8564 8610.7783 L-7857.8975 8610.7217 -7857.8691 8610.7021 -7857.8877 8610.6729 C-7857.9785 8610.9072 -7858.3521 8610.7441 -7858.4209 8611.0088 C-7858.5742 8611.0322 -7858.7441 8610.8545 -7858.8906 8610.8281 C-7858.8623 8610.8096 L-7859.0415 8610.6777 -7859.2793 8610.7646 -7859.4297 8610.915 C-7859.4219 8610.8662 L-7859.5195 8610.8486 -7859.7505 8610.8838 -7859.8735 8611.0146 C-7860.1201 8610.8457 -7859.9561 8610.1738 -7860.2295 8610.4541 C-7860.48 8610.4609 -7860.6221 8610.8623 -7860.5215 8611.0049 C-7860.9717 8610.8545 -7861.4834 8611.2178 -7861.9009 8610.8721 C-7861.9658 8610.9609 -7861.9248 8611.0186 -7862.0586 8611.0713 C-7862.7197 8610.9834 -7863.4551 8611.335 -7863.9814 8610.8975 C-7863.79 8610.8037 -7863.9688 8610.6748 -7863.9727 8610.5479 C-7864.1309 8610.7471 -7864.1631 8610.3408 -7864.2197 8610.6826 C-7864.2041 8610.8838 -7864.2197 8610.9814 -7864.0337 8611.0625 C-7864.4282 8611.1709 -7865.0283 8611.1709 -7865.2471 8610.9834 C-7865.1377 8611.0762 -7865.2227 8611.1377 -7865.3086 8611.1982 C-7865.2803 8610.877 -7865.5713 8610.8281 -7865.7915 8610.9424 C-7865.8223 8611.1377 L-7865.9658 8610.9365 L-7866.0503 8610.999 -7866.0591 8611.3457 -7866.2773 8611.1592 C-7866.2891 8611.083 -7866.3018 8611.0059 -7866.3418 8610.9502 C-7866.5693 8611.1104 -7866.8906 8611.3818 -7867.1377 8611.2158 C-7867.3398 8610.9307 L-7867.4453 8610.9609 -7867.6235 8611.1338 -7867.4375 8611.2158 C-7867.8594 8611.0439 -7868.1309 8611.0225 -7868.2646 8610.7754 C-7868.9912 8611.377 -7870.0459 8611.4014 -7870.8906 8611.3584 C-7870.8652 8611.2119 L-7871.0923 8611.0752 -7870.9834 8611.4678 -7871.1416 8611.3662 C-7871.0684 8611.2266 -7871.3145 8611.0625 -7871.1362 8610.8906 C-7871.4609 8610.7373 -7871.5547 8611.1455 -7871.7656 8611.2119 C-7871.7979 8611.4033 -7871.5957 8611.0889 -7871.6367 8611.333 C-7871.6729 8611.4014 -7872.0859 8611.1826 -7872.1362 8611.4736 C-7872.2178 8611.3594 -7872.1543 8611.1455 -7872.1104 8611.0273 C-7872.3086 8611.1689 L-7872.5513 8610.8281 -7871.7559 8610.5615 -7872.0107 8610.1426 C-7872.1934 8610.1885 L-7872.3682 8609.8838 -7871.71 8609.8447 -7872.1689 8609.7402 C-7872.3682 8609.8838 -7872.5381 8610.3057 -7872.3608 8610.4346 C-7872.7754 8610.5146 -7872.5527 8611.1279 -7872.9985 8611.1025 C-7873.1201 8610.9326 -7872.6416 8611.0625 -7872.7275 8610.8232 C-7872.9375 8610.5889 -7873.1484 8610.9541 -7873.3354 8610.8721 C-7873.1279 8610.9814 -7873.3032 8611.2754 -7873.4375 8611.3281 C-7873.6641 8611.1914 -7873.29 8611.0537 -7873.6113 8611.0234 C-7873.6641 8611.1914 -7873.9595 8611.3174 -7873.7041 8611.4346 C-7873.8203 8611.8154 -7874.0381 8611.3281 -7874.2129 8611.624 C-7874.3174 8611.3564 -7873.8823 8611.0049 -7874.2354 8610.8711 C-7874.1792 8611.1289 -7874.6704 8611.2217 -7874.4839 8611.6045 C-7874.6221 8611.5303 -7874.6367 8611.3271 -7874.5361 8611.1689 C-7874.7334 8611.0098 -7875.0151 8611.6396 -7875.0801 8611.1279 C-7875.1479 8611.3916 L-7875.21 8611.3057 -7875.2983 8611.2412 -7875.3994 8611.0986 C-7875.5732 8611.0938 -7875.96 8611.4561 -7875.9443 8611.0576 C-7876 8611.0986 -7876.3975 8611.0811 -7876.2441 8611.3564 C-7875.9971 8611.5244 -7875.96 8611.1553 -7875.8223 8611.5273 C-7875.9971 8611.2236 -7876.1787 8611.5674 -7876.3213 8611.6689 C-7876.3447 8611.5146 L-7876.4297 8611.5752 -7876.6255 8611.541 -7876.6787 8611.708 C-7876.6133 8611.6201 -7876.6475 8611.5146 -7876.7148 8611.4775 C-7876.8042 8611.7119 L-7877.1494 8611.8281 -7876.8857 8611.2998 -7877.2217 8611.3682 C-7876.9663 8611.1865 L-7877.0225 8611.2256 -7877.1367 8611.0059 -7877.2979 8611.0791 C-7877.3604 8611.293 -7877.4775 8611.5498 -7877.5313 8611.7158 C-7877.7207 8611.8096 -7877.6162 8611.4746 -7877.8027 8611.6943 C-7877.5586 8611.4365 L-7877.5215 8611.3662 -7877.7231 8611.083 -7877.9761 8611.0889 C-7878.1377 8611.1631 -7878.3887 8611.4717 -7878.1338 8611.5889 C-7878.2607 8611.5928 -7878.4385 8611.4609 -7878.3379 8611.3057 C-7878.6255 8611.3799 -7878.2998 8611.5361 -7878.5479 8611.6689 C-7878.6494 8611.5264 -7878.9658 8611.3232 -7879.1563 8611.1162 C-7878.8975 8610.7578 L-7879.0693 8610.7549 L-7878.8467 8610.4678 -7879.1826 8610.5361 -7879.0566 8610.2334 C-7879.1743 8610.1865 -7879.3169 8610.2891 -7879.4307 8610.3682 C-7879.0864 8610.8525 -7879.8159 8611.0303 -7879.7158 8611.4717 C-7880.1875 8611.5928 -7880.0107 8610.3975 -7880.5024 8611.0889 C-7880.4219 8611.2041 -7880.6533 8611.54 -7880.3564 8611.4121 C-7880.6494 8611.3643 -7880.5557 8611.8555 -7880.9014 8611.6729 C-7880.6455 8611.4912 -7881.1763 8611.2256 -7880.8066 8610.9609 C-7880.8311 8611.1084 -7880.6001 8611.0732 -7880.5435 8611.0322 C-7880.6641 8610.8623 -7880.5186 8610.5869 -7880.8184 8610.5869 C-7881.0015 8610.6289 -7881.2524 8610.6377 -7881.2158 8610.8682 C-7881.2085 8611.1201 -7880.9365 8610.8408 -7881.0537 8611.0967 C-7881.4185 8611.1846 -7881.4795 8610.7998 -7881.6304 8611.249 C-7881.3999 8611.2129 -7881.3423 8611.4736 -7881.3467 8611.6475 C-7881.6143 8611.7529 L-7881.5625 8611.585 L-7881.9922 8611.4639 -7881.6895 8611.8896 -7882.1055 8611.8447 C-7882.3008 8611.5127 L-7882.2017 8611.2266 -7881.6953 8611.6396 -7881.7695 8611.1738 C-7882.04 8611.1553 -7882.1299 8611.3916 -7882.3848 8611.2705 C-7882.3281 8611.2314 -7882.2505 8611.2197 -7882.1943 8611.1777 C-7882.2915 8611.1631 -7882.3877 8610.5449 -7882.7734 8610.9072 C-7882.9727 8611.0479 -7882.8262 8611.0732 -7882.8311 8611.2471 C-7883.2656 8611.2998 -7883.3955 8611.4775 -7883.6753 8611.5049 C-7883.6177 8611.165 -7884.1699 8611.4717 -7883.8608 8611.124 C-7883.7188 8611.3232 -7883.0903 8611.3037 -7882.9365 8610.9785 C-7883.0947 8610.5762 -7882.5952 8611.0361 -7882.5024 8610.6279 C-7882.8506 8610.6182 -7882.8335 8610.2217 -7882.8896 8609.9609 C-7882.9863 8609.9434 -7883.0801 8610.0537 -7883.1377 8610.0938 C-7883.1787 8610.3389 -7883.0522 8610.335 -7883.0449 8610.5869 C-7883.4336 8610.5205 -7883.8081 8610.6572 -7884.0225 8610.8945 C-7884.1523 8610.7744 -7884.1113 8610.5303 -7883.9575 8610.5068 C-7884.4199 8610.5791 -7884.9141 8610.5449 -7885.3535 8610.4717 C-7885.0693 8610.8711 -7885.8433 8610.5654 -7885.6494 8610.8975 C-7885.4141 8610.9873 -7885.2119 8611.2705 -7885.3418 8611.4502 C-7885.4888 8611.4248 -7885.3369 8611.2754 -7885.3984 8611.1904 C-7885.5859 8611.4082 -7885.6895 8610.8408 -7885.8735 8611.1846 C-7885.4512 8611.0557 -7885.7915 8610.6982 -7885.7139 8610.3857 C-7886.0186 8610.5615 -7885.7007 8610.1631 -7886.0024 8610.1631 C-7886.3057 8610.3369 -7886.6787 8610.4736 -7887.0161 8610.541 C-7887.4399 8610.2441 -7888.0898 8610.5361 -7888.4683 8610.5479 C-7888.6665 8610.3896 -7888.5322 8610.0361 -7888.7471 8609.9746 C-7888.9995 8609.9814 -7888.5601 8610.3564 -7888.9336 8610.1943 C-7888.8975 8610.124 L-7889.0107 8610.2061 -7889.5825 8609.8838 -7889.6929 8610.3916 C-7889.5776 8610.0088 L-7889.6475 8609.9736 -7889.7119 8610.0615 -7889.7695 8610.1025 C-7889.7725 8609.9775 -7889.8535 8609.8643 -7889.7402 8609.7822 C-7889.9707 8609.5186 -7890.2241 8609.8242 -7890.4746 8609.835 C-7890.3135 8610.0615 L-7890.7422 8610.2393 -7891.0293 8610.0146 -7891.4443 8610.0938 C-7891.4316 8609.8721 L-7891.6787 8610.0049 L-7891.6182 8609.79 -7891.8447 8609.6514 -7891.9751 8609.8311 C-7891.3335 8609.2881 L-7891.1553 8609.4189 -7891.5283 8609.5557 -7891.4165 8609.7744 C-7891.3213 8609.9658 -7890.9375 8609.9053 -7890.8755 8609.6914 C-7891.0225 8609.667 -7891.0293 8609.7158 -7891.1436 8609.7959 C-7891.1919 8609.4873 -7890.9688 8609.499 -7890.8584 8609.293 C-7890.9355 8609.3057 -7891.0449 8609.2119 -7891.0615 8609.3096 C-7890.9102 8609.1592 -7890.7578 8609.1357 -7890.5059 8609.1279 C-7890.6763 8609.249 -7890.4131 8609.3193 -7890.4775 8609.4072 C-7890.4575 8609.1357 -7890.2168 8609.0518 -7889.9053 8609.1279 C-7889.6831 8609.4424 -7889.3208 8608.9258 -7888.96 8609.0127 C-7889.1064 8609.2881 -7889.2935 8609.5088 -7889.5127 8609.6201 C-7889.2861 8609.7578 -7889.2607 8609.6113 -7889.0337 8609.751 C-7888.9238 8609.5449 -7888.8457 8609.2314 -7888.5503 8609.1064 C-7888.5342 8609.3096 L-7888.2666 8609.2061 -7888.2666 8608.9053 -7887.9258 8608.9609 C-7887.3418 8609.0615 -7886.7407 8609.0615 -7886.2949 8609.0869 C-7886.2783 8609.2891 L-7886.0303 8608.8555 -7885.4521 8609.1289 -7885.1182 8608.9365 C-7884.5503 8609.1318 -7883.8848 8608.7432 -7883.5938 8609.0928 C-7882.5913 8608.9365 -7881.7148 8608.7842 -7880.6768 8608.8584 C-7880.8516 8609.1533 L-7880.6655 8608.9365 -7880.7305 8609.3232 -7880.5479 8609.2793 C-7880.7578 8609.0439 -7880.2949 8608.9736 -7880.1665 8608.793 C-7879.7041 8609.0225 -7879.1104 8608.7725 -7878.7007 8608.5654 C-7878.6846 8608.7686 L-7878.2705 8608.3877 -7877.7759 8608.7217 -7877.2598 8608.7842 C-7877.2007 8608.8682 -7877.1074 8609.0586 -7876.9536 8609.0361 C-7876.6738 8608.708 -7876.5273 8608.7314 -7876.1167 8608.5264 C-7875.8169 8608.5264 -7875.3301 8608.6074 -7875.0254 8608.7354 C-7873.8975 8608.2744 -7872.7456 8608.5693 -7871.5732 8608.292 C-7871.4888 8608.5303 L-7870.3521 8608.0205 -7868.9541 8608.4834 -7867.9839 8608.2217 C-7868.0776 8608.6289 L-7867.7734 8608.7549 -7867.3843 8608.5225 -7867.4619 8608.2334 C-7867.1567 8608.3584 -7866.7007 8608.0361 -7866.5068 8608.3711 C-7866.1953 8608.4463 -7866.1255 8608.1826 -7865.8662 8608.1279 C-7865.2422 8608.2822 -7865.0107 8608.2471 -7864.4224 8608.1709 C-7864.5684 8608.1455 L-7864.6328 8608.2354 -7864.6387 8608.4082 -7864.4922 8608.4346 C-7864.2725 8608.3213 -7863.6846 8608.5439 -7863.9033 8608.0576 C-7863.2754 8608.3389 -7862.4385 8607.8281 -7861.8271 8608.208 C-7861.8789 8608.0752 -7861.7246 8608.0498 -7861.6602 8607.96 C-7861.1089 8607.9541 -7860.5293 8608.2256 -7860.0898 8607.999 C-7860.0024 8608.0654 -7860.2295 8608.2256 -7860.0049 8608.2393 C-7859.8721 8608.1885 -7860.0024 8608.0654 -7859.8384 8607.9912 C-7858.9453 8607.7432 -7858.0303 8608.2471 -7857.2188 8608.1826 C-7855.7754 8607.9258 -7854.2695 8608.0557 -7852.8867 8608.0127 C-7852.9023 8608.1104 L-7852.4395 8607.7373 -7851.8159 8608.4922 -7851.4463 8607.9307 C-7851.3369 8608.0234 -7851.0283 8607.9746 -7851.1094 8608.1631 C-7850.7407 8607.8994 -7850.0771 8608.4111 -7849.5439 8608.0762 C-7849.5928 8608.0674 -7849.6211 8608.0869 -7849.6777 8608.1289 C-7849.1392 8608.3447 -7848.6641 8608.0498 -7848.0957 8608.2441 C-7848.1533 8608.2871 -7848.2583 8608.3174 -7848.2754 8608.415 C-7848.0557 8608.6025 -7847.7549 8608.0029 -7847.6348 8608.4736 C-7847.5088 8608.4697 -7847.5449 8608.2373 -7847.6221 8608.251 C-7846.3779 8608.4346 -7845.0498 8608.1338 -7843.7549 8608.0264 C-7842.8271 8608.3066 -7843.6982 8608.8193 -7842.9663 8608.4678 C-7842.9063 8608.5586 -7842.9229 8608.2881 -7842.9131 8608.3857 C-7842.6299 8608.2529 -7842.4717 8608.9111 -7842.2754 8608.665 C-7842.3564 8608.376 -7842.1445 8608.5029 -7842.1387 8608.3271 C-7841.5713 8608.5146 -7841.4575 8608.7754 -7841.0098 8608.5557 C-7841.0435 8608.708 L-7840.5186 8608.2783 -7839.9102 8608.5088 -7839.4673 8608.0127 C-7836.5728 8607.9229 -7833.7983 8607.6475 -7830.9761 8607.5898 C-7828.1865 8607.6846 -7825.4551 8607.4609 -7822.6221 8607.7256 C-7821.9585 8608.125 -7821.9087 8608.1143 -7821.1797 8607.9521 C-7821.2095 8608.0166 -7821.2549 8608.0322 -7821.2061 8608.0928 C-7821.1699 8607.7646 -7820.6929 8608.0615 -7820.6235 8607.749 C-7819.5762 8607.8096 -7818.6113 8607.7197 -7817.5337 8607.7178 C-7817.7041 8607.7529 -7817.7896 8608.0205 -7817.5869 8607.999 C-7817.3755 8607.79 L-7817.3408 8607.8818 L-7817.2021 8607.833 -7817.0513 8607.6709 -7817.1943 8607.5654 C-7814.4873 8607.2822 -7811.8242 8607.9404 -7809.1729 8607.8594 C-7808.5435 8607.9961 -7807.6475 8607.8711 -7806.9629 8607.8037 C-7804.9355 8608.2412 -7803.1079 8608.5938 -7801.0479 8608.2881 C-7801.3169 8609.1357 -7802.1675 8609.3311 Vf-7892.2578 8609.1318 m-7892.1855 8609.2959 -7891.9497 8609.3857 -7892.1377 8609.6045 C-7892.1611 8609.4502 -7892.2822 8609.2783 -7892.2578 8609.1318 Cf-7885.9619 8610.8193 m-7885.9536 8610.7705 -7885.8721 8610.8857 -7885.8521 8610.9121 C-7885.9297 8610.9248 -7886.0024 8611.0625 -7886.0645 8610.9775 C-7885.9854 8610.9658 -7885.9976 8610.8877 -7885.9619 8610.8193 Cf-7884.3521 8610.917 m-7884.3765 8611.0625 -7884.7207 8611.1777 -7884.9238 8611.1953 C-7884.3521 8610.917 Lf-7882.8521 8611.5186 m-7882.7227 8611.6416 -7882.7583 8611.709 -7882.9326 8611.7041 C-7882.9453 8611.6279 -7882.8877 8611.5889 -7882.8521 8611.5186 Cf-7882.7456 8611.1865 m-7882.6211 8611.1826 -7882.5591 8611.2686 -7882.4985 8611.3525 C-7882.5029 8611.2266 -7882.7871 8611.4307 -7882.7456 8611.1865 Cf-7879.4893 8611.6104 m-7879.4111 8611.5986 -7879.2417 8611.4775 -7879.1689 8611.6396 C-7879.2505 8611.5264 -7879.5498 8611.8242 -7879.4893 8611.6104 Cf-7877.9761 8611.3896 m-7877.9272 8611.3994 -7877.9072 8611.4258 -7877.8506 8611.3857 C-7877.7607 8611.4521 -7877.8555 8611.5586 -7877.9312 8611.5723 C-7877.9761 8611.3896 Lf-7850.4287 8610.8037 m-7850.5923 8610.876 L-7850.5684 8610.7314 L-7850.4287 8610.8037 Lf-7838.3574 8610.7959 m-7838.1943 8610.7041 -7838.2441 8610.9326 -7838.2168 8610.9541 C-7838.3643 8610.9697 -7838.1621 8610.7744 -7838.3574 8610.7959 Cf-7831.8486 8610.0674 m-7831.8984 8610.0713 L-7831.8818 8609.7725 L-7831.8486 8610.0674 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 5)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7893 8611.8896 m-7867.0591 8611.8896 L-7867.0591 8585.9453 L-7893 8585.9453 L-7893 8611.8896 Ln*u1 D0 O0.627451 0 0.831372 0 0.435294 0.705882 0.309804 Xa-7867.9858 8605.8047 m-7867.2168 8605.8477 -7867.0718 8606.6357 -7867.4526 8606.6982 c-7867.8086 8606.7568 -7867.9175 8606.9658 -7867.7866 8607.1484 c-7867.6675 8607.3174 -7867.1934 8607.6992 -7867.0635 8607.8281 C-7867.0615 8607.8281 -7867.0635 8610.5576 -7867.0635 8610.5586 c-7867.0703 8611.3994 -7867.6494 8611.2891 -7868.3896 8611.8896 C-7871.1104 8611.8896 L-7871.2085 8611.7998 -7871.2993 8611.7002 -7871.3818 8611.5889 c-7871.6943 8611.1992 -7871.8774 8611.043 -7872.0063 8611.043 c-7872.1377 8611.043 -7872.1895 8611.1729 -7872.2158 8611.3818 c-7872.2417 8611.5625 -7872.4238 8611.6416 -7872.6318 8611.6416 c-7872.8662 8611.6416 -7873.1006 8611.5117 -7873.1006 8611.251 c-7873.1006 8610.7822 -7873.1279 8608.541 -7873.5186 8608.541 c-7873.5967 8608.541 -7873.7002 8608.6201 -7873.8311 8608.7773 c-7874.6025 8609.7334 -7876.0513 8611.1426 -7878.0176 8611.8896 C-7883.5835 8611.8896 L-7884.9722 8611.3418 -7885.9951 8610.4033 -7886.7495 8609.3232 c-7888.8066 8606.3809 -7889.0142 8606.0674 -7890.3423 8606.0674 c-7891.1768 8606.0674 -7892.1919 8606.5889 -7892.1919 8608.0449 c-7892.1919 8608.751 -7891.4111 8609.7139 -7890.6553 8609.7139 c-7889.9521 8609.7139 -7889.5615 8609.2197 -7889.5615 8608.8545 c-7889.5615 8608.751 -7889.6665 8608.333 -7889.6665 8608.2559 c-7889.6665 8607.8125 -7889.3535 8607.8125 -7889.2754 8607.8125 c-7888.9897 8607.8125 -7888.7295 8608.1768 -7888.7295 8608.751 c-7888.7295 8609.5576 -7889.4585 8610.625 -7890.6294 8610.625 c-7891.9839 8610.625 -7893 8609.4277 -7893 8608.0215 c-7893 8605.4424 -7890.8374 8605.1826 -7890.2646 8605.1826 c-7889.5361 8605.1826 -7888.6504 8605.4424 -7888.1294 8605.8594 C-7888.0254 8605.9375 -7887.9209 8605.9902 -7887.8433 8605.9902 c-7887.6606 8605.9902 -7887.5303 8605.7793 -7887.5303 8605.4951 c-7887.5303 8605.0791 -7886.4102 8600.624 -7882.1382 8600.624 c-7880.8105 8600.624 -7878.6753 8601.6406 -7878.6753 8604.0889 c-7878.6753 8606.5625 -7880.3154 8607.3711 -7881.3057 8607.3711 c-7882.2959 8607.3711 -7883.4155 8606.4854 -7883.4155 8605.3643 c-7883.4155 8604.0361 -7882.3218 8603.751 -7881.9038 8603.751 c-7881.5137 8603.751 -7881.0713 8603.8799 -7880.9663 8604.167 C-7880.8623 8604.5049 -7880.7329 8604.6865 -7880.5498 8604.6865 c-7880.4722 8604.6865 -7879.8462 8604.5576 -7879.8462 8603.7227 c-7879.8462 8601.7969 -7881.9038 8601.5879 -7882.4248 8601.5879 c-7884.3535 8601.5879 -7886.6958 8603.8018 -7886.6958 8606.3281 c-7886.6958 8609.6357 -7883.7534 8611.3818 -7880.7583 8611.3818 c-7877.6064 8611.3818 -7876.4097 8609.584 -7876.4097 8609.2705 c-7876.4097 8609.0361 -7877.6592 8608.5938 -7877.6592 8608.3857 c-7877.6592 8608.0479 -7876.9561 8607.1885 -7876.2266 8607.1885 c-7874.6631 8607.1885 -7873.96 8605.9639 -7873.96 8605.2354 c-7873.96 8605.1025 -7874.0386 8605.0264 -7874.1943 8605.0264 c-7874.4033 8605.0264 -7875.2622 8605.208 -7875.4458 8605.208 c-7876.0967 8605.208 -7877.2314 8605.1533 -7877.9678 8604.0449 c-7878.5854 8603.1182 -7878.1143 8602.2031 -7878.3994 8601.4512 c-7878.5352 8601.0908 -7879.9375 8599.8369 -7879.9521 8599.6533 C-7879.9727 8599.6748 L-7880.1943 8599.6748 -7881.5566 8599.3584 -7882.7842 8598.4209 C-7882.7783 8598.4854 -7882.7744 8598.5518 -7882.7744 8598.6221 c-7882.7744 8599.7432 -7883.8936 8600.6279 -7884.8838 8600.6279 c-7885.8745 8600.6279 -7887.5142 8599.8193 -7887.5142 8597.3457 c-7887.5142 8595.3359 -7886.0762 8594.292 -7884.8262 8593.9834 C-7884.6875 8592.6572 -7883.6494 8590.8193 -7881.3794 8590.8193 c-7878.9058 8590.8193 -7878.0977 8592.46 -7878.0977 8593.4512 c-7878.0977 8594.4395 -7878.9834 8595.5586 -7880.1025 8595.5586 c-7880.1934 8595.5586 -7880.2783 8595.5557 -7880.3599 8595.5439 C-7879.2471 8596.9063 -7879.0498 8598.627 -7879.0498 8598.752 C-7878.6602 8599.4736 -7878.1743 8600.0303 v-7877.3174 8601.0146 -7877.4995 8602.0928 -7877.2935 8602.7607 c-7876.9185 8603.9873 -7876.4346 8602.6826 -7876.4346 8602.5518 c-7876.4346 8602.5254 -7876.5391 8601.875 -7876.5391 8601.7695 c-7876.5391 8600.8076 -7875.9146 8600.4951 -7875.6802 8600.4951 c-7875.1846 8600.4951 -7874.9248 8600.8848 -7874.9248 8601.4063 c-7874.9248 8601.5361 -7874.9502 8601.665 -7874.9766 8601.8223 C-7875.1328 8602.5 -7875.6802 8602.7607 -7875.6802 8603.3066 c-7875.6802 8604.0625 -7875.0542 8604.3232 -7874.2998 8604.3232 C-7872.8096 8604.7949 -7872.4238 8605.8076 v-7872.0386 8606.8193 -7872.4238 8607.4746 -7872.3721 8607.7344 c-7871.8774 8610.5742 -7870.3408 8611.3818 -7869.8193 8611.3818 c-7868.8286 8611.3818 -7868.3354 8610.4697 -7868.3354 8609.5576 c-7868.3354 8608.9072 -7869.0913 8608.1514 -7869.2471 8607.917 c-7869.4287 8607.6572 -7870.2065 8606.6855 -7870.4272 8606.5029 c-7870.5088 8606.4346 -7870.9038 8606.2139 -7871.0386 8605.9033 C-7871.3335 8605.5146 -7871.3486 8605.333 -7871.9814 8604.9521 c-7872.5454 8604.6143 -7872.1265 8604.3066 Y-7871.8394 8604.0732 -7871.7881 8603.3711 -7871.7881 8602.8496 c-7871.7881 8601.9111 -7870.8232 8601.2871 -7870.5889 8601.2871 c-7870.4595 8601.2871 -7870.3545 8601.3643 -7870.3545 8601.4951 C-7870.4858 8602.0938 -7870.4858 8602.1982 v-7870.4858 8602.251 -7870.6934 8603.7109 -7870.6665 8603.8496 C-7870.4551 8603.9277 -7870.0635 8603.4307 -7869.6416 8603.0361 C-7868.6958 8602.54 -7867.5674 8600.2207 -7867.5674 8598.1865 c-7867.5674 8594.9053 -7869.4951 8592.249 -7872.8042 8592.249 c-7875.3286 8592.249 -7877.3618 8594.1758 -7877.3618 8596.1289 c-7877.3618 8596.7793 -7877.0479 8598.6826 -7875.3286 8598.6826 c-7874.7305 8598.6826 -7874.4697 8598.4209 -7874.4697 8598.1602 c-7874.4697 8597.9785 -7874.5742 8597.7695 -7874.7822 8597.5361 C-7875.0166 8597.3008 -7875.1729 8596.8848 -7875.1729 8596.5205 c-7875.1729 8596.2871 -7874.9385 8595.1377 -7873.5854 8595.1377 c-7872.4648 8595.1377 -7871.5791 8596.2598 -7871.5791 8597.249 c-7871.5791 8598.2393 -7872.3857 8599.8799 -7874.8608 8599.8799 c-7877.3096 8599.8799 -7878.3247 8597.7441 -7878.3247 8596.416 c-7878.3247 8591.9609 -7873.6631 8591.415 -7873.4546 8591.415 c-7873.1685 8591.415 -7872.96 8591.2842 -7872.96 8591.1025 c-7872.96 8591.0234 -7873.0122 8590.9199 -7873.0898 8590.8154 C-7873.5073 8590.2949 -7873.7666 8589.4082 -7873.7666 8588.6807 c-7873.7666 8588.1064 -7873.5073 8585.9453 -7870.9282 8585.9453 c-7869.5215 8585.9453 -7868.3232 8586.7783 -7868.3232 8588.1338 c-7868.3232 8589.3057 -7869.3921 8590.0352 -7870.1982 8590.0352 c-7870.7715 8590.0352 -7871.1362 8589.7744 -7871.1362 8589.4873 c-7871.1362 8589.4082 -7871.1362 8589.0986 -7870.6934 8589.0986 c-7870.6152 8589.0986 -7870.1982 8589.2021 -7870.0942 8589.2021 c-7869.7295 8589.2021 -7869.2354 8588.8105 -7869.2354 8588.1064 c-7869.2354 8587.248 -7870.2246 8586.7529 -7870.9014 8586.7529 c-7872.3599 8586.7529 -7872.8818 8587.7686 -7872.8818 8588.6016 c-7872.8818 8589.9307 -7872.5698 8590.1377 -7869.6265 8592.1953 c-7868.5439 8592.9512 -7867.6064 8593.9746 -7867.0591 8595.3623 C-7867.0591 8600.9277 L-7867.4951 8602.0713 -7868.1538 8603.0391 -7868.8174 8603.8018 C-7870.4351 8605.2373 -7870.5034 8605.665 -7867.9858 8605.8047 cf0 D-7886.3169 8596.876 m-7886.3169 8597.4746 -7886.0562 8597.7373 -7885.7959 8597.7373 c-7885.6138 8597.7373 -7885.4058 8597.6318 -7885.1714 8597.4238 C-7884.9375 8597.1895 -7884.5195 8597.0342 -7884.1553 8597.0342 c-7884.1338 8597.0342 -7884.1055 8597.0361 -7884.0713 8597.04 C-7884.4287 8596.4785 -7884.6943 8595.8096 -7884.7969 8595.0156 C-7885.5313 8595.249 -7886.3169 8595.7725 -7886.3169 8596.876 cf-7880.7798 8592.6943 m-7880.7798 8592.6162 -7880.9102 8591.9912 -7881.7432 8591.9912 c-7883.1538 8591.9912 -7883.6431 8593.0908 -7883.8047 8593.8877 C-7882.9424 8593.9209 -7882.2354 8594.1338 -7881.6538 8594.4551 C-7881.7002 8594.2969 -7881.7178 8594.1514 -7881.7178 8594.0498 c-7881.7178 8593.6592 -7881.5874 8593.2158 -7881.3008 8593.1113 C-7880.9614 8593.0059 -7880.7798 8592.877 -7880.7798 8592.6943 cf-7879.9258 8598.7646 m-7880.2158 8596.5439 -7881.9785 8594.8447 -7883.7646 8594.8447 c-7883.7935 8594.8447 -7883.8281 8594.8457 -7883.8633 8594.8477 C-7883.6895 8596.5088 -7881.9912 8598.3721 -7879.9258 8598.7646 Cf*UU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 7)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7842.0845 8611.8896 m-7842.0845 8585.9473 L-7893 8585.9473 L-7893 8611.8896 L-7842.0845 8611.8896 Ln*u0 O0.627451 0 0.831372 0 0.435294 0.705882 0.309804 Xa-7845.1978 8592.7197 m-7845.3535 8592.5889 -7845.4321 8592.4854 -7845.4321 8592.4072 c-7845.4321 8592.0166 -7843.1914 8591.9902 -7842.7222 8591.9902 c-7842.4614 8591.9902 -7842.3325 8591.7559 -7842.3325 8591.5215 c-7842.3325 8591.3125 -7842.4102 8591.1309 -7842.5918 8591.1025 c-7842.8008 8591.0791 -7842.9302 8591.0264 -7842.9302 8590.8945 c-7842.9302 8590.7666 -7842.7744 8590.584 -7842.3838 8590.2705 C-7842.2734 8590.1885 -7842.1738 8590.0986 -7842.0845 8590 C-7842.0845 8587.2783 L-7842.6831 8586.5361 -7843.7046 8586.0518 -7844.5449 8586.0518 c-7845.1714 8586.0518 -7845.8745 8586.417 -7846.1089 8586.7031 C-7846.2383 8586.833 -7846.3945 8586.8848 -7846.5503 8586.8848 c-7846.7075 8586.8848 -7846.8374 8586.833 -7846.8896 8586.7295 c-7847.0718 8586.3389 -7847.4102 8586.0791 -7847.8794 8586.0791 c-7848.6353 8586.0791 -7851.5 8588.7607 -7851.5 8589.5146 c-7851.5 8589.6465 -7851.3955 8589.6982 -7851.2129 8589.6982 c-7850.9785 8589.6982 -7850.5879 8589.5938 -7850.2241 8589.4111 C-7849.9897 8589.3066 -7848.8955 8588.501 -7848.6079 8588.501 c-7848.2695 8588.501 -7848.0352 8589.3066 -7847.6978 8589.3066 c-7847.4102 8589.3066 -7846.3169 8588.3174 -7846.0566 8588.1357 c-7845.8223 8587.9785 -7845.0664 8587.2236 -7844.4155 8587.2236 c-7843.5039 8587.2236 -7842.5918 8587.7178 -7842.5918 8588.708 c-7842.5918 8589.2295 -7843.3994 8590.7666 -7846.2383 8591.2607 c-7846.4995 8591.3125 -7847.8535 8591.2871 -7848.1665 8591.3125 c-7848.4785 8591.3389 -7850.0161 8590.8711 -7850.3535 8590.792 c-7851.3955 8590.5576 -7851.4736 8590.5576 -7853.4272 8590.5576 c-7853.5576 8590.5576 -7853.6362 8590.5576 -7853.6362 8590.4785 c-7853.6362 8590.4277 -7853.6094 8590.3496 -7853.5313 8590.2461 C-7853.2705 8589.8545 -7853.0361 8589.333 -7853.0361 8588.7344 c-7853.0361 8587.4063 -7854.3906 8586.0518 -7855.9014 8586.0518 c-7858.8184 8586.0518 -7858.8184 8587.7705 -7858.8184 8588.0049 c-7858.8184 8588.5518 -7858.4795 8589.6719 -7857.2295 8589.6719 c-7856.5264 8589.6719 -7856.2402 8589.333 -7856.2402 8589.0205 c-7856.2402 8588.7871 -7856.3706 8588.6045 -7856.5527 8588.5264 c-7856.8135 8588.4209 -7856.9175 8588.292 -7856.9175 8588.1621 c-7856.9175 8587.9014 -7856.5527 8587.667 -7856.1094 8587.667 c-7855.3022 8587.667 -7854.5474 8588.4482 -7854.5474 8589.0986 c-7854.5474 8591.1826 -7858.8975 8591.7822 -7859.1313 8591.7822 c-7859.4185 8591.7822 -7859.6777 8591.7041 -7859.8862 8591.3916 C-7862.1255 8588.2686 -7866.0273 8585.9521 -7867.54 8585.9482 C-7867.54 8585.9482 L-7867.5415 8585.9482 -7867.5415 8585.9482 -7867.5425 8585.9482 c-7867.5435 8585.9482 -7867.5435 8585.9482 -7867.5439 8585.9482 C-7867.5439 8585.9482 L-7869.5498 8585.9512 -7873.1675 8588.5273 -7875.1978 8591.3916 c-7875.4063 8591.7041 -7875.6665 8591.7822 -7875.9526 8591.7822 c-7877.3071 8591.7822 -7880.8496 8590.6094 -7880.8496 8588.7344 c-7880.8496 8588.1621 -7880.5103 8587.7178 -7879.8081 8587.7178 c-7879.1558 8587.7178 -7878.7134 8587.9014 -7878.7134 8588.1094 c-7878.7134 8588.2139 -7878.8706 8588.3438 -7879.1558 8588.4746 C-7879.3135 8588.5264 -7879.4175 8588.708 -7879.4175 8588.917 c-7879.4175 8589.3857 -7879 8589.9854 -7877.8281 8589.9854 c-7876.6558 8589.9854 -7876.1875 8589.2813 -7876.1875 8588.5518 c-7876.1875 8587.2236 -7877.3071 8586 -7879.6777 8586 c-7881.6313 8586 -7882.5679 8587.249 -7882.5679 8588.3174 c-7882.5679 8589.3857 -7881.9697 8589.751 -7881.6826 8590.1152 c-7881.5786 8590.2461 -7881.5264 8590.3232 -7881.5264 8590.375 c-7881.5264 8590.4541 -7881.6055 8590.4785 -7881.7607 8590.4785 c-7882.3857 8590.4785 -7885.1729 8590.9482 -7885.7466 8590.9482 c-7886.4751 8590.9482 -7892.4395 8590.9482 -7892.4395 8588.8906 c-7892.4395 8587.9258 -7891.6846 8587.4326 -7890.7983 8587.4326 c-7890.1475 8587.4326 -7889.2881 8588.3711 -7888.8457 8588.6826 c-7888.1426 8589.2041 -7887.6206 8589.2041 Y-7887.4648 8589.2041 -7887.3862 8589.1504 -7887.3599 8589.0449 C-7887.2305 8588.0313 -7887.1519 8587.8232 -7886.8662 8587.8232 c-7886.3975 8587.8232 -7885.5898 8588.5791 -7885.4072 8588.9697 c-7885.2778 8589.2559 -7884.9902 8589.3857 -7884.7041 8589.3857 c-7884.4185 8589.3857 -7884.0791 8589.2559 -7884.0791 8588.8125 c-7884.0791 8587.7969 -7886.71 8586.0791 -7887.2046 8586.0791 c-7887.6738 8586.0791 -7888.0122 8586.3389 -7888.1943 8586.7295 c-7888.2466 8586.833 -7888.3774 8586.8848 -7888.5327 8586.8848 c-7888.6895 8586.8848 -7888.8457 8586.833 -7888.9761 8586.7031 C-7889.21 8586.417 -7889.9126 8586.0518 -7890.5386 8586.0518 c-7891.3794 8586.0518 -7892.3999 8586.5361 -7893 8587.2783 C-7893 8589.9551 L-7892.9082 8590.0625 -7892.8081 8590.1689 -7892.7002 8590.2705 C-7892.4395 8590.5322 -7892.3359 8590.6865 -7892.3359 8590.8184 c-7892.3359 8590.9746 -7892.9346 8591.3916 -7892.9346 8591.5215 c-7892.9346 8592.1982 -7892.3882 8592.1982 -7891.1895 8592.1982 c-7891.0063 8592.1982 -7890.1738 8592.1465 -7890.0176 8592.1465 c-7889.7568 8592.1465 -7889.6274 8592.2256 -7889.6274 8592.3545 c-7889.6274 8592.459 -7889.7305 8592.5889 -7889.8862 8592.7197 c-7890.8442 8593.4912 -7892.2529 8594.9404 -7893 8596.9063 C-7893 8602.4727 L-7892.4526 8603.8613 -7891.5166 8604.8838 -7890.4336 8605.6396 c-7887.4912 8607.6953 -7887.1782 8607.9033 -7887.1782 8609.2314 c-7887.1782 8610.0654 -7887.6992 8611.0811 -7889.1582 8611.0811 c-7889.8354 8611.0811 -7890.8242 8610.5869 -7890.8242 8609.7266 c-7890.8242 8609.0234 -7890.3306 8608.6338 -7889.9648 8608.6338 c-7889.8618 8608.6338 -7889.4438 8608.7373 -7889.3662 8608.7373 c-7888.9238 8608.7373 -7888.9238 8608.4248 -7888.9238 8608.3457 c-7888.9238 8608.0605 -7889.2881 8607.7998 -7889.8618 8607.7998 c-7890.6685 8607.7998 -7891.7358 8608.5273 -7891.7358 8609.7002 c-7891.7358 8611.0557 -7890.5386 8611.8887 -7889.1318 8611.8887 c-7886.5537 8611.8887 -7886.2935 8609.7266 -7886.2935 8609.1533 c-7886.2935 8608.4248 -7886.5537 8607.5391 -7886.9702 8607.0176 C-7887.0479 8606.9121 -7887.1006 8606.8096 -7887.1006 8606.7324 c-7887.1006 8606.5498 -7886.8911 8606.4189 -7886.6055 8606.4189 c-7886.3975 8606.4189 -7881.7344 8605.8721 -7881.7344 8601.4189 c-7881.7344 8600.0908 -7882.7515 8597.9551 -7885.1992 8597.9551 c-7887.6738 8597.9551 -7888.4814 8599.5957 -7888.4814 8600.585 c-7888.4814 8601.5752 -7887.5962 8602.6943 -7886.4751 8602.6943 c-7885.1206 8602.6943 -7884.8862 8601.5488 -7884.8862 8601.3145 c-7884.8862 8600.9512 -7885.0435 8600.5322 -7885.2778 8600.2988 C-7885.4858 8600.0625 -7885.5898 8599.8555 -7885.5898 8599.6729 c-7885.5898 8599.4111 -7885.3286 8599.1533 -7884.7305 8599.1533 c-7883.0122 8599.1533 -7882.6992 8601.0557 -7882.6992 8601.7041 c-7882.6992 8603.6592 -7884.7305 8605.585 -7887.2568 8605.585 c-7890.5649 8605.585 -7892.4922 8602.9297 -7892.4922 8599.6475 c-7892.4922 8597.3564 -7891.0586 8594.6992 -7890.0698 8594.6992 c-7889.6519 8594.6992 -7889.5742 8595.4785 -7889.5742 8595.6367 c-7889.5742 8595.7402 -7889.7046 8596.3398 Y-7889.7046 8596.4697 -7889.6006 8596.5479 -7889.4702 8596.5479 c-7889.2358 8596.5479 -7888.2729 8595.9229 -7888.2729 8594.9854 c-7888.2729 8594.4648 -7888.2207 8593.7607 -7887.9336 8593.5264 c-7887.7524 8593.3711 -7886.5801 8592.8496 -7886.3457 8592.8496 c-7886.2144 8592.8496 -7886.1367 8592.9277 -7886.1367 8593.085 c-7886.1367 8593.292 -7886.3193 8594.2041 -7886.3193 8594.3857 c-7886.3193 8595.7666 -7885.5122 8596.7822 -7884.0527 8596.7822 c-7883.8975 8596.7822 -7883.3242 8596.7568 -7883.3242 8596.5225 c-7883.3242 8596.3916 -7883.8711 8596.0264 -7883.8711 8595.8975 c-7883.8711 8595.7666 -7883.7935 8595.6865 -7883.6626 8595.6865 c-7883.6367 8595.6865 -7882.9858 8595.792 -7882.8809 8595.792 c-7881.9175 8595.792 -7881.6055 8595.168 -7881.6055 8594.9336 c-7881.6055 8594.4385 -7881.9951 8594.1777 -7882.5166 8594.1777 c-7882.6465 8594.1777 -7882.7778 8594.2041 -7882.9336 8594.2305 C-7883.6104 8594.3857 -7883.8711 8594.9336 -7884.4185 8594.9336 c-7885.1729 8594.9336 -7885.4336 8593.9434 -7885.4336 8593.1885 c-7885.4336 8592.2754 -7883.8184 8591.7295 -7882.0991 8591.7295 c-7880.1465 8591.7295 -7876.5786 8593.1367 -7876.5786 8593.8652 C-7877.6982 8597.1475 -7877.8545 8597.7725 v-7877.9063 8598.0059 -7877.9839 8598.1104 -7878.0889 8598.1104 c-7878.4282 8598.1104 -7879.0527 8596.417 -7879.3394 8596.417 c-7879.7031 8596.417 -7879.9121 8597.46 -7879.9121 8598.6055 c-7879.9121 8602.1201 -7877.6465 8607.2266 -7877.1504 8607.9561 c-7877.0474 8608.1113 -7876.9946 8608.2432 -7876.9946 8608.3721 c-7876.9946 8608.5811 -7877.1504 8608.7373 -7877.3857 8608.7373 c-7877.4639 8608.7373 -7880.8496 8607.4863 -7880.8496 8606.7578 c-7880.8496 8606.6016 -7880.7969 8606.4717 -7880.7969 8606.3408 c-7880.7969 8605.9248 -7881.0313 8605.7432 -7881.5786 8605.7432 c-7882.3857 8605.7432 -7882.4385 8606.1064 -7882.4385 8606.3154 c-7882.4385 8606.5244 -7882.3857 8606.7842 -7882.3857 8607.3311 c-7882.3857 8607.5654 -7882.4639 8608.2949 -7882.6729 8608.3457 c-7883.4814 8608.5273 -7884.2617 8609.0498 -7884.2617 8609.4141 c-7884.2617 8609.9609 -7883.5054 8611.3936 -7883.1934 8611.3936 c-7882.7246 8611.3936 -7881.7344 8609.1279 -7881.3706 8609.1279 c-7881.1626 8609.1279 -7880.4849 8611.5244 -7880.0425 8611.5244 c-7879.8594 8611.5244 -7879.6514 8611.2891 -7879.6514 8610.9248 c-7879.6514 8610.3525 -7880.1465 8609.5186 -7880.1465 8609.1279 c-7880.1465 8608.9453 -7880.0688 8608.8408 -7879.9121 8608.8408 c-7879.5728 8608.8408 -7878.2715 8609.4922 -7876.5786 8610.3525 c-7875.1978 8611.0273 -7874.1816 8611.8887 -7872.4102 8611.8887 c-7869.6504 8611.8887 -7867.6455 8610.0146 -7867.6455 8606.5498 c-7867.6455 8605.4814 -7867.8262 8604.3359 -7868.1138 8603.1641 c-7868.2954 8602.4336 -7869.5454 8599.2568 -7869.5454 8598.5801 c-7869.5454 8598.293 -7869.4414 8598.1631 -7869.2334 8598.1631 c-7869.0513 8598.1631 -7868.2974 8598.4482 -7867.5439 8598.4492 C-7867.5439 8598.4492 L-7867.5435 8598.4492 -7867.5435 8598.4492 -7867.5425 8598.4492 c-7867.5415 8598.4492 -7867.5415 8598.4492 -7867.54 8598.4492 C-7867.54 8598.4492 L-7866.7866 8598.4482 -7866.0337 8598.1631 -7865.8506 8598.1631 c-7865.6426 8598.1631 -7865.5386 8598.293 -7865.5386 8598.5801 c-7865.5386 8599.2568 -7866.7881 8602.4336 -7866.9702 8603.1641 c-7867.2568 8604.3359 -7867.4395 8605.4814 -7867.4395 8606.5498 c-7867.4395 8610.0146 -7865.4336 8611.8887 -7862.6729 8611.8887 c-7860.9023 8611.8887 -7859.8862 8611.0273 -7858.5054 8610.3525 c-7856.8135 8609.4922 -7855.5103 8608.8408 -7855.1719 8608.8408 c-7855.0161 8608.8408 -7854.9375 8608.9453 -7854.9375 8609.1279 c-7854.9375 8609.5186 -7855.4326 8610.3525 -7855.4326 8610.9248 c-7855.4326 8611.2891 -7855.2246 8611.5244 -7855.0425 8611.5244 c-7854.5474 8611.5244 -7853.8706 8608.7109 -7853.6362 8608.7109 c-7853.3755 8608.7109 -7853.0098 8609.9346 -7852.7231 8610.9775 c-7852.5938 8611.4717 -7852.2554 8611.6533 -7851.9688 8611.6533 c-7851.6035 8611.6533 -7851.2393 8611.3936 -7851.2393 8611.0273 c-7851.2393 8610.8994 -7851.2915 8610.7432 -7851.3955 8610.5869 c-7853.2705 8607.7217 -7852.8018 8606.3682 -7853.0625 8605.8193 c-7853.1665 8605.6113 -7853.4785 8605.5078 -7853.7656 8605.5078 c-7854.2344 8605.5078 -7854.2344 8605.6396 -7854.2344 8606.7578 c-7854.2344 8607.4863 -7857.6201 8608.7373 -7857.6982 8608.7373 c-7857.9326 8608.7373 -7858.0889 8608.5811 -7858.0889 8608.3721 c-7858.0889 8608.2432 -7858.0366 8608.1113 -7857.9326 8607.9561 c-7857.4375 8607.2266 -7855.1719 8602.1201 -7855.1719 8598.6055 c-7855.1719 8597.46 -7855.3809 8596.417 -7855.7446 8596.417 c-7856.0845 8596.417 -7856.6313 8598.5537 -7857.0215 8598.5537 c-7857.2295 8598.5537 -7858.0889 8594.959 -7858.3755 8594.3086 c-7858.4546 8594.125 -7858.5054 8593.9697 -7858.5054 8593.8652 c-7858.5054 8593.1367 -7854.9375 8591.7295 -7852.9839 8591.7295 c-7851.2656 8591.7295 -7849.6504 8592.2754 -7849.6504 8593.1885 c-7849.6504 8593.9434 -7849.9111 8594.5693 -7850.6665 8594.5693 c-7851.2129 8594.5693 -7851.4736 8594.0215 -7852.1504 8593.8652 C-7852.3066 8593.8398 -7852.4375 8593.8135 -7852.5674 8593.8135 c-7853.0879 8593.8135 -7853.4785 8594.0742 -7853.4785 8594.5693 c-7853.4785 8594.8037 -7853.1665 8595.4287 -7852.2031 8595.4287 c-7852.0986 8595.4287 -7851.4473 8595.3232 -7851.4214 8595.3232 c-7851.2915 8595.3232 -7851.2129 8595.4023 -7851.2129 8595.5322 c-7851.2129 8595.6631 -7851.7598 8596.0264 -7851.7598 8596.1563 c-7851.7598 8596.3916 -7851.1875 8596.417 -7851.0313 8596.417 c-7850.0674 8596.417 -7848.7646 8595.792 -7848.7646 8594.335 c-7848.7646 8594.1514 -7848.9473 8593.292 -7848.9473 8593.085 c-7848.9473 8592.9277 -7848.8687 8592.8496 -7848.7393 8592.8496 c-7848.0098 8592.8496 -7846.7856 8593.5537 -7846.7856 8595.1162 c-7846.7856 8595.8447 -7845.9258 8596.5479 -7845.5879 8596.5479 c-7845.3794 8596.5479 -7844.9375 8595.2979 -7844.7026 8595.2979 c-7844.3887 8595.2979 -7842.5918 8596.4961 -7842.5918 8599.6475 c-7842.5918 8602.6426 -7844.3374 8605.585 -7847.6455 8605.585 c-7850.1719 8605.585 -7852.3848 8603.2432 -7852.3848 8601.3145 c-7852.3848 8600.793 -7852.1768 8598.7354 -7850.25 8598.7354 c-7849.4165 8598.7354 -7849.2866 8599.3613 -7849.2866 8599.4385 c-7849.2866 8599.6221 -7849.4688 8599.752 -7849.8066 8599.8555 C-7850.0938 8599.96 -7850.2241 8600.4033 -7850.2241 8600.793 c-7850.2241 8601.209 -7849.9375 8602.3037 -7848.6079 8602.3037 c-7847.4878 8602.3037 -7846.6035 8601.1846 -7846.6035 8600.1943 c-7846.6035 8599.2041 -7847.4102 8597.5625 -7849.8848 8597.5625 c-7852.3335 8597.5625 -7853.3486 8599.7002 -7853.3486 8601.0273 c-7853.3486 8605.2998 -7848.8955 8606.4189 -7848.4785 8606.4189 c-7848.1914 8606.4189 -7847.9834 8606.5498 -7847.9834 8606.7324 c-7847.9834 8606.8096 -7848.0352 8606.9121 -7848.1138 8607.0176 C-7848.5303 8607.5391 -7848.7915 8608.4248 -7848.7915 8609.1533 c-7848.7915 8609.7266 -7848.5303 8611.8887 -7845.9521 8611.8887 c-7844.5449 8611.8887 -7843.3481 8610.8721 -7843.3481 8609.5186 c-7843.3481 8608.3457 -7844.4155 8607.6182 -7845.2222 8607.6182 c-7845.7959 8607.6182 -7846.1602 8607.877 -7846.1602 8608.165 c-7846.1602 8608.2432 -7846.1602 8608.5557 -7845.7178 8608.5557 c-7845.6401 8608.5557 -7845.2222 8608.4512 -7845.1182 8608.4512 c-7844.7534 8608.4512 -7844.2593 8608.8408 -7844.2593 8609.5439 c-7844.2593 8610.2998 -7845.2222 8611.0811 -7845.9258 8611.0811 c-7847.3848 8611.0811 -7847.9058 8610.0654 -7847.9058 8609.2314 c-7847.9058 8607.9033 -7847.5928 8607.6953 -7844.6494 8605.6396 c-7843.5674 8604.8838 -7842.6313 8603.8613 -7842.0845 8602.4727 C-7842.0845 8596.9063 L-7842.8311 8594.9404 -7844.2402 8593.4912 -7845.1978 8592.7197 cf1 D-7868.6338 8606.3408 m-7868.6338 8609.2061 -7870.1978 8610.6396 -7871.1602 8610.6396 c-7871.7075 8610.6396 -7873.6606 8609.7783 -7873.6606 8607.4346 c-7873.6606 8606.9658 -7873.6094 8606.4717 -7873.5835 8606.0557 c-7873.5313 8605.2998 -7873.2441 8604.9082 -7872.75 8604.4912 c-7872.4375 8604.2314 -7871.6289 8603.5273 -7871.6289 8602.6426 c-7871.6289 8601.9385 -7872.3066 8600.793 -7873.6094 8600.793 c-7874.2085 8600.793 -7875.6665 8601.0557 -7875.6665 8604.2061 c-7875.6665 8606.8623 -7874.7295 8608.6338 -7874.5718 8608.8682 C-7874.4946 8609.0234 -7874.4424 8609.1279 -7874.4424 8609.2061 c-7874.4424 8609.2842 -7874.4946 8609.3359 -7874.5474 8609.3359 c-7875.4849 8609.3359 -7876.9165 8606.0273 -7876.9165 8603.0586 c-7876.9165 8600.8721 -7875.3799 8595.8447 -7873.9736 8595.8447 c-7872.4897 8595.8447 -7868.6338 8601.4971 -7868.6338 8606.3408 cf-7867.54 8595.9482 m-7867.54 8595.9482 L-7867.5415 8595.9482 -7867.5415 8595.9482 -7867.5425 8595.9482 c-7867.5435 8595.9482 -7867.5435 8595.9482 -7867.5439 8595.9482 C-7867.5439 8595.9482 L-7868.5313 8595.9512 -7869.3374 8596.2881 -7869.8584 8596.835 c-7869.9634 8596.9385 -7870.0928 8597.0166 -7870.2222 8597.0166 c-7870.6401 8597.0166 -7872.8535 8595.2979 -7872.8535 8593.9697 c-7872.8535 8592.5625 -7869.6504 8590.6621 -7867.54 8590.167 C-7867.54 8590.1416 L-7864.8594 8591.001 -7862.2305 8592.6416 -7862.2305 8593.9697 c-7862.2305 8595.2979 -7864.4438 8597.0166 -7864.8618 8597.0166 c-7864.9912 8597.0166 -7865.1206 8596.9385 -7865.2256 8596.835 c-7865.7466 8596.2881 -7866.5518 8595.9512 -7867.54 8595.9482 Cf-7858.1685 8603.0586 m-7858.1685 8606.0273 -7859.6001 8609.3359 -7860.5366 8609.3359 c-7860.5898 8609.3359 -7860.6416 8609.2842 -7860.6416 8609.2061 c-7860.6416 8609.1279 -7860.5898 8609.0234 -7860.5122 8608.8682 C-7860.3555 8608.6338 -7859.4185 8606.8623 -7859.4185 8604.2061 c-7859.4185 8602.6689 -7859.8862 8600.7402 -7861.3711 8600.7402 c-7861.9185 8600.7402 -7863.5854 8601.6006 -7863.5854 8602.4863 c-7863.5854 8602.6689 -7863.4814 8603.4766 -7862.6206 8604.1533 c-7862.1265 8604.5439 -7861.7354 8605.1426 -7861.5015 8605.8721 C-7861.3975 8606.2891 -7861.3184 8606.7842 -7861.3184 8607.2783 c-7861.3184 8608.0869 -7861.6577 8610.665 -7863.6113 8610.665 c-7864.6782 8610.665 -7866.4497 8609.5186 -7866.4497 8606.3408 c-7866.4497 8601.4971 -7862.5942 8595.8447 -7861.1104 8595.8447 c-7859.7041 8595.8447 -7858.1685 8600.8721 -7858.1685 8603.0586 cf*UU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 3 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 5 pt. Flat/ Adobe Calligr) -(aphic Brush Tool/ 3 pt. Round/ Adobe Calligraphic Brush Tool/ ) -(7 pt. Round/ Adobe ArtOnPath Brush Tool/ Pencil - Thin/ Adobe ) -(ArtOnPath Brush Tool/ Charcoal/ Adobe ArtOnPath Brush Tool/ Ba) -(nner/ Adobe PatternOnPath Brush Tool/ Ornamental Border/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Flat)(1 3 3 9 9 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Banner)(1 / Unnamed Brush Pat/ / / / / 5 0.976471 0.741176 0.372549 / ) -( 1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Charcoal)(1 / Unnamed Brush Pat 4/ / / / / 0 1 /  1 1 1.2 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Pencil - Thin)(1 / Unnamed 2/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Ornamental Border)(1 / Unnamed Brush Pat 7/ Unnamed Brush Pat 5/ Unnamed Brush Pa) -(t 2/ / / 5 0.423529 0.72549 0.313726 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.858823 0.85098 0.788235 1 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 1 1 1 Xa(White)Pc0.729412 0.709804 0.635294 0.760784 0.137255 0.121569 0.12549 Xa(Black)Pc0.858823 0.85098 0.788235 1 0 0 0 Xa(Zwart)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 Au*u0 O0.858823 0.85098 0.788235 1 0 0 0 Xa0 J 0 j 1 w 4 M []0 d0 XR249.0371 568.8877 m249.6353 568.8877 l250.2813 568.8877 250.3613 568.7432 250.3613 567.6611 C250.3613 563.7197 l250.3613 562.9766 250.2813 562.7031 249.457 562.7031 C248.9404 562.7031 L248.9404 561.9111 L253.4624 561.9111 L253.4624 562.7031 L253.2363 562.7031 l252.4121 562.7031 252.332 562.9766 252.332 563.7197 C252.332 566.3691 l252.332 567.8867 253.1392 568.7256 254.3184 568.7256 c255.1904 568.7256 255.7393 568.21 255.7393 567.0635 C255.7393 563.7197 l255.7393 562.9766 255.6592 562.7031 254.835 562.7031 C254.6094 562.7031 L254.6094 561.9111 L259.0342 561.9111 L259.0342 562.7031 L258.6143 562.7031 l257.79 562.7031 257.71 562.9766 257.71 563.7197 C257.71 567.5313 l257.71 569.2764 256.4824 569.9863 254.9004 569.9863 c253.5913 569.9863 252.6714 569.4375 252.1221 568.1289 C252.0894 568.1289 L252.0894 569.9219 l251.2983 569.8252 249.8613 569.7285 249.0371 569.7285 c249.0371 568.8877 Lf247.7612 565.6904 m247.7612 566.0625 l247.7612 568.7754 246.6792 569.9863 244.0791 569.9863 c241.3662 569.9863 240.2031 568.21 240.2031 565.8193 c240.2031 563.4287 241.3662 561.6533 244.0791 561.6533 c246.7764 561.6533 247.584 563.042 247.6001 564.4307 C245.9521 564.4307 l245.936 563.2188 245.4521 562.5889 244.2734 562.5889 c242.2861 562.5889 242.27 564.5918 242.27 565.6904 c247.7612 565.6904 Lf0 D242.27 566.627 m242.27 567.9844 242.6743 569.0977 244.063 569.0977 c245.4521 569.0977 245.791 567.9512 245.791 566.627 c242.27 566.627 Lf236.1172 567.1758 m236.1172 565.7715 235.7134 565.0928 234.8413 565.0928 c233.9854 565.0928 233.436 565.7061 233.436 567.1602 c233.436 568.5654 233.9214 569.0977 234.8252 569.0977 c235.6001 569.0977 236.1172 568.6465 236.1172 567.1758 CF236.7954 560.5547 m236.7954 559.8125 236.2954 559.0361 234.7612 559.0361 c233.4043 559.0361 232.8711 559.6826 232.8711 560.4736 c232.8711 561.3301 233.3564 562.04 234.8091 562.04 c236.2144 562.04 236.7954 561.3779 236.7954 560.5547 CF1 D239.1372 569.8574 m236.7471 569.6475 l236.2954 569.7764 235.5522 569.9863 234.874 569.9863 c232.7583 569.9863 231.3691 568.7754 231.3691 567.208 c231.3691 565.7393 232.29 565.0117 233.501 564.624 C233.501 564.5918 l232.3872 564.4951 231.918 564.0908 231.918 563.5752 c231.918 563.0264 232.29 562.751 233.3721 562.541 C233.3721 562.5088 l232.2412 562.3965 230.9014 561.7979 230.9014 560.4902 c230.9014 559.1816 232.0151 558.1484 234.5674 558.1484 c237.2803 558.1484 238.7661 559.0361 238.7661 560.5381 c238.7661 562.4443 237.248 562.6699 235.73 562.7832 c233.9531 562.9121 233.6621 563.0742 233.6621 563.5264 c233.6621 564.0586 234.3892 564.1396 234.9224 564.2207 C235.3101 564.2852 l237.5713 564.6572 238.2813 565.8682 238.2813 567.1602 c238.2813 567.8545 237.9741 568.4844 237.5713 568.791 C237.5713 568.8232 L239.1372 568.8232 l239.1372 569.8574 Lf220.064 568.8877 m220.6621 568.8877 l221.3081 568.8877 221.3882 568.7432 221.3882 567.6611 C221.3882 563.7197 l221.3882 562.9766 221.3081 562.7031 220.4844 562.7031 C219.9673 562.7031 L219.9673 561.9111 L224.4893 561.9111 L224.4893 562.7031 L224.2632 562.7031 l223.4404 562.7031 223.3594 562.9766 223.3594 563.7197 C223.3594 566.3691 l223.3594 567.8867 224.166 568.7256 225.3452 568.7256 c226.2173 568.7256 226.7661 568.21 226.7661 567.0635 C226.7661 563.7197 l226.7661 562.9766 226.686 562.7031 225.8623 562.7031 C225.6362 562.7031 L225.6362 561.9111 L230.061 561.9111 L230.061 562.7031 L229.6411 562.7031 l228.8174 562.7031 228.7373 562.9766 228.7373 563.7197 C228.7373 567.5313 l228.7373 569.2764 227.5093 569.9863 225.9272 569.9863 c224.6182 569.9863 223.6982 569.4375 223.1494 568.1289 C223.1172 568.1289 L223.1172 569.9219 l222.3252 569.8252 220.8882 569.7285 220.064 569.7285 c220.064 568.8877 Lf215.688 572.4893 m215.688 571.7949 216.1074 571.2783 216.8662 571.2783 c217.626 571.2783 218.0454 571.7949 218.0454 572.4893 c218.0454 573.1836 217.626 573.7012 216.8662 573.7012 c216.1074 573.7012 215.688 573.1836 215.688 572.4893 CF214.5894 568.8877 m215.187 568.8877 l215.833 568.8877 215.9141 568.7432 215.9141 567.6611 C215.9141 563.7197 l215.9141 562.9766 215.833 562.7031 215.0093 562.7031 C214.4922 562.7031 L214.4922 561.9111 L219.208 561.9111 L219.208 562.7031 L218.7881 562.7031 l217.9653 562.7031 217.8843 562.9766 217.8843 563.7197 C217.8843 569.9219 l216.8501 569.8252 215.4131 569.7285 214.5894 569.7285 c214.5894 568.8877 Lf203.7373 568.8877 m204.334 568.8877 l204.98 568.8877 205.061 568.7432 205.061 567.6611 C205.061 563.7197 l205.061 562.9766 204.98 562.7031 204.1572 562.7031 C203.6401 562.7031 L203.6401 561.9111 L208.1621 561.9111 L208.1621 562.7031 L207.936 562.7031 l207.1123 562.7031 207.0313 562.9766 207.0313 563.7197 C207.0313 566.3691 l207.0313 567.8867 207.8394 568.7256 209.0181 568.7256 c209.8901 568.7256 210.439 568.21 210.439 567.0635 C210.439 563.7197 l210.439 562.9766 210.3584 562.7031 209.5352 562.7031 C209.3081 562.7031 L209.3081 561.9111 L213.7344 561.9111 L213.7344 562.7031 L213.314 562.7031 l212.4902 562.7031 212.4092 562.9766 212.4092 563.7197 C212.4092 567.5313 l212.4092 569.2764 211.1821 569.9863 209.5991 569.9863 c208.291 569.9863 207.3701 569.4375 206.8213 568.1289 C206.7891 568.1289 L206.7891 569.9219 l205.998 569.8252 204.5601 569.7285 203.7373 569.7285 c203.7373 568.8877 Lf194.9033 565.8193 m194.9033 563.4287 196.0654 561.6533 198.7793 561.6533 c201.4922 561.6533 202.6553 563.4287 202.6553 565.8193 c202.6553 568.21 201.4922 569.9863 198.7793 569.9863 c196.0654 569.9863 194.9033 568.21 194.9033 565.8193 CF0 D196.9702 565.8193 m196.9702 568.0156 197.4541 569.0488 198.7793 569.0488 c200.103 569.0488 200.5874 568.0156 200.5874 565.8193 c200.5874 563.623 200.103 562.5889 198.7793 562.5889 c197.4541 562.5889 196.9702 563.623 196.9702 565.8193 CF1 D186.9053 568.8877 m187.5991 568.8877 l188.2451 568.8877 188.3262 568.7432 188.3262 567.6611 C188.3262 563.7197 l188.3262 562.9766 188.2451 562.7031 187.4224 562.7031 C186.9053 562.7031 L186.9053 561.9111 L192.0571 561.9111 L192.0571 562.7031 L191.2012 562.7031 l190.377 562.7031 190.2964 562.9766 190.2964 563.7197 C190.2964 566.3691 l190.2964 567.7246 191.0391 568.7256 191.7822 568.7256 c192.4121 568.7256 192.5903 568.2744 192.6064 567.4668 C194.1563 567.4668 L194.1563 569.792 l193.7852 569.9219 193.333 569.9863 192.8643 569.9863 c191.5562 569.9863 190.6362 569.4375 190.0864 568.1289 C190.0542 568.1289 L190.0542 569.9219 l189.2632 569.8252 187.8252 569.7285 186.9053 569.7285 c186.9053 568.8877 Lf0 D183.1421 567.1758 m183.1421 565.7715 182.7383 565.0928 181.8662 565.0928 c181.0103 565.0928 180.4614 565.7061 180.4614 567.1602 c180.4614 568.5654 180.9463 569.0977 181.8501 569.0977 c182.625 569.0977 183.1421 568.6465 183.1421 567.1758 CF183.8203 560.5547 m183.8203 559.8125 183.3203 559.0361 181.7852 559.0361 c180.4292 559.0361 179.896 559.6826 179.896 560.4736 c179.896 561.3301 180.3804 562.04 181.834 562.04 c183.2393 562.04 183.8203 561.3779 183.8203 560.5547 CF1 D186.1621 569.8574 m183.772 569.6475 l183.3203 569.7764 182.5771 569.9863 181.8984 569.9863 c179.7832 569.9863 178.394 568.7754 178.394 567.208 c178.394 565.7393 179.314 565.0117 180.5264 564.624 C180.5264 564.5918 l179.4111 564.4951 178.9434 564.0908 178.9434 563.5752 c178.9434 563.0264 179.314 562.751 180.396 562.541 C180.396 562.5088 l179.2661 562.3965 177.9253 561.7979 177.9253 560.4902 c177.9253 559.1816 179.04 558.1484 181.5923 558.1484 c184.3052 558.1484 185.791 559.0361 185.791 560.5381 c185.791 562.4443 184.272 562.6699 182.7544 562.7832 c180.978 562.9121 180.687 563.0742 180.687 563.5264 c180.687 564.0586 181.4141 564.1396 181.9473 564.2207 C182.334 564.2852 l184.5952 564.6572 185.3062 565.8682 185.3062 567.1602 c185.3062 567.8545 184.999 568.4844 184.5952 568.791 C184.5952 568.8232 L186.1621 568.8232 l186.1621 569.8574 Lf*U*u302.8672 584.9414 m304.2881 584.9414 L304.2881 580.3057 l304.2881 578.3027 305.1914 577.7705 306.8242 577.7705 c308.3906 577.7705 309.2939 578.5459 309.2939 580.2744 C309.2939 580.6289 L307.9375 580.6289 L307.9375 579.8047 l307.9375 579.1113 307.6797 578.8037 307.0977 578.8037 c306.5176 578.8037 306.2578 579.1113 306.2578 579.8047 C306.2578 584.9414 L308.8418 584.9414 L308.8418 585.8779 L306.2578 585.8779 L306.2578 588.1553 L304.8535 588.1553 l304.7246 586.5244 304.3691 586.0547 302.8672 585.8779 c302.8672 584.9414 Lf298.5869 588.6387 m298.5869 587.9453 299.0068 587.4277 299.7656 587.4277 c300.5254 587.4277 300.9453 587.9453 300.9453 588.6387 c300.9453 589.334 300.5254 589.8506 299.7656 589.8506 c299.0068 589.8506 298.5869 589.334 298.5869 588.6387 CF297.4883 585.0381 m298.0859 585.0381 l298.7324 585.0381 298.8125 584.8926 298.8125 583.8105 C298.8125 579.8701 l298.8125 579.127 298.7324 578.8535 297.9092 578.8535 C297.3926 578.8535 L297.3926 578.0605 L302.1074 578.0605 L302.1074 578.8535 L301.6875 578.8535 l300.8633 578.8535 300.7832 579.127 300.7832 579.8701 C300.7832 586.0723 l299.75 585.9746 298.3125 585.8779 297.4883 585.8779 c297.4883 585.0381 Lf296.2129 581.8398 m296.2129 582.2119 l296.2129 584.9248 295.1309 586.1357 292.5313 586.1357 c289.8184 586.1357 288.6543 584.3604 288.6543 581.9688 c288.6543 579.5791 289.8184 577.8027 292.5313 577.8027 c295.2285 577.8027 296.0352 579.1924 296.0508 580.5811 C294.4043 580.5811 l294.3887 579.3691 293.9043 578.7393 292.7246 578.7393 c290.7383 578.7393 290.7227 580.7422 290.7227 581.8398 c296.2129 581.8398 Lf0 D290.7227 582.7773 m290.7227 584.1338 291.126 585.248 292.5156 585.248 c293.9043 585.248 294.2432 584.1006 294.2432 582.7773 c290.7227 582.7773 Lf1 D281.0811 584.9414 m282.502 584.9414 L282.502 580.3057 l282.502 578.3027 283.4063 577.7705 285.0371 577.7705 c286.6035 577.7705 287.5078 578.5459 287.5078 580.2744 C287.5078 580.6289 L286.1523 580.6289 L286.1523 579.8047 l286.1523 579.1113 285.8926 578.8037 285.3125 578.8037 c284.7305 578.8037 284.4727 579.1113 284.4727 579.8047 C284.4727 584.9414 L287.0566 584.9414 L287.0566 585.8779 L284.4727 585.8779 L284.4727 588.1553 L283.0664 588.1553 l282.9375 586.5244 282.583 586.0547 281.0811 585.8779 c281.0811 584.9414 Lf276.8008 588.6387 m276.8008 587.9453 277.2212 587.4277 277.98 587.4277 c278.7388 587.4277 279.1592 587.9453 279.1592 588.6387 c279.1592 589.334 278.7388 589.8506 277.98 589.8506 c277.2212 589.8506 276.8008 589.334 276.8008 588.6387 CF275.7031 585.0381 m276.2998 585.0381 l276.9458 585.0381 277.0269 584.8926 277.0269 583.8105 C277.0269 579.8701 l277.0269 579.127 276.9458 578.8535 276.123 578.8535 C275.606 578.8535 L275.606 578.0605 L280.3218 578.0605 L280.3218 578.8535 L279.9019 578.8535 l279.0781 578.8535 278.9971 579.127 278.9971 579.8701 C278.9971 586.0723 l277.9639 585.9746 276.5259 585.8779 275.7031 585.8779 c275.7031 585.0381 Lf267.9668 578.3203 m268.4351 578.126 269.6138 577.8027 270.938 577.8027 c272.6338 577.8027 274.4268 578.5303 274.4268 580.4189 c274.4268 581.6465 273.813 582.1152 272.4238 582.5674 C271.1001 583.0029 l270.3569 583.2451 269.937 583.6807 269.937 584.2949 c269.937 584.9414 270.4063 585.248 271.1479 585.248 c272.311 585.248 272.6182 584.7314 272.6182 583.4883 C273.9751 583.4883 L273.9751 585.7002 l273.5059 585.9102 272.4238 586.1357 271.1968 586.1357 c269.291 586.1357 267.9668 585.248 267.9668 583.7783 c267.9668 582.5186 268.8711 581.8398 270.7451 581.2754 c272.23 580.8232 272.457 580.4678 272.457 579.8701 c272.457 579.127 271.7778 578.6914 270.7451 578.6914 c269.6299 578.6914 269.3232 579.4336 269.3232 580.5811 C267.9668 580.5811 l267.9668 578.3203 Lf259.582 585.0381 m260.2769 585.0381 l260.9229 585.0381 261.0029 584.8926 261.0029 583.8105 C261.0029 579.8701 l261.0029 579.127 260.9229 578.8535 260.0991 578.8535 C259.582 578.8535 L259.582 578.0605 L264.7339 578.0605 L264.7339 578.8535 L263.8779 578.8535 l263.0542 578.8535 262.9741 579.127 262.9741 579.8701 C262.9741 582.5186 l262.9741 583.875 263.7168 584.876 264.459 584.876 c265.0889 584.876 265.2671 584.4238 265.2832 583.6172 C266.833 583.6172 L266.833 585.9424 l266.4619 586.0723 266.0098 586.1357 265.541 586.1357 c264.2329 586.1357 263.313 585.5869 262.7642 584.2793 C262.731 584.2793 L262.731 586.0723 l261.9399 585.9746 260.5029 585.8779 259.582 585.8779 c259.582 585.0381 Lf258.4028 581.8398 m258.4028 582.2119 l258.4028 584.9248 257.3208 586.1357 254.7212 586.1357 c252.0078 586.1357 250.8452 584.3604 250.8452 581.9688 c250.8452 579.5791 252.0078 577.8027 254.7212 577.8027 c257.418 577.8027 258.2261 579.1924 258.2422 580.5811 C256.5938 580.5811 l256.5781 579.3691 256.0938 578.7393 254.915 578.7393 c252.9282 578.7393 252.9121 580.7422 252.9121 581.8398 c258.4028 581.8398 Lf0 D252.9121 582.7773 m252.9121 584.1338 253.3159 585.248 254.7051 585.248 c256.0938 585.248 256.4331 584.1006 256.4331 582.7773 c252.9121 582.7773 Lf1 D246.9351 585.0859 m247.6138 585.0859 l247.9849 585.0859 248.082 584.9902 248.082 584.876 c248.082 584.7471 248.0498 584.5859 248.001 584.4727 C246.3218 579.6758 L246.29 579.6758 L244.7388 584.2305 l244.6909 584.3916 244.5938 584.5859 244.5938 584.7959 c244.5938 584.9727 244.7549 585.0859 245.2402 585.0859 C245.7729 585.0859 L245.7729 585.8779 L241.7349 585.8779 L241.7349 585.0859 L241.9292 585.0859 l242.2842 585.0859 242.3809 584.9902 242.5908 584.457 C245.0938 577.9639 L247 577.9639 L249.5029 584.5371 l249.665 584.957 249.8101 585.0859 250.1489 585.0859 C250.3589 585.0859 L250.3589 585.8779 L246.9351 585.8779 l246.9351 585.0859 Lf237.9551 588.6387 m237.9551 587.9453 238.375 587.4277 239.1338 587.4277 c239.8931 587.4277 240.313 587.9453 240.313 588.6387 c240.313 589.334 239.8931 589.8506 239.1338 589.8506 c238.375 589.8506 237.9551 589.334 237.9551 588.6387 CF236.8569 585.0381 m237.4541 585.0381 l238.1001 585.0381 238.1812 584.8926 238.1812 583.8105 C238.1812 579.8701 l238.1812 579.127 238.1001 578.8535 237.2769 578.8535 C236.7598 578.8535 L236.7598 578.0605 L241.4761 578.0605 L241.4761 578.8535 L241.0562 578.8535 l240.2319 578.8535 240.1509 579.127 240.1509 579.8701 C240.1509 586.0723 l239.1182 585.9746 237.6802 585.8779 236.8569 585.8779 c236.8569 585.0381 Lf226.0039 585.0381 m226.6021 585.0381 l227.248 585.0381 227.3281 584.8926 227.3281 583.8105 C227.3281 579.8701 l227.3281 579.127 227.248 578.8535 226.4238 578.8535 C225.9072 578.8535 L225.9072 578.0605 L230.4292 578.0605 L230.4292 578.8535 L230.2031 578.8535 l229.3789 578.8535 229.2988 579.127 229.2988 579.8701 C229.2988 582.5186 l229.2988 584.0371 230.106 584.876 231.2852 584.876 c232.1572 584.876 232.7061 584.3604 232.7061 583.2129 C232.7061 579.8701 l232.7061 579.127 232.626 578.8535 231.8018 578.8535 C231.5762 578.8535 L231.5762 578.0605 L236.001 578.0605 L236.001 578.8535 L235.5811 578.8535 l234.7568 578.8535 234.6768 579.127 234.6768 579.8701 C234.6768 583.6807 l234.6768 585.4258 233.4492 586.1357 231.8662 586.1357 c230.5581 586.1357 229.6382 585.5869 229.0889 584.2793 C229.0562 584.2793 L229.0562 586.0723 l228.2651 585.9746 226.8281 585.8779 226.0039 585.8779 c226.0039 585.0381 Lf222.0962 578.0605 m225.1479 578.0605 L225.1479 578.8535 L224.728 578.8535 l223.9048 578.8535 223.8242 579.127 223.8242 579.8701 C223.8242 586.0723 l222.79 585.9746 221.353 585.8779 220.5288 585.8779 C220.5288 585.0381 L221.127 585.0381 l221.7729 585.0381 221.854 584.8926 221.854 583.8105 C221.854 581.5977 l221.854 579.9346 221.2559 579.0625 219.8828 579.0625 c218.9629 579.0625 218.4458 579.5313 218.4458 580.4844 C218.4458 586.0723 l217.4121 585.9746 215.9751 585.8779 215.1509 585.8779 C215.1509 585.0381 L215.749 585.0381 l216.395 585.0381 216.4761 584.8926 216.4761 583.8105 C216.4761 580.0313 l216.4761 578.5303 217.4448 577.8027 219.0439 577.8027 c220.6748 577.8027 221.6919 578.5127 222.064 579.5947 C222.0962 579.5947 l222.0962 578.0605 Lf207.416 578.3203 m207.8838 578.126 209.063 577.8027 210.3872 577.8027 c212.083 577.8027 213.876 578.5303 213.876 580.4189 c213.876 581.6465 213.2622 582.1152 211.873 582.5674 C210.5488 583.0029 l209.8062 583.2451 209.3862 583.6807 209.3862 584.2949 c209.3862 584.9414 209.854 585.248 210.5972 585.248 c211.7598 585.248 212.0669 584.7314 212.0669 583.4883 C213.4229 583.4883 L213.4229 585.7002 l212.9551 585.9102 211.873 586.1357 210.646 586.1357 c208.7402 586.1357 207.416 585.248 207.416 583.7783 c207.416 582.5186 208.3198 581.8398 210.1929 581.2754 c211.6792 580.8232 211.9048 580.4678 211.9048 579.8701 c211.9048 579.127 211.2271 578.6914 210.1929 578.6914 c209.0791 578.6914 208.772 579.4336 208.772 580.5811 C207.416 580.5811 l207.416 578.3203 Lf197.0469 588.8174 m197.645 588.8174 l198.291 588.8174 198.3721 588.6719 198.3721 587.5898 C198.3721 579.8701 l198.3721 579.127 198.291 578.8535 197.4668 578.8535 C196.9502 578.8535 L196.9502 578.0605 L201.4722 578.0605 L201.4722 578.8535 L201.2461 578.8535 l200.4229 578.8535 200.3418 579.127 200.3418 579.8701 C200.3418 589.8506 l199.3081 589.7539 197.8711 589.6572 197.0469 589.6572 c197.0469 588.8174 Lf201.731 585.0859 m202.5381 585.0859 l202.6509 585.0859 202.7969 585.0225 202.7969 584.8604 c202.7969 584.7314 202.6841 584.6016 202.0049 583.9072 C200.52 582.3574 l202.813 579.3691 202.877 579.2559 202.877 579.127 c202.877 578.9658 202.7158 578.8535 202.4741 578.8535 C202.1509 578.8535 L202.1509 578.0605 L206.2368 578.0605 L206.2368 578.8535 l205.5752 578.8691 205.3652 578.9658 204.7832 579.6924 C202.4409 582.6484 L204.5249 584.7148 l204.832 585.0059 205.0249 585.0859 205.2998 585.0859 C205.833 585.0859 L205.833 585.8779 L201.731 585.8779 l201.731 585.0859 Lf192.6709 588.6387 m192.6709 587.9453 193.0908 587.4277 193.8501 587.4277 c194.6089 587.4277 195.0288 587.9453 195.0288 588.6387 c195.0288 589.334 194.6089 589.8506 193.8501 589.8506 c193.0908 589.8506 192.6709 589.334 192.6709 588.6387 CF189.4409 574.5889 m189.7642 574.5078 190.5708 574.2979 191.5718 574.2979 c194.2861 574.2979 194.8672 575.9941 194.8672 577.6094 C194.8672 586.0723 l193.8008 585.9746 192.3638 585.8779 191.2329 585.8779 C191.2329 585.0381 L192.1382 585.0381 l192.7842 585.0381 192.897 584.8926 192.897 583.8105 C192.897 577.2705 l192.897 575.7676 192.4282 575.332 191.7178 575.332 c190.9912 575.332 190.7969 575.832 190.7969 576.5918 C189.4409 576.5918 l189.4409 574.5889 Lf187.1958 588.6387 m187.1958 587.9453 187.6162 587.4277 188.375 587.4277 c189.1338 587.4277 189.5542 587.9453 189.5542 588.6387 c189.5542 589.334 189.1338 589.8506 188.375 589.8506 c187.6162 589.8506 187.1958 589.334 187.1958 588.6387 CF186.0981 585.0381 m186.6948 585.0381 l187.3408 585.0381 187.4219 584.8926 187.4219 583.8105 C187.4219 579.8701 l187.4219 579.127 187.3408 578.8535 186.5181 578.8535 C186.001 578.8535 L186.001 578.0605 L190.7168 578.0605 L190.7168 578.8535 L190.2969 578.8535 l189.4731 578.8535 189.3921 579.127 189.3921 579.8701 C189.3921 586.0723 l188.3589 585.9746 186.9209 585.8779 186.0981 585.8779 c186.0981 585.0381 Lf177.8452 585.0381 m178.5391 585.0381 l179.1851 585.0381 179.2661 584.8926 179.2661 583.8105 C179.2661 579.8701 l179.2661 579.127 179.1851 578.8535 178.3618 578.8535 C177.8452 578.8535 L177.8452 578.0605 L182.9971 578.0605 L182.9971 578.8535 L182.1411 578.8535 l181.3169 578.8535 181.2358 579.127 181.2358 579.8701 C181.2358 582.5186 l181.2358 583.875 181.979 584.876 182.7222 584.876 c183.3521 584.876 183.5298 584.4238 183.5459 583.6172 C185.0962 583.6172 L185.0962 585.9424 l184.7251 586.0723 184.2729 586.1357 183.8042 586.1357 c182.4961 586.1357 181.5762 585.5869 181.0269 584.2793 C180.9941 584.2793 L180.9941 586.0723 l180.2031 585.9746 178.7661 585.8779 177.8452 585.8779 c177.8452 585.0381 Lf*UU0 D169.1973 585.9951 m140.5181 550.5986 L138.2393 550.6006 L166.915 585.9932 l169.1973 585.9951 Lfu*u113.8535 592.8877 m113.6455 592.8564 113.3516 592.7734 113.1797 593.1455 c113.0244 593.4824 113.6074 594.0283 113.8003 594.2041 c114.0503 594.4326 113.7256 594.6777 113.5347 594.4111 c113.4814 594.3369 113.0244 593.6914 112.6655 593.6914 c112.1094 593.6914 112.1416 594.3438 y111.5205 594.7393 111.5205 595.9971 v111.5205 597.1152 112.2593 597.6504 y112.2646 598.2871 112.7627 598.2715 v113.2593 598.2549 113.5815 597.5703 113.6133 597.5234 c113.8643 597.1455 114.1807 597.4668 113.9604 597.7363 c113.4395 598.3711 113.3296 598.8721 113.8994 599.1396 c114.1064 599.6123 114.7314 599.9443 115.4136 599.9971 C115.4365 599.998 L115.4585 600 l116.1406 599.9443 116.7656 599.6123 116.9727 599.1396 c117.5425 598.8721 117.4326 598.3711 116.9116 597.7363 c116.6914 597.4668 117.0073 597.1455 117.2593 597.5234 c117.2905 597.5703 117.6123 598.2549 118.1104 598.2715 c118.6074 598.2871 118.6133 597.6504 y119.3516 597.1152 119.3516 595.9971 v119.3516 594.7393 118.7305 594.3438 y118.7627 593.6914 118.2065 593.6914 v117.8486 593.6914 117.3916 594.3369 117.3374 594.4111 c117.1475 594.6777 116.8213 594.4326 117.0713 594.2041 c117.2646 594.0283 117.8486 593.4824 117.6924 593.1455 c117.5215 592.7734 117.2275 592.8564 117.0186 592.8877 c116.8276 592.5557 116.5386 592.5547 v117.9824 591.4756 120.2495 592.0869 120.5537 592.877 c120.1694 592.8008 120.1733 593.2031 v120.1763 593.4473 120.4243 593.5791 120.7593 593.6279 c120.6895 593.7822 120.6543 593.9668 120.6665 594.168 c120.6997 594.7344 121.0894 595.209 121.5396 595.2295 c121.9883 595.248 122.3257 594.8057 122.2925 594.2402 c122.2764 593.9551 122.1685 593.6934 122.0083 593.5 c122.3374 593.3877 122.5693 593.2188 122.5386 593.0225 c122.4585 592.5029 121.9775 592.6309 y121.9194 591.4443 123.7295 591.2168 124.1924 591.5234 c124.0093 592.208 124.2827 592.4141 124.4917 592.5986 c124.6406 592.7305 125.0835 593.0029 125.1445 593.043 c125.2827 593.1328 125.3545 593.3252 125.2676 593.3965 c125.1865 593.4629 125.0054 593.3477 124.9194 593.252 c124.7974 593.1143 124.5825 592.7881 124.2456 592.877 c123.8384 592.9844 124.0146 593.4502 123.9453 593.7012 c123.5117 595.2842 123.8823 596.3877 125.4653 597.0508 c126.0674 597.6846 126.6074 597.3994 v127.1245 597.125 126.8037 596.2803 Y126.9634 596.2051 l127.5415 597.2539 128.3774 598.0146 129.5767 598.0449 c130.4263 598.0664 130.8364 597.5654 130.8696 596.8789 c130.9434 595.3506 129.3813 595.9199 129.5034 596.4912 c129.1255 596.4521 128.9175 596.1201 v128.9175 596.2158 128.9297 597.123 128.1196 596.6436 c127.8887 596.5068 127.4805 595.8213 127.4507 595.7344 c127.3496 595.4336 127.4956 595.3857 127.3384 595.0918 c127.2153 594.8623 127.0435 594.8086 126.9697 594.6484 c126.8945 594.4883 127.0015 594.1719 126.8994 593.9688 c126.7754 593.7197 126.6045 593.7012 126.4927 593.4756 c126.4033 593.2979 125.2725 590.415 y125.7227 590.127 125.6367 589.6992 v125.5225 589.125 125.1577 589.249 124.9634 588.8721 c118.8213 590.4521 112.4644 590.4609 105.8945 588.8994 c105.6973 589.2432 105.3477 589.1387 105.2354 589.6992 c105.1494 590.127 105.5996 590.415 y104.4683 593.2979 104.3794 593.4756 v104.2676 593.7012 104.0967 593.7197 103.9727 593.9688 c103.8706 594.1719 103.9775 594.4883 103.9023 594.6484 c103.8286 594.8086 103.6567 594.8623 103.5347 595.0918 c103.3774 595.3857 103.5225 595.4336 103.4214 595.7344 c103.3926 595.8213 102.9834 596.5068 102.7524 596.6436 c101.9434 597.123 101.9556 596.2158 101.9546 596.1201 c101.7476 596.4521 101.3687 596.4912 y101.4907 595.9199 99.9287 595.3506 100.0024 596.8789 c100.0356 597.5654 100.4453 598.0664 101.2954 598.0449 c102.4956 598.0146 103.3306 597.2539 103.9087 596.2051 C104.0693 596.2803 l103.7485 597.125 104.2656 597.3994 v104.8047 597.6846 105.4067 597.0508 y106.9893 596.3877 107.3604 595.2842 106.9263 593.7012 c106.8574 593.4502 107.0337 592.9844 106.6265 592.877 c106.2896 592.7881 106.0757 593.1143 105.9526 593.252 c105.8677 593.3477 105.6865 593.4629 105.6045 593.3965 c105.5186 593.3252 105.5894 593.1328 105.7275 593.043 c105.7886 593.0029 106.2314 592.7305 106.3804 592.5986 c106.5894 592.4141 106.8623 592.208 106.6807 591.5234 c107.1426 591.2168 108.9526 591.4443 108.8955 592.6309 c108.4136 592.5029 108.3335 593.0225 v108.3037 593.2188 108.5347 593.3877 108.8633 593.5 c108.7036 593.6934 108.5967 593.9551 108.5796 594.2402 c108.5464 594.8057 108.8833 595.248 109.3335 595.2295 c109.7827 595.209 110.1733 594.7344 110.2065 594.168 c110.2173 593.9668 110.1826 593.7822 110.1123 593.6279 c110.4473 593.5791 110.6963 593.4473 110.6987 593.2031 c110.7026 592.8008 110.3184 592.877 y110.6226 592.0869 112.8896 591.4756 114.3345 592.5547 c114.0444 592.5557 113.8535 592.8877 YF1 D114.3745 595.8438 m114.3745 595.2578 114.8496 594.7822 115.4355 594.7822 c116.0225 594.7822 116.4976 595.2578 116.4976 595.8438 c116.4976 596.4297 116.0225 596.9053 115.4355 596.9053 c114.8496 596.9053 114.3745 596.4297 114.3745 595.8438 CF120.2324 591.2402 m120.6895 591.2529 121.5835 591.0664 y121.2036 591.4912 121.0293 591.7803 v120.8267 591.5898 120.7036 591.501 v120.6074 591.4307 120.2324 591.2402 YF115.4365 592.1709 m115.2573 591.9717 114.9116 591.6309 114.5356 591.502 c115.1543 591.5176 115.4224 591.5225 V115.4497 591.5225 l115.7173 591.5176 116.3374 591.502 y115.9604 591.6309 115.6143 591.9717 115.4365 592.1709 CF110.6396 591.2402 m110.2646 591.4307 110.1685 591.501 v110.0454 591.5898 109.8423 591.7803 y109.6685 591.4912 109.2886 591.0664 y110.1826 591.2529 110.6396 591.2402 VF0 D124.6924 588.3721 m124.9863 588.293 125.4004 588.0029 125.2866 587.5781 c125.1724 587.1523 124.6694 587.1084 124.3745 587.1875 c124.0796 587.2656 123.6665 587.5557 123.7803 587.9814 c123.8945 588.4072 124.3975 588.4512 124.6924 588.3721 CF120.8335 588.4873 m119.9385 587.7354 L119.1875 588.6309 L120.0825 589.3818 l120.8335 588.4873 Lf106.6006 587.1875 m106.3057 587.1084 105.8027 587.1523 105.6885 587.5781 c105.5747 588.0029 105.9883 588.293 106.2827 588.3721 c106.5776 588.4512 107.0806 588.4072 107.1943 587.9814 c107.3086 587.5557 106.8955 587.2656 106.6006 587.1875 CF114.5547 588.7705 m114.5547 589.1074 114.9727 589.3809 115.4873 589.3809 c116.0024 589.3809 116.4204 589.1074 116.4204 588.7705 c116.4204 588.4316 116.0024 588.1582 115.4873 588.1582 c114.9727 588.1582 114.5547 588.4316 114.5547 588.7705 CF110.1416 588.4873 m110.8926 589.3818 L111.7876 588.6309 L111.0366 587.7354 l110.1416 588.4873 Lf102.4844 561.4639 m102.5864 561.8711 103.0195 561.7803 y102.9165 562.1553 103.2983 562.3271 v103.7227 562.5166 103.9336 562.0488 Y104.1113 560.8438 L102.8267 560.8867 l102.3716 561.0127 102.4844 561.4639 VF104.3047 563.459 m104.4053 563.8652 104.8394 563.7744 y104.7363 564.1494 105.1187 564.3213 v105.5425 564.5117 105.7524 564.0439 Y105.9307 562.8379 L104.6465 562.8809 l104.1914 563.0078 104.3047 563.459 VF106.1235 565.4541 m106.2256 565.8604 106.6587 565.7686 y106.5557 566.1436 106.9375 566.3164 v107.3613 566.5059 107.5723 566.0381 Y107.7505 564.833 L106.4653 564.876 l106.0107 565.0029 106.1235 565.4541 VF115.4473 583.9258 m115.5493 584.333 115.9824 584.2422 y115.8794 584.6172 116.2617 584.7891 v116.6855 584.9795 116.8955 584.5107 Y117.0747 583.3057 L115.7896 583.3486 l115.3345 583.4756 115.4473 583.9258 VF117.2256 577.123 m117.3276 577.5303 117.7607 577.4395 y117.6577 577.8145 118.0396 577.9854 v118.4634 578.1758 118.6733 577.708 Y118.8525 576.5029 L117.5674 576.5449 l117.1123 576.6719 117.2256 577.123 VF119.3604 579.3838 m119.4624 579.791 119.8955 579.6992 y119.7935 580.0752 120.1753 580.2461 v120.5996 580.4375 120.8096 579.9688 Y120.9873 578.7627 L119.7036 578.8057 l119.2485 578.9326 119.3604 579.3838 VF121.4966 581.6455 m121.5986 582.0508 122.0317 581.96 y121.9287 582.335 122.3115 582.5068 v122.7344 582.6982 122.9453 582.2305 Y123.1235 581.0244 L121.8394 581.0674 l121.3833 581.1943 121.4966 581.6455 VF123.6323 583.9063 m123.7344 584.3125 124.1675 584.2207 y124.0645 584.5957 124.4463 584.7676 v124.8706 584.959 125.0815 584.4902 Y125.2593 583.2852 L123.9746 583.3281 l123.5195 583.4551 123.6323 583.9063 VF101.2754 568.6855 m101.3774 569.0918 101.8105 569.001 y101.7075 569.377 102.0894 569.5479 v102.5137 569.7393 102.7246 569.2715 Y102.9023 568.0654 L101.6177 568.1084 l101.1626 568.2354 101.2754 568.6855 VF106.2344 556.584 m106.3364 556.9902 106.7695 556.8994 y106.6665 557.2744 107.0483 557.4463 v107.4727 557.6367 107.6836 557.168 Y107.8613 555.9629 L106.5767 556.0059 l106.1216 556.1328 106.2344 556.584 VF108.3457 558.8799 m108.4473 559.2861 108.8804 559.1953 y108.7783 559.5703 109.1606 559.7422 v109.5835 559.9326 109.7944 559.4639 Y109.9727 558.2588 L108.6885 558.3018 l108.2324 558.4287 108.3457 558.8799 VF110.4575 561.1758 m110.5596 561.582 110.9927 561.4912 y110.8896 561.8662 111.2715 562.0381 v111.6953 562.2295 111.9053 561.7607 Y112.0845 560.5547 L110.7993 560.5977 l110.3447 560.7246 110.4575 561.1758 VF112.5684 563.4717 m112.6704 563.8789 113.1035 563.7881 y113.0005 564.1631 113.3823 564.334 v113.8066 564.5254 114.0176 564.0566 Y114.1953 562.8506 L112.9106 562.8936 l112.4556 563.0215 112.5684 563.4717 VF121.8677 573.2344 m121.9697 573.6406 122.4023 573.5498 y122.2993 573.9248 122.6826 574.0957 v123.1055 574.2871 123.3164 573.8193 Y123.4946 572.6133 L122.2104 572.6563 l121.7544 572.7832 121.8677 573.2344 VF123.7715 575.3105 m123.8735 575.7168 124.3066 575.626 y124.2036 576.002 124.5854 576.1729 v125.0093 576.3643 125.2207 575.8965 Y125.3984 574.6904 L124.1133 574.7334 l123.6587 574.8604 123.7715 575.3105 VF125.6753 577.3877 m125.7773 577.7939 126.2104 577.7031 y126.1074 578.0781 126.4893 578.25 v126.9136 578.4414 127.1245 577.9717 Y127.3027 576.7666 L126.0176 576.8096 l125.5625 576.9375 125.6753 577.3877 VF127.5796 579.4648 m127.6816 579.8711 128.1143 579.7803 y128.0117 580.1553 128.3936 580.3271 v128.8174 580.5176 129.0283 580.0488 Y129.2065 578.8438 L127.9214 578.8867 l127.4663 579.0137 127.5796 579.4648 VF112.8013 554.5459 m112.9033 554.9521 113.3364 554.8613 y113.2334 555.2363 113.6157 555.4082 v114.0396 555.5986 114.2505 555.1299 Y114.4287 553.9248 L113.1436 553.9678 l112.6885 554.0947 112.8013 554.5459 VF127.5903 570.9131 m127.6924 571.3203 128.1255 571.2295 y128.0225 571.6045 128.4043 571.7764 v128.8286 571.9658 129.0396 571.498 Y129.2173 570.293 L127.9326 570.335 l127.4775 570.4619 127.5903 570.9131 VF113.2856 569.2705 m113.2856 569.333 113.3867 569.3232 113.5786 569.3555 c113.7705 569.3867 113.9414 569.4512 113.9414 569.3867 c113.9414 569.291 113.8086 569.3662 113.8086 569.2109 C113.8086 567.7109 l113.8086 567.6357 113.9097 567.6904 113.9097 567.6309 c113.9097 567.5557 113.7285 567.5879 113.5947 567.5879 c113.4556 567.5879 113.2793 567.5557 113.2793 567.6152 c113.2793 567.7158 113.4023 567.6152 113.4023 567.7109 C113.4023 569.1357 l113.4023 569.2861 113.2856 569.1475 113.2856 569.2705 CF111.6567 568.6211 m111.6567 568.6631 111.7095 568.668 111.8057 568.7168 c111.9023 568.7637 111.9604 568.8184 112.0464 568.7432 c112.1313 568.668 112.5957 568.1348 Y112.5957 568.8926 l112.5957 568.9785 112.4463 568.8662 112.4463 568.9512 c112.4463 569.0146 112.5107 569.0146 112.6167 569.0576 c112.7236 569.1006 112.8784 569.2178 112.8784 569.1436 c112.8784 569.0527 112.7666 569.0801 112.7666 568.9619 C112.7666 567.5 l112.7666 567.377 112.7554 567.377 112.7026 567.377 c112.6704 567.377 111.9316 568.3076 Y111.9316 567.3154 l111.9316 567.2246 112.1104 567.3496 112.1104 567.2646 c112.1104 567.2168 112.0034 567.1904 111.8965 567.1475 c111.7896 567.1055 111.6406 567.0352 111.6406 567.0889 c111.6406 567.1787 111.7734 567.1475 111.7734 567.2383 C111.7734 568.5244 l111.7734 568.6211 111.6567 568.5459 111.6567 568.6211 CF1 D111.0786 567.7061 m111.0786 568.3252 110.6836 568.0947 Y110.6836 566.8223 l111.0786 566.8301 111.0786 567.7061 VF0 D110.1553 567.9619 m110.1553 568.0068 110.3477 568.0781 110.4756 568.1377 c110.7056 568.2451 111.4473 568.624 111.4473 567.7109 c111.4473 566.873 110.8594 566.7344 110.6733 566.6494 c110.4863 566.5635 110.2334 566.4404 110.2144 566.4814 c110.1816 566.5469 110.3154 566.5576 110.3154 566.707 C110.3154 567.748 l110.3154 568.0098 110.1553 567.874 110.1553 567.9619 CF112.7407 571.7441 m112.7363 571.7832 112.8916 571.8096 112.9707 571.8311 c113.1045 571.8672 113.1895 571.8926 113.2456 571.8369 c113.3013 571.7803 113.5757 571.3379 y113.9287 571.8369 113.9565 571.8701 v113.9844 571.9043 113.9956 571.9512 114.1367 571.9541 c114.2983 571.957 114.3716 571.9736 114.3716 571.9404 c114.3716 571.8789 114.2705 571.9092 114.2646 571.7803 c114.2607 571.6797 114.2646 570.4863 114.2646 570.4189 c114.2646 570.2666 114.3687 570.3184 114.3687 570.2666 c114.3687 570.2168 114.3013 570.2373 114.0635 570.2393 c113.8677 570.2422 113.7354 570.2139 113.7354 570.251 c113.7354 570.3184 113.8394 570.2617 113.8394 570.3994 C113.8394 571.3096 l113.4976 570.8105 113.4805 570.8105 v113.4604 570.8105 113.0435 571.4473 Y113.0435 570.3574 l113.0435 570.1826 113.2163 570.2852 113.2163 570.2168 c113.2163 570.1826 113.0845 570.168 112.9873 570.1436 c112.8755 570.1162 112.7773 570.0742 112.7656 570.1055 c112.7417 570.1729 112.8867 570.1357 112.8867 570.332 c112.8867 570.5059 112.8887 571.5059 112.8867 571.5791 c112.8804 571.7725 112.7466 571.6885 112.7407 571.7441 CF112.2476 571.5537 m112.3057 571.5811 112.4585 571.6641 112.4766 571.6387 c112.5034 571.6016 112.4155 571.5938 112.3545 571.3301 c112.3315 571.2344 112.0444 569.7227 111.9375 569.6699 c111.9033 569.6523 111.4165 570.8604 111.3716 570.9561 c111.2915 571.127 111.2065 571.0117 111.1904 571.0732 c111.1807 571.1123 111.3135 571.1621 111.4243 571.2119 c111.4834 571.2393 111.6987 571.3691 111.7217 571.3428 c111.7666 571.292 111.6035 571.29 111.6816 571.1055 c111.7334 570.9814 112.0063 570.3799 y112.1665 571.0576 112.2153 571.2871 v112.2627 571.5156 112.0874 571.4023 112.0815 571.4521 c112.0786 571.4814 112.1665 571.5186 112.2417 571.5508 c112.2476 571.5537 Lf1 D110.3784 569.9678 m110.3784 569.1377 l110.8057 569.2266 110.8057 569.7441 v110.8057 570.1875 110.3784 569.9678 YF110.3726 570.6963 m110.3726 570.1465 l110.6826 570.2617 110.6826 570.5293 v110.6826 570.8486 110.3726 570.6963 YF0 D110.4053 570.8389 m110.5864 570.9082 111.0615 571.0039 111.0615 570.5928 c111.0615 570.2988 110.8696 570.2305 y111.2163 570.166 111.2163 569.8779 v111.2163 569.5469 111.0566 569.3174 110.8755 569.2207 c110.7827 569.1719 110.2134 568.8965 110.1597 568.8643 c110.1064 568.832 109.9795 568.7627 109.9653 568.7939 c109.9326 568.8662 110.0586 568.8535 110.0586 569.0674 C110.0586 570.3984 l110.0586 570.6807 109.9253 570.5557 109.9253 570.6299 c109.9253 570.6758 110.2197 570.7676 110.4053 570.8389 CF1 D113.3677 574.5859 m113.3677 573.9141 l113.6836 573.9346 113.6836 574.2979 v113.6836 574.7305 113.3677 574.5859 YF0 D114.2026 573.0859 m114.2983 573.0742 114.3413 573.1123 y114.3096 572.8721 114.0586 572.8721 v113.7173 572.8721 113.7227 573.459 113.6265 573.6299 c113.5303 573.8008 113.3696 573.71 Y113.3696 573.1123 l113.3696 572.9199 113.4893 573.0029 113.4893 572.9326 c113.4893 572.9043 113.3965 572.8877 y113.1357 572.8135 113.0396 572.792 v112.9434 572.7715 112.9014 572.749 112.9014 572.792 c112.9014 572.8682 112.9966 572.8193 112.9966 573.0293 C112.9966 574.2646 l112.9966 574.5049 112.8584 574.4248 112.8555 574.4922 c112.8535 574.5322 112.9517 574.5508 113.0474 574.5752 c113.2085 574.6152 113.2695 574.665 113.4985 574.7188 c113.7197 574.7705 114.1074 574.665 114.1074 574.3564 c114.1074 574.0137 113.9146 573.9453 113.8086 573.8652 c114.2026 573.6729 114.0264 573.1074 114.2026 573.0859 CF111.6094 573.9639 m111.7695 574.0166 112.0527 574.1367 112.3564 574.3076 c112.3975 574.3311 112.5215 574.4082 112.5806 574.2969 c112.6416 574.1816 112.6875 574.0303 112.6504 574.0137 c112.5957 573.9912 112.5596 574.0361 112.4907 574.0732 c112.4297 574.1055 112.3516 574.1416 112.2764 574.1211 c112.2017 574.0996 112.0996 574.0547 Y112.1006 573.5293 l112.2866 573.5293 112.3086 573.6299 v112.3257 573.7109 112.3584 573.8174 112.4175 573.833 c112.4517 573.8418 112.4414 573.7344 112.4453 573.583 c112.4473 573.5313 112.4507 573.502 112.4517 573.4736 c112.4556 573.2881 112.4443 573.2266 112.4175 573.2217 c112.3667 573.2119 112.3237 573.3467 112.3115 573.3789 c112.2896 573.4346 112.1006 573.3838 112.1006 573.3535 C112.1006 572.5967 l112.2446 572.6738 112.3086 572.7119 v112.3955 572.7627 112.5425 572.9316 112.5996 573.0322 c112.6553 573.1309 112.6777 573.2119 112.7295 573.2031 c112.7627 573.1982 112.6924 572.8721 y112.6875 572.7441 112.5806 572.6914 v112.4746 572.6367 111.8774 572.3584 111.8257 572.333 c111.7236 572.2852 111.6006 572.1973 111.5986 572.2451 c111.5957 572.3203 111.6973 572.2803 111.6973 572.501 C111.6943 573.7627 l111.6904 573.8691 111.6094 573.8838 v111.5474 573.8936 111.4893 573.9229 111.6094 573.9639 CF110.2134 573.3838 m110.2993 573.4141 110.5425 573.5176 110.5557 573.4893 c110.5894 573.4131 110.4297 573.4297 110.4824 573.2783 c110.5273 573.1504 110.8086 572.4824 Y111.0547 573.4434 l111.1074 573.6514 110.9395 573.5791 110.9253 573.6299 c110.9165 573.665 111.0483 573.7051 111.1235 573.7373 c111.1846 573.7656 111.3823 573.8506 111.3936 573.8252 c111.4194 573.7578 111.3184 573.7578 111.2656 573.5713 c111.2017 573.3496 110.8276 571.8457 110.7236 571.7891 c110.6646 571.7568 110.1494 573.0537 110.1094 573.1553 c110.0693 573.2559 109.9307 573.2178 109.9175 573.2783 c109.9116 573.3018 110.1274 573.3555 110.2134 573.3838 CF116.9756 569.2188 m116.9727 569.2588 117.0337 569.2432 117.1245 569.2148 c117.2153 569.1885 117.3247 569.1611 117.3994 569.0391 c117.4736 568.917 118.0366 567.9551 Y118.0327 568.8232 l118.0327 568.9385 117.9307 568.9414 117.9307 568.9893 c117.9307 569.0332 118.0083 568.9893 118.0903 568.9609 c118.1714 568.9336 118.2905 568.9209 118.2905 568.8828 c118.2905 568.8457 118.1855 568.9004 118.1855 568.7988 C118.1855 567.1621 l118.1855 567.0908 118.1377 567.1563 v118.0996 567.208 117.2563 568.5654 y117.2593 567.7148 117.2563 567.626 v117.2534 567.5254 117.3657 567.5352 117.3657 567.4844 c117.3657 567.4326 117.2466 567.46 117.1724 567.4736 c117.0977 567.4883 116.9854 567.4766 116.9854 567.542 c116.9854 567.6064 117.0874 567.5078 117.0874 567.6602 C117.0874 569.0527 l117.0874 569.1582 116.9785 569.165 116.9756 569.2188 CF117.7715 571.7256 m117.7715 571.7871 118.0396 571.6787 118.2495 571.6182 c118.4595 571.5566 118.8555 571.4922 118.8555 571.3643 c118.8555 571.2061 118.8965 571.0547 118.8457 571.0547 c118.8145 571.0547 118.7505 571.2549 118.6865 571.3203 c118.5884 571.418 118.3887 571.4619 118.3345 571.4717 c118.2793 571.4824 118.2935 571.4795 118.2935 571.4414 C118.2935 570.9326 l118.4287 570.8662 118.5034 570.8994 v118.5786 570.9326 118.5884 571.0518 118.6323 571.042 c118.6753 571.0322 118.6597 570.9404 118.6523 570.7637 c118.6455 570.5879 118.6665 570.4277 118.6216 570.4453 c118.5786 570.4619 118.5747 570.6113 118.4834 570.7002 c118.3916 570.7881 118.2905 570.8008 Y118.2905 569.9707 l118.3916 569.8594 118.6016 569.9268 v118.8115 569.9951 118.9604 570.1367 118.9946 570.1035 c119.0283 570.0693 119.0117 570.0225 118.9106 569.8633 c118.8086 569.7031 118.7544 569.6016 118.6523 569.6465 c118.5503 569.6904 118.3203 569.7783 118.1787 569.8418 c118.0366 569.9072 117.7417 569.9785 117.7417 570.0391 c117.7417 570.0996 117.8867 569.9883 117.8867 570.1641 C117.8867 571.584 l117.8867 571.6553 117.7715 571.6777 117.7715 571.7256 CF117.4287 571.9688 m117.5034 571.9688 117.4883 571.6934 117.4995 571.6035 c117.5205 571.4316 117.5713 571.2813 117.5176 571.2783 c117.4365 571.2744 117.3394 571.5469 117.2085 571.6816 c117.0854 571.8086 116.6333 572.04 116.6333 571.084 c116.6333 570.2656 116.9883 570.2832 117.1826 570.3438 c117.3726 570.4043 117.4517 570.5537 117.4736 570.5391 c117.4966 570.5244 117.3164 570.1348 116.9204 570.0898 c116.5244 570.0459 116.1367 570.4336 116.1367 571.043 c116.1367 571.6523 116.4355 572.0254 116.8125 572.0254 c117.1157 572.0254 117.2046 571.8164 117.3345 571.8164 c117.4214 571.8164 117.3423 571.9688 117.4287 571.9688 CF118.4497 574.1377 m118.4644 574.2148 118.6016 574.1182 118.8257 574.0273 c119.0483 573.9346 119.2114 573.8877 119.1987 573.8496 c119.1846 573.8135 119.0254 573.874 119.0454 573.7686 c119.0654 573.6641 119.3164 572.8408 y119.6074 573.5313 119.6143 573.5586 v119.6357 573.6436 119.5366 573.6572 119.5464 573.6982 c119.5576 573.7412 119.6455 573.6836 119.7163 573.6436 c119.7876 573.6035 119.9023 573.5664 119.8823 573.5176 c119.8623 573.4707 119.7773 573.5791 119.7437 573.498 c119.7095 573.417 119.1265 572.1094 Y118.5435 573.9893 l118.5107 574.0977 118.4395 574.0879 118.4497 574.1377 CF117.1177 574.6426 m117.1177 574.6875 117.1997 574.6504 Y117.7173 574.4639 l117.8086 574.4326 117.8057 574.3916 v117.8027 574.3516 117.6294 574.4434 117.6294 574.2871 C117.6294 572.8271 l117.6665 572.7295 117.8394 572.7998 v118.0127 572.8711 118.2695 573.041 y118.3916 573.1016 118.3613 573.0166 v118.3306 572.9316 118.2085 572.6611 y118.1816 572.5557 118.0425 572.5801 v117.9033 572.6045 117.5615 572.709 117.4663 572.7363 c117.3716 572.7627 117.1074 572.8438 y117.0537 572.8545 117.0537 572.8955 v117.0537 572.9355 117.2197 572.8916 117.2197 573.0244 C117.2197 574.4502 l117.2197 574.5791 117.1177 574.582 117.1177 574.6426 CF119.1255 569.4844 m119.1255 569.585 119.2646 569.4463 119.2646 569.6064 C119.2646 571.0156 l119.2646 571.1924 119.1846 571.1855 119.1846 571.2559 c119.1846 571.3252 119.3394 571.2236 119.3765 571.207 c119.4136 571.1924 119.8193 570.9834 119.8623 570.9619 c119.9043 570.9414 120.3374 570.7637 120.3374 570.29 c120.3374 569.9639 120.0654 570.0166 y120.3374 569.8574 120.3525 569.6172 v120.3696 569.377 120.4014 569.1738 120.4014 569.1416 c120.4014 569.1104 120.4497 568.9707 120.5986 569.0986 c120.6157 568.8125 120.2896 568.918 v120.0767 568.9873 120.0166 569.1846 120.0015 569.3184 c119.9844 569.4521 119.9106 570.0957 119.6216 570.0859 C119.6216 569.4404 l119.6216 569.2686 119.7227 569.3174 119.7227 569.2158 c119.7227 569.1514 119.5737 569.2539 119.4404 569.3076 c119.2427 569.3955 119.1255 569.4248 119.1255 569.4844 CF1 D119.6226 570.9189 m119.6226 570.2627 l119.6655 570.2471 119.9907 570.0391 119.9907 570.4443 c119.9907 570.8496 119.6226 570.9189 YF0 D118.9077 568.4609 m118.9385 568.5635 118.8423 568.5918 118.8613 568.6348 c118.8755 568.667 119.0083 568.5947 119.0884 568.5576 c119.1685 568.5205 119.2915 568.4883 119.3237 568.3789 c119.3555 568.2705 119.7744 566.8408 119.8145 566.708 c119.8594 566.5586 119.9473 566.6006 119.9214 566.5322 c119.9106 566.5049 119.7876 566.5645 119.5444 566.6602 c119.3423 566.7402 119.2427 566.7656 119.2427 566.7979 c119.2427 566.8643 119.4463 566.7549 119.3984 566.8936 c119.3667 566.9873 119.2964 567.2324 Y118.7334 567.415 L118.6533 567.1426 l118.6133 567.0068 118.7417 567.0293 118.7173 566.9785 c118.7046 566.9502 118.6245 566.9863 118.5205 567.0293 c118.4204 567.0693 118.3774 567.0771 118.3813 567.1064 c118.3867 567.1543 118.4663 567.085 118.5034 567.1826 c118.5415 567.2822 118.8794 568.374 118.9077 568.4609 CF1 D118.9966 568.2744 m118.8003 567.6416 L119.2383 567.4951 l118.9966 568.2744 Lf0 D130.2764 585.9502 m130.2764 567.2178 l130.4844 556.0283 121.3306 552.0576 115.2915 552.0576 c109.2515 552.0576 100.0977 556.0283 100.3057 567.2178 C100.3057 585.9502 L105.8916 585.9502 l105.8613 586.2959 105.9556 586.5371 105.9644 586.5479 c113.5957 588.0762 117.2866 588.1484 124.9116 586.5439 c125.0757 586.3457 125.1064 586.1338 125.0786 585.9502 c130.2764 585.9502 Lf1 D103.0986 558.7979 m108.9487 565.0283 L108.9487 566.8477 L108.2856 566.8701 l107.8296 566.9971 107.9424 567.4482 v108.0444 567.8555 108.4775 567.7637 y108.3755 568.1387 108.7573 568.3096 v108.8267 568.3418 108.8906 568.3555 108.9487 568.3564 C108.9497 569.5635 L101.6396 561.7793 l102.0146 560.6729 102.5107 559.6816 103.0986 558.7979 CF110.3794 574.7178 m110.4585 574.7539 110.5386 574.791 110.6187 574.8311 c110.9004 574.9727 111.4087 575.2393 111.9556 575.4697 c112.4937 575.6973 113.1294 575.9189 113.6396 575.9189 c114.1523 575.9189 114.5645 575.7646 114.8477 575.6133 c114.9893 575.5371 115.1006 575.46 115.1777 575.4014 C115.2056 575.3779 l115.2153 575.3926 115.2275 575.4092 115.2417 575.4258 c115.3003 575.498 115.3867 575.5811 115.5107 575.6592 c115.7607 575.8174 116.1426 575.9404 116.7207 575.9404 c117.3267 575.9404 118.0063 575.6982 118.5547 575.4502 C118.6807 575.3916 L128.0796 585.4014 L123.8213 585.4014 L115.5435 576.5859 L115.5435 580.8291 L119.8364 585.4014 L100.8535 585.4014 L100.8535 567.2129 l100.8413 566.5332 100.8643 565.8818 100.9204 565.2559 C105.0156 569.6182 L108.9497 569.6182 L108.9497 573.0938 l108.8765 572.9922 108.7646 573.0107 y108.8633 573.3105 108.5903 573.3545 v108.5693 573.3574 108.5474 573.3594 108.5225 573.3594 c108.3677 573.3594 108.2803 573.2813 108.1875 573.207 c108.0425 573.0908 107.6123 572.5869 107.5283 572.5049 c107.4443 572.5869 107.0137 573.0908 106.8677 573.207 c106.7754 573.2813 106.6875 573.3594 106.5337 573.3594 c106.5083 573.3594 106.4854 573.3574 106.4653 573.3545 c106.1914 573.3105 106.2915 573.0107 y106.0435 572.9697 106.0435 573.3467 v106.0435 573.6133 106.2554 573.7705 106.4434 573.8203 c106.7275 573.8848 107.0083 573.9053 107.0615 574.375 c107.0645 574.4688 107.0483 574.4883 y106.9463 574.333 106.6943 574.2129 v106.4023 574.0605 105.6133 574.0713 105.6333 573.6191 c105.6274 573.4385 105.8257 573.4551 y105.8154 573.373 105.6826 573.3535 v105.6533 573.3486 105.6187 573.3467 105.5767 573.3496 c105.3936 573.376 105.3325 573.5693 105.3457 573.8135 c105.3564 573.9658 105.2544 574.168 105.0566 574.1387 c105.0225 574.1328 104.9844 574.1211 104.9443 574.0996 c104.7935 574.0117 104.8467 573.8682 y104.6753 573.9639 104.7017 574.1631 v104.7246 574.334 104.8374 574.4121 104.9976 574.4785 c105.0176 574.4824 105.0366 574.4863 105.0557 574.4893 c105.2607 574.5205 105.4326 574.459 y105.3804 574.6152 105.3994 574.7705 v105.4165 574.9043 105.4863 575.0381 105.6865 575.0752 c105.9844 575.1309 106.0483 574.9307 106.0034 574.8213 c105.9873 574.8105 105.9346 574.8896 105.8496 574.877 c105.8374 574.875 105.8247 574.8711 105.8105 574.8652 c105.7607 574.8389 105.7314 574.8057 105.7163 574.7705 c105.6665 574.6523 105.7646 574.5029 105.7817 574.4785 c105.8413 574.3984 106.0254 574.3428 106.2544 574.3857 c106.5205 574.4434 106.7095 574.6162 106.8013 574.7705 c106.8506 574.8496 106.8716 574.9248 106.8643 574.9746 C107.0093 576.585 l107.0557 576.999 106.7734 577.0469 v106.7407 577.0537 106.7075 577.0537 106.6733 577.0488 c106.4355 577.0107 106.1875 576.6943 106.2656 576.2969 c106.3257 575.9922 106.1694 575.7588 106.0195 575.7246 c105.8286 575.6797 105.7124 575.7178 105.6455 575.8574 c105.9785 575.8789 105.9575 576.1465 105.8525 576.2422 c105.8076 576.2822 105.7427 576.293 105.6675 576.2822 c105.3564 576.2334 104.8643 575.8047 104.7856 575.5488 c104.7144 575.3193 104.8867 575.3779 104.9595 575.1836 c105.0186 575.0283 104.8867 574.9043 y104.8823 574.8516 104.8755 574.8066 104.8667 574.7705 c104.8306 574.6348 104.7607 574.5908 104.6953 574.5811 c104.6445 574.5732 104.5967 574.5869 104.5713 574.5947 c104.6543 574.6309 104.6797 574.708 104.6865 574.7705 c104.6914 574.8145 104.6875 574.8496 y104.5947 574.8398 104.5137 574.9648 v104.4194 575.1113 104.5356 575.1572 104.4326 575.3145 c104.3276 575.4717 104.0376 575.6396 103.8105 575.6689 c103.7954 575.6709 103.7817 575.6699 103.7676 575.668 c103.7236 575.6621 103.6816 575.6387 103.6133 575.6289 c103.5947 575.625 103.5723 575.623 103.5474 575.623 c103.3687 575.6191 103.4175 575.7285 103.2705 575.7158 c103.1943 575.7002 103.1504 575.6279 103.1753 575.5234 c103.1797 575.5078 103.1675 575.498 y103.0864 575.5527 103.0527 575.6279 103.0464 575.7158 c103.0454 575.9482 103.1934 576.1123 103.3335 576.125 c103.4995 576.1406 103.5767 576.0381 103.5894 576.0186 c103.6807 576.4043 103.3784 576.2734 103.2324 576.459 c103.1343 576.5869 103.1733 576.6514 103.1865 576.6973 c103.2065 576.7666 103.0854 576.7754 102.9937 576.7607 c102.9673 576.7568 102.9434 576.751 102.9263 576.7451 c102.9087 576.7617 102.9556 576.9424 103.1455 576.9697 c103.2104 576.9814 103.2935 576.9727 103.3984 576.9336 c103.4966 576.9629 103.5903 576.915 103.6255 576.8477 c103.6675 576.7676 103.6323 576.6758 103.6436 576.5771 c103.6733 576.3213 103.8306 576.3281 103.8545 576.3311 c103.7153 576.6973 103.8906 576.8057 103.9087 576.8633 c103.9263 576.9209 103.9043 576.998 103.8135 577.0303 c103.7944 577.0371 103.7686 577.0527 103.7983 577.0605 c104.1494 577.0762 104.2036 576.8467 v104.3545 576.7666 104.3584 576.5771 v104.3623 576.3408 104.2344 576.3193 104.1855 576.2725 c104.2217 576.0254 104.3677 575.9844 104.5044 576.0049 c104.6387 576.0264 104.7627 576.1055 y104.9937 576.1973 105.4727 576.4932 105.3433 576.7354 c105.2847 576.8457 105.1875 576.8926 105.0806 576.877 c105.0293 576.8691 104.9775 576.8467 104.9263 576.8105 c104.7876 576.6777 104.8564 576.5039 y104.6455 576.4482 104.5464 576.8145 104.6787 576.9697 c104.7705 577.0791 104.8833 577.1221 105.0044 577.1436 c105.1426 577.168 105.2915 577.1621 105.4336 577.1914 c105.6025 577.2246 105.7314 577.3301 105.8564 577.5488 c105.9487 577.7021 105.9517 577.9131 105.8716 578.0811 c105.7896 578.2646 105.6206 578.4951 105.3833 578.5381 c105.3384 578.1406 105.1196 577.8281 104.8516 577.6367 c104.7856 577.5908 104.6987 577.5654 104.6406 577.5557 c104.5933 577.5488 104.5635 577.5518 104.5747 577.5664 c104.9233 577.9736 104.8335 578.4023 104.8237 578.4434 c104.7983 578.3965 104.5254 577.8955 104.0386 577.6807 c103.9917 577.6611 103.9424 577.6484 103.8926 577.6396 c103.6304 577.5986 103.3687 577.7207 103.4727 577.7344 c103.6455 577.7578 104.3433 578.1631 104.1333 579.0234 c104.1064 578.9736 103.7993 578.4258 103.4214 578.167 c103.2607 578.0557 103.0923 578.001 102.9434 577.9785 c102.6455 577.9307 102.4194 578.0137 102.4614 578.0527 c103.2837 578.4424 103.2935 578.8135 v103.2666 578.792 103.0444 578.6201 102.7856 578.5801 c102.7505 578.5752 102.7144 578.5723 102.6797 578.5723 c101.9785 578.5723 101.9785 579.0762 y102.0273 579.0713 102.6826 579.0283 103.2173 580.1641 c102.8687 580.041 102.4663 579.9971 v102.2285 579.9697 102.1284 580.1201 102.1567 580.1182 c102.1987 580.1045 102.2456 580.0996 102.3057 580.1094 c102.4375 580.1299 102.6255 580.2129 102.8643 580.3965 c102.8003 580.4248 101.9414 580.8057 102.2734 581.3955 c102.5107 581.1885 102.8027 581.1621 v103.0176 581.1436 103.3916 581.1836 103.4824 581.3994 c103.0195 581.4258 102.5654 581.7119 v102.2974 581.8789 102.1924 582.2764 102.2905 582.1611 c102.3906 582.043 102.4937 582.0078 102.6475 581.9688 c102.7676 581.9385 102.8496 581.9668 y102.1826 582.5986 102.6045 583.0889 v102.8296 582.46 103.3823 582.458 v103.1025 582.7178 103.0464 583.0303 v103.0073 583.2441 103.0234 583.5283 103.0625 583.4473 c103.0894 583.3906 103.1494 583.29 103.1885 583.2168 c103.2573 583.0928 103.4043 582.9268 103.5225 582.8252 c103.4385 583.1543 103.5537 583.4531 v103.5703 583.499 103.7246 583.75 103.7354 583.6875 c103.7373 583.4902 103.7485 583.4268 v103.7827 583.2148 103.8633 582.9492 104.2637 582.542 c104.7705 582.0254 105.3203 582.0293 105.3247 581.7061 c105.3047 581.3213 104.8306 581.3711 104.5195 581.3984 c104.4116 581.3984 104.4253 581.2334 104.5156 581.1152 c104.7744 580.7686 105.8726 580.6846 106.2163 581.2471 c106.3384 581.4443 106.3716 581.6797 106.2896 581.8994 c106.1855 582.1914 105.9497 582.2002 105.5015 582.2979 c105.1836 582.3662 105.2695 582.5088 105.3164 582.5088 c105.4136 582.4541 105.5073 582.4541 v105.7427 582.4521 105.5996 582.7549 105.5747 582.751 c105.5146 582.7422 105.2607 582.6396 105.0415 582.6211 c104.7637 582.5967 104.4307 582.708 104.4307 582.9014 c104.4307 583.1328 104.7217 583.1982 104.7085 583.1367 c104.7056 583.1221 104.5337 582.8076 105.0464 582.8252 c105.2085 582.8301 105.5356 582.8486 105.5347 582.8633 c105.5244 582.9492 105.3726 583.0723 105.2563 583.0723 c105.1704 583.0723 105.0913 583.0498 104.9346 583.0664 c104.8784 583.2041 105.0283 583.3438 105.1313 583.3955 c105.2344 583.4473 105.3086 583.4229 105.3535 583.4395 c105.4136 583.46 105.4497 583.6494 105.7925 583.6543 c105.9727 583.6572 106.2334 583.5322 106.3545 583.5322 c106.4746 583.5322 106.6885 583.6104 106.7104 583.5723 c106.7314 583.5322 106.6245 583.4092 106.6455 583.3008 c106.6357 583.0498 107.0693 582.0576 107.5273 581.9639 c107.9844 582.0576 108.4204 583.0498 108.4097 583.3008 c108.4307 583.4092 108.3237 583.5322 108.3447 583.5723 c108.3667 583.6104 108.5815 583.5322 108.7017 583.5322 c108.8213 583.5322 109.0825 583.6572 109.2637 583.6543 c109.6064 583.6494 109.6426 583.46 109.7026 583.4395 c109.7476 583.4229 109.8203 583.4473 109.9233 583.3955 c110.0264 583.3438 110.1763 583.2041 110.1206 583.0664 c109.9644 583.0498 109.8843 583.0723 109.7983 583.0723 c109.6826 583.0723 109.5303 582.9492 109.5215 582.8633 c109.5195 582.8486 109.8467 582.8301 110.0093 582.8252 c110.5225 582.8076 110.3506 583.1221 110.3467 583.1367 c110.3335 583.1982 110.6255 583.1328 110.6255 582.9014 c110.6255 582.708 110.2915 582.5967 110.0137 582.6211 c109.7954 582.6396 109.5415 582.7422 109.4814 582.751 c109.4565 582.7549 109.3125 582.4521 109.5483 582.4541 c109.6426 582.4541 109.7393 582.5088 y109.7866 582.5088 109.8726 582.3662 109.5547 582.2979 c109.1064 582.2002 108.8696 582.1914 108.7656 581.8994 c108.6846 581.6797 108.7173 581.4443 108.8384 581.2471 c109.1826 580.6846 110.2817 580.7686 110.5405 581.1152 c110.6294 581.2334 110.6445 581.3984 110.5356 581.3984 c110.2256 581.3711 109.7515 581.3213 109.7305 581.7061 c109.7354 582.0293 110.2856 582.0254 110.7925 582.542 c111.1914 582.9492 111.2734 583.2148 111.3076 583.4268 c111.3174 583.4902 111.3203 583.6875 y111.3306 583.75 111.4854 583.499 111.5024 583.4531 c111.6167 583.1543 111.5327 582.8252 y111.6504 582.9268 111.7983 583.0928 111.8667 583.2168 c111.9067 583.29 111.9663 583.3906 111.9927 583.4473 c112.0317 583.5283 112.0474 583.2441 112.0093 583.0303 c111.9536 582.7178 111.6733 582.458 y112.2266 582.46 112.4507 583.0889 y112.8726 582.5986 112.2056 581.9668 y112.2876 581.9385 112.4087 581.9688 v112.5625 582.0078 112.6646 582.043 112.7646 582.1611 c112.8633 582.2764 112.7583 581.8789 112.4907 581.7119 c112.0366 581.4258 111.5737 581.3994 y111.6636 581.1836 112.0386 581.1436 112.2524 581.1621 c112.5444 581.1885 112.7827 581.3955 y113.1133 580.8057 112.2544 580.4248 112.1914 580.3965 c112.4297 580.2129 112.6187 580.1299 112.7495 580.1094 c112.8096 580.0996 112.8574 580.1045 112.8994 580.1182 c112.9277 580.1201 112.8276 579.9697 112.5884 579.9971 c112.1875 580.041 111.8384 580.1641 y112.3735 579.0283 113.0273 579.0713 113.0776 579.0762 c113.0776 578.5723 112.3765 578.5723 v112.3403 578.5723 112.3057 578.5752 112.2705 578.5801 c112.0117 578.6201 111.7886 578.792 111.7617 578.8135 c111.7725 578.4424 112.5933 578.0527 y112.6367 578.0137 112.4097 577.9307 112.1123 577.9785 c111.9624 578.001 111.7954 578.0557 111.6343 578.167 c111.2554 578.4258 110.9487 578.9736 110.9214 579.0234 c110.7114 578.1631 111.4097 577.7578 111.5825 577.7344 c111.6865 577.7207 111.4243 577.5986 111.1626 577.6396 c111.1133 577.6484 111.0645 577.6611 111.0176 577.6807 c110.5293 577.8955 110.2573 578.3965 110.2324 578.4434 c110.2227 578.4023 110.1313 577.9736 110.4805 577.5664 c110.4927 577.5518 110.4624 577.5488 110.4155 577.5557 c110.3564 577.5654 110.2705 577.5908 110.2046 577.6367 c109.9365 577.8281 109.7173 578.1406 109.6714 578.5381 c109.4346 578.4951 109.2666 578.2646 109.1846 578.0811 c109.1045 577.9131 109.1074 577.7021 109.1987 577.5488 c109.3247 577.3301 109.4536 577.2246 109.6226 577.1914 c109.7637 577.1621 109.9126 577.168 110.0503 577.1436 c110.1724 577.1221 110.2856 577.0791 110.3774 576.9697 c110.5093 576.8145 110.4097 576.4482 110.1987 576.5039 c110.2686 576.6777 110.1294 576.8105 v110.0786 576.8467 110.0254 576.8691 109.9746 576.877 c109.8687 576.8926 109.7705 576.8457 109.7114 576.7354 c109.5825 576.4932 110.0625 576.1973 110.2925 576.1055 c110.4165 576.0264 110.5513 576.0049 v110.6875 575.9844 110.8345 576.0254 110.8696 576.2725 c110.8203 576.3193 110.6924 576.3408 110.6963 576.5771 c110.7007 576.7666 110.8525 576.8467 y110.9067 577.0762 111.2563 577.0605 y111.2876 577.0527 111.2607 577.0371 111.2417 577.0303 c111.1514 576.998 111.1294 576.9209 111.1475 576.8633 c111.1646 576.8057 111.3403 576.6973 111.2017 576.3311 c111.2246 576.3281 111.3823 576.3213 111.4116 576.5771 c111.4224 576.6758 111.3887 576.7676 111.4307 576.8477 c111.4653 576.915 111.5586 576.9629 111.6577 576.9336 c111.7617 576.9727 111.8447 576.9814 111.9106 576.9697 c112.1006 576.9424 112.1465 576.7617 y112.1494 576.7402 112.1284 576.7451 v112.1113 576.751 112.0884 576.7568 112.0625 576.7607 c111.9707 576.7754 111.8496 576.7666 111.8696 576.6973 c111.8823 576.6514 111.9214 576.5869 111.8223 576.459 c111.6777 576.2734 111.3755 576.4043 111.4663 576.0186 c111.4785 576.0381 111.5557 576.1406 111.7227 576.125 c111.8623 576.1123 112.0093 575.9482 112.0083 575.7158 c112.0034 575.6279 111.9697 575.5527 111.8887 575.498 c111.8755 575.5078 111.8794 575.5234 v111.9043 575.6279 111.8613 575.7002 111.7847 575.7158 c111.6387 575.7285 111.6865 575.6191 111.5073 575.623 c111.4834 575.623 111.4614 575.625 111.4414 575.6289 c111.3735 575.6387 111.3315 575.6621 111.2876 575.668 c111.2734 575.6699 111.2593 575.6709 111.2456 575.6689 c111.0186 575.6396 110.7285 575.4717 110.6235 575.3145 c110.5195 575.1572 110.6367 575.1113 110.5415 574.9648 c110.4604 574.8398 110.3677 574.8496 y110.3633 574.8145 110.3687 574.7705 v110.3706 574.7529 110.3735 574.7363 110.3794 574.7178 CF109.7793 574.4922 m109.9214 574.5342 110.0776 574.5898 110.2383 574.6572 c110.2197 574.6846 110.2026 574.7217 110.1895 574.7705 c110.1797 574.8066 110.1724 574.8516 110.1694 574.9043 c110.0376 575.0283 110.0967 575.1836 v110.1694 575.3779 110.3413 575.3193 110.2705 575.5488 c110.1904 575.8047 109.6987 576.2334 109.3877 576.2822 c109.3125 576.293 109.2485 576.2822 109.2036 576.2422 c109.0986 576.1465 109.0776 575.8789 109.4106 575.8574 c109.3423 575.7178 109.2275 575.6797 109.0366 575.7246 c108.8857 575.7588 108.7295 575.9922 108.7896 576.2969 c108.8687 576.6943 108.6206 577.0107 108.3813 577.0488 c108.3486 577.0537 108.3145 577.0537 108.2827 577.0469 c108.0005 576.999 108.0464 576.585 Y108.1914 574.9746 l108.1836 574.9248 108.2056 574.8496 108.2534 574.7705 c108.3467 574.6162 108.5347 574.4434 108.8013 574.3857 c109.0303 574.3428 109.2134 574.3984 109.2744 574.4785 c109.2905 574.5029 109.3896 574.6523 109.3394 574.7705 c109.3237 574.8057 109.2944 574.8389 109.2456 574.8652 c109.2314 574.8711 109.2183 574.875 109.2056 574.877 c109.1216 574.8896 109.0674 574.8105 109.0513 574.8213 c109.0073 574.9307 109.0713 575.1309 109.3687 575.0752 c109.5693 575.0381 109.6396 574.9043 109.6553 574.7705 c109.6753 574.6152 109.6226 574.459 y109.6855 574.4814 109.7793 574.4922 VF108.9497 573.918 m108.9463 573.9414 108.9434 573.9893 108.9517 574.0459 c108.7334 574.1084 108.4946 574.1426 108.3604 574.2129 c108.1094 574.333 108.0063 574.4883 y107.9917 574.4688 107.9946 574.375 v108.0474 573.9053 108.3286 573.8848 108.6113 573.8203 c108.7363 573.7871 108.8726 573.7061 108.9497 573.5771 c108.9497 573.918 Lf119.0933 564.8604 m119.0493 564.7686 119.0513 564.5957 119.1157 564.5107 c119.3506 564.1982 120.2754 564.0996 120.7026 564.5029 c120.1494 564.5889 119.6284 564.7324 119.0933 564.8604 CF121.6685 565.7256 m121.8066 565.54 121.9653 565.3936 122.1274 565.3613 c122.5854 565.4541 123.0205 566.4473 123.0093 566.6982 c123.0303 566.8047 122.9243 566.9287 122.9453 566.9688 c122.9673 567.0068 123.1816 566.9287 123.3013 566.9287 c123.4214 566.9287 123.6836 567.0537 123.8633 567.0508 c124.2065 567.0459 124.2427 566.8574 124.3027 566.8359 c124.3477 566.8203 124.4214 566.8438 124.5234 566.792 c124.6274 566.7412 124.7773 566.6006 124.7217 566.4629 c124.5645 566.4473 124.4854 566.4688 124.3994 566.4688 c124.2837 566.4688 124.1313 566.3457 124.1216 566.2598 c124.1206 566.2461 124.4473 566.2266 124.6094 566.2217 c125.1226 566.2051 124.9507 566.5186 124.9463 566.5342 c124.9346 566.5938 125.2256 566.5303 125.2256 566.2979 c125.2256 566.1045 124.8916 565.9941 124.6143 566.0176 c124.3955 566.0371 124.1416 566.1387 124.0815 566.1484 c124.0566 566.1523 123.9136 565.8486 124.1484 565.8506 c124.2427 565.8506 124.3394 565.9063 y124.3867 565.9063 124.4727 565.7627 124.1543 565.6953 c123.7065 565.5967 123.4707 565.5879 123.3657 565.2959 c123.2847 565.0771 123.3174 564.8408 123.4385 564.6436 c123.7827 564.082 124.8813 564.166 125.1406 564.5107 c125.2295 564.6299 125.2446 564.7949 125.1357 564.7949 c124.8257 564.7676 124.3516 564.7178 124.3306 565.1035 c124.3354 565.4258 124.8857 565.4219 125.3926 565.9395 c125.7925 566.3457 125.8735 566.6123 125.9077 566.8242 c125.9175 566.8867 125.9204 567.084 y125.9307 567.1475 126.0854 566.8965 126.1025 566.8496 c126.2163 566.5508 126.1323 566.2217 y126.2505 566.3232 126.3984 566.4902 126.4673 566.6143 c126.5063 566.6875 126.5664 566.7881 126.5923 566.8428 c126.6313 566.9248 126.6484 566.6406 126.6094 566.4268 c126.5537 566.1152 126.2734 565.8545 y126.8267 565.8574 127.0513 566.4863 y127.4727 565.9961 126.8057 565.3643 y126.8887 565.335 127.0083 565.3652 v127.1626 565.4053 127.2656 565.4404 127.3657 565.5576 c127.4634 565.6729 127.3584 565.2764 127.0903 565.1094 c126.6367 564.8232 126.1733 564.7959 y126.2637 564.5811 126.6387 564.54 126.8525 564.5586 c127.1445 564.585 127.3823 564.792 y127.7144 564.2031 126.8545 563.8223 126.7915 563.793 c127.0293 563.6104 127.2183 563.5273 127.3506 563.5059 c127.4097 563.4971 127.4575 563.501 127.4995 563.5146 c127.5273 563.5166 127.4277 563.3672 127.1885 563.3936 c126.7876 563.4375 126.4385 563.5605 y126.9736 562.4248 127.6274 562.4678 127.6777 562.4727 c127.6777 561.9688 126.9766 561.9688 v126.9404 561.9688 126.9053 561.9717 126.8706 561.9766 c126.6113 562.0166 126.3887 562.1895 126.3613 562.21 c126.3726 561.8389 127.1934 561.4502 y127.2363 561.4111 127.0093 561.3281 126.7124 561.375 c126.5625 561.3984 126.3955 561.4531 126.2344 561.5645 c125.8564 561.8232 125.5493 562.3711 125.5225 562.4199 c125.3125 561.5596 126.0093 561.1553 126.1836 561.1309 c126.2876 561.1182 126.0254 560.9961 125.7637 561.0371 c125.7134 561.0439 125.6646 561.0576 125.6177 561.0781 c125.1294 561.292 124.8574 561.793 124.8325 561.8398 c124.8223 561.7988 124.7324 561.3711 125.0815 560.9619 c125.0923 560.9492 125.0625 560.9463 125.0156 560.9531 c124.9575 560.9619 124.8706 560.9883 124.8047 561.0342 c124.5366 561.2246 124.3174 561.5381 124.2715 561.9346 c124.0347 561.8916 123.8667 561.6621 123.7847 561.4785 c123.7046 561.3096 123.7075 561.0986 123.7993 560.9463 c123.9243 560.7266 124.0537 560.6221 124.2227 560.5869 c124.3633 560.5586 124.5127 560.5645 124.6504 560.54 c124.7725 560.5186 124.8857 560.4756 124.9775 560.3672 c125.1094 560.2109 125.0107 559.8447 124.7983 559.9014 c124.8687 560.0752 124.7295 560.207 v124.6787 560.2441 124.6255 560.2656 124.5757 560.2744 c124.4683 560.29 124.3716 560.2432 124.3115 560.1318 c124.1826 559.8896 124.6626 559.5938 124.8926 559.502 c125.0176 559.4229 125.1514 559.4023 v125.2886 559.3809 125.4346 559.4219 125.4707 559.6689 c125.4204 559.7158 125.2925 559.7383 125.2974 559.9736 c125.3003 560.1631 125.4526 560.2441 y125.5063 560.4727 125.8574 560.458 y125.8877 560.4502 125.8613 560.4336 125.8413 560.4268 c125.7515 560.3955 125.7295 560.3184 125.7476 560.2598 c125.7656 560.2031 125.9404 560.0938 125.8013 559.7285 c125.8257 559.7246 125.9824 559.7178 126.0117 559.9736 c126.0234 560.0732 125.9883 560.165 126.0303 560.2451 c126.0654 560.3125 126.1587 560.3604 126.2573 560.3311 c126.3623 560.3701 126.4443 560.3779 126.5107 560.3672 c126.7007 560.3389 126.7476 560.1592 y126.7495 560.1357 126.7295 560.1406 v126.7124 560.1484 126.6885 560.1543 126.6626 560.1582 c126.5703 560.1719 126.4497 560.1641 126.4697 560.0938 c126.4824 560.0479 126.5215 559.9844 126.4224 559.8564 c126.2773 559.6699 125.9756 559.8008 126.0664 559.415 c126.0796 559.4346 126.1553 559.5381 126.3223 559.5225 c126.4624 559.5088 126.6104 559.3447 126.6084 559.1123 c126.6035 559.0254 126.5693 558.9502 126.4883 558.8955 c126.4766 558.9053 126.4795 558.9189 v126.5054 559.0254 126.4614 559.0967 126.3843 559.1133 c126.2383 559.125 126.2876 559.0156 126.1074 559.0205 c126.0835 559.0205 126.0615 559.0225 126.0415 559.0254 c125.9746 559.0361 125.9326 559.0586 125.8877 559.0654 c125.8745 559.0674 125.8604 559.0684 125.8457 559.0664 c125.6187 559.0371 125.3286 558.8691 125.2236 558.7109 c125.1196 558.5527 125.2363 558.5078 125.1416 558.3623 c125.0615 558.2373 124.9673 558.2461 y124.9634 558.2109 124.9683 558.167 v124.9766 558.1055 125.0015 558.0273 125.0815 558.0098 c125.1064 557.998 125.0845 557.9922 v125.0596 557.9844 125.0117 557.9697 124.9595 557.9785 c124.8955 557.9883 124.8247 558.0322 124.7896 558.167 c124.7793 558.2041 124.7725 558.249 124.7695 558.3008 c124.6377 558.4248 124.6963 558.5811 v124.7695 558.7754 124.9414 558.7158 124.8706 558.9463 c124.7915 559.2021 124.2983 559.6299 123.9873 559.6787 c123.9126 559.6904 123.8486 559.6787 123.8037 559.6377 c123.6987 559.543 123.6777 559.2764 124.0107 559.2539 c123.9434 559.1152 123.8276 559.0771 123.6367 559.1211 c123.4863 559.1563 123.3296 559.3887 123.3896 559.6934 c123.4683 560.0908 123.2207 560.4082 122.9824 560.4463 c122.9487 560.4512 122.9146 560.4512 122.8823 560.4443 c122.6006 560.3965 122.6465 559.9824 Y122.7915 558.3721 l122.7837 558.3223 122.8057 558.2471 122.8535 558.167 c122.9463 558.0127 123.1357 557.8398 123.4014 557.7832 c123.6304 557.7402 123.8145 557.7949 123.8745 557.875 c123.8906 557.9004 123.9893 558.0488 123.9395 558.167 c123.9233 558.2031 123.8945 558.2363 123.8457 558.2617 c123.8315 558.2676 123.8184 558.2725 123.8066 558.2744 c123.7217 558.2861 123.6685 558.208 123.6514 558.2178 c123.6074 558.3281 123.6714 558.5283 123.9697 558.4707 c124.1694 558.4336 124.2393 558.3008 124.2563 558.167 c124.2754 558.0117 124.2227 557.8564 y124.3955 557.917 124.6006 557.8857 v124.6196 557.8828 124.6387 557.8789 124.6587 557.874 c124.8184 557.8086 124.9316 557.7314 124.9546 557.5596 c124.9805 557.3613 124.8096 557.2646 y124.8623 557.4082 124.7114 557.4961 v124.6704 557.5166 124.6333 557.5303 124.5986 557.5352 c124.4004 557.5654 124.2993 557.3633 124.3105 557.21 c124.3237 556.9658 124.2627 556.7734 124.0796 556.7471 c124.0376 556.7441 124.0024 556.7461 123.9736 556.75 c123.8403 556.7705 123.8306 556.8516 y124.0283 556.834 124.0225 557.0156 v124.0425 557.4678 123.2524 557.458 122.9604 557.6104 c122.7095 557.7305 122.6074 557.8848 y122.5913 557.8662 122.5947 557.7725 v122.6475 557.3018 122.9287 557.2822 123.2114 557.2168 c123.3994 557.167 123.6123 557.0098 123.6123 556.7441 c123.6123 556.3672 123.3643 556.4082 y123.4634 556.708 123.1904 556.751 v123.1704 556.7539 123.1475 556.7559 123.1226 556.7559 c122.9683 556.7559 122.8804 556.6777 122.7876 556.6045 c122.6426 556.4883 122.2124 555.9844 122.1284 555.9023 c122.0444 555.9844 121.6133 556.4883 121.4683 556.6045 c121.3755 556.6777 121.2876 556.7559 121.1333 556.7559 c121.1084 556.7559 121.0864 556.7539 121.0654 556.751 c120.7925 556.708 120.8916 556.4082 y120.6436 556.3672 120.6436 556.7441 v120.6436 557.0098 120.8564 557.167 121.0444 557.2168 c121.3276 557.2822 121.6084 557.3018 121.6616 557.7725 c121.6646 557.8662 121.6484 557.8848 y121.5464 557.7305 121.2954 557.6104 v121.0034 557.458 120.2134 557.4678 120.2334 557.0156 c120.2275 556.834 120.4253 556.8516 y120.4155 556.7705 120.2827 556.75 v120.2534 556.7461 120.2183 556.7441 120.1763 556.7471 c119.9937 556.7734 119.9326 556.9658 119.9453 557.21 c119.9565 557.3633 119.8555 557.5654 119.6577 557.5352 c119.6226 557.5303 119.5854 557.5166 119.5444 557.4961 c119.3936 557.4082 119.4463 557.2646 y119.2754 557.3613 119.3013 557.5596 v119.3247 557.7314 119.4375 557.8086 119.5977 557.874 c119.6177 557.8789 119.6367 557.8828 119.6553 557.8857 c119.8613 557.917 120.0337 557.8564 y119.9805 558.0117 119.9995 558.167 v120.0166 558.3008 120.0864 558.4336 120.2876 558.4707 c120.5845 558.5283 120.6484 558.3281 120.6045 558.2178 c120.5874 558.208 120.5347 558.2861 120.4497 558.2744 c120.4375 558.2725 120.4243 558.2676 120.4106 558.2617 c120.3613 558.2363 120.3325 558.2031 120.3164 558.167 c120.2666 558.0488 120.3657 557.9004 120.3813 557.875 c120.4414 557.7949 120.6255 557.7402 120.8545 557.7832 c121.1206 557.8398 121.3096 558.0127 121.4023 558.167 c121.4507 558.2471 121.4727 558.3223 121.4644 558.3721 C121.6094 559.9824 l121.6553 560.3965 121.3735 560.4443 v121.3413 560.4512 121.3076 560.4512 121.2744 560.4463 c121.0356 560.4082 120.7876 560.0908 120.8667 559.6934 c120.9263 559.3887 120.7705 559.1563 120.6196 559.1211 c120.4287 559.0771 120.3125 559.1152 120.2456 559.2539 c120.5786 559.2764 120.5576 559.543 120.4526 559.6377 c120.4077 559.6787 120.3433 559.6904 120.2686 559.6787 c119.9575 559.6299 119.4644 559.2021 119.3857 558.9463 c119.3145 558.7158 119.4863 558.7754 119.5596 558.5811 c119.6187 558.4248 119.4863 558.3008 y119.4834 558.249 119.4766 558.2041 119.4663 558.167 c119.4316 558.0322 119.3604 557.9883 119.2964 557.9785 c119.2446 557.9697 119.1963 557.9844 119.1714 557.9922 c119.2544 558.0273 119.2793 558.1055 119.2876 558.167 c119.2925 558.2109 119.2886 558.2461 y119.1943 558.2373 119.1143 558.3623 v119.0195 558.5078 119.1367 558.5527 119.0327 558.7109 c118.9277 558.8691 118.6377 559.0371 118.4106 559.0664 c118.3955 559.0684 118.3813 559.0674 118.3687 559.0654 c118.3237 559.0586 118.2817 559.0361 118.2144 559.0254 c118.1943 559.0225 118.1724 559.0205 118.1484 559.0205 c117.9683 559.0156 118.0176 559.125 117.8716 559.1133 c117.7944 559.0967 117.7505 559.0254 117.7764 558.9189 c117.7793 558.9053 117.7676 558.8955 y117.6865 558.9502 117.6523 559.0254 117.6475 559.1123 c117.6455 559.3447 117.7935 559.5088 117.9336 559.5225 c118.1006 559.5381 118.1777 559.4346 118.1895 559.415 c118.2803 559.8008 117.9785 559.6699 117.8335 559.8564 c117.7344 559.9844 117.7734 560.0479 117.7866 560.0938 c117.8066 560.1641 117.6855 560.1719 117.5933 560.1582 c117.5674 560.1543 117.5435 560.1484 117.5273 560.1406 c117.5083 560.1592 117.5557 560.3389 117.7456 560.3672 c117.8115 560.3779 117.8945 560.3701 117.9985 560.3311 c118.0977 560.3604 118.1904 560.3125 118.2256 560.2451 c118.2676 560.165 118.2324 560.0732 118.2446 559.9736 c118.2734 559.7178 118.4307 559.7246 118.4546 559.7285 c118.3154 560.0938 118.4907 560.2031 118.5083 560.2598 c118.5264 560.3184 118.5044 560.3955 118.4146 560.4268 c118.3945 560.4336 118.3687 560.4502 118.3984 560.458 c118.7495 560.4727 118.8037 560.2441 v118.9556 560.1631 118.9585 559.9736 v118.9634 559.7383 118.8354 559.7158 118.7856 559.6689 c118.8213 559.4219 118.9673 559.3809 119.1045 559.4023 c119.2383 559.4229 119.3633 559.502 y119.5933 559.5938 120.0737 559.8896 119.9443 560.1318 c119.8843 560.2432 119.7876 560.29 119.6807 560.2744 c119.6304 560.2656 119.5776 560.2441 119.5264 560.207 c119.3877 560.0752 119.4575 559.9014 y119.2456 559.8447 119.1465 560.2109 119.2783 560.3672 c119.3706 560.4756 119.4834 560.5186 119.6055 560.54 c119.7437 560.5645 119.8926 560.5586 120.0337 560.5869 c120.2026 560.6221 120.3315 560.7266 120.4565 560.9463 c120.5483 561.0986 120.5513 561.3096 120.4717 561.4785 c120.3896 561.6621 120.2217 561.8916 119.9844 561.9346 c119.9385 561.5381 119.7197 561.2246 119.4517 561.0342 c119.3857 560.9883 119.2983 560.9619 119.2407 560.9531 c119.1934 560.9463 119.1636 560.9492 119.1743 560.9619 c119.5244 561.3711 119.4336 561.7988 119.4233 561.8398 c119.3984 561.793 119.1265 561.292 118.6387 561.0781 c118.5913 561.0576 118.5425 561.0439 118.4927 561.0371 c118.2314 560.9961 117.9697 561.1182 118.0723 561.1309 c118.2466 561.1553 118.9434 561.5596 118.7334 562.4199 c118.7065 562.3711 118.4004 561.8232 118.0215 561.5645 c117.8604 561.4531 117.6934 561.3984 117.5435 561.375 c117.2466 561.3281 117.0195 561.4111 117.0625 561.4502 c117.8833 561.8389 117.8945 562.21 v117.8677 562.1895 117.6445 562.0166 117.3857 561.9766 c117.3506 561.9717 117.3154 561.9688 117.2793 561.9688 c116.5786 561.9688 116.5786 562.4727 y116.6284 562.4678 117.2827 562.4248 117.8174 563.5605 c117.4683 563.4375 117.0674 563.3936 v116.8286 563.3672 116.7285 563.5166 116.7563 563.5146 c116.7983 563.501 116.8467 563.4971 116.9053 563.5059 c117.0376 563.5273 117.2266 563.6104 117.4644 563.793 c117.4014 563.8223 116.5415 564.2031 116.8735 564.792 c117.1113 564.585 117.4033 564.5586 v117.6177 564.54 117.9927 564.5811 118.0825 564.7959 c117.6196 564.8232 117.1655 565.1094 v117.1514 565.1182 117.1377 565.127 117.1245 565.1367 c116.9175 565.1377 116.7036 565.127 116.4814 565.1045 c116.3345 564.5293 115.8574 564.1074 115.2925 564.1074 c114.7295 564.1074 114.2544 564.5254 114.1055 565.0957 c113.7383 565.1611 113.3857 565.1699 113.0405 565.1416 C104.9907 556.5693 l105.7676 555.8418 106.6177 555.2256 107.5044 554.7119 C115.0317 562.7266 L115.0317 558.4844 L110.3047 553.4502 l112.0234 552.8691 113.7563 552.6064 115.2915 552.6064 c121.1616 552.6064 129.9287 556.4521 129.7285 567.2129 C129.7285 574.1348 L125.9673 570.1289 L121.9824 570.1289 L129.7285 578.3789 L129.7285 582.9141 L121.6074 574.2646 l121.6445 574.2344 121.6665 574.1992 121.6665 574.1611 c121.6685 565.7256 Lf120.7925 563.1309 m123.4644 563.1309 L123.4644 564.2051 L120.7915 564.2051 l120.7925 563.1309 Lf122.1284 561.0352 m123.3296 561.0352 123.4346 562.1699 Y120.8135 562.1699 l120.9263 561.0352 122.1284 561.0352 VF106.1924 579.7344 m108.8643 579.7344 L108.8643 580.8076 L106.1914 580.8076 l106.1924 579.7344 Lf107.5283 577.6377 m108.7295 577.6377 108.8345 578.7734 Y106.2134 578.7734 l106.3267 577.6377 107.5283 577.6377 VF114.7363 565.2852 m114.7363 564.9678 114.9946 564.71 115.3115 564.71 c115.6294 564.71 115.8867 564.9678 115.8867 565.2852 c115.8867 565.6016 115.6294 565.8604 115.3115 565.8604 c114.9946 565.8604 114.7363 565.6016 114.7363 565.2852 CF109.3154 573.9434 m109.3154 565.1299 l109.4116 565.0117 110.0005 565.1729 v110.6787 565.3584 111.5195 566.2217 112.6973 566.4795 c113.5815 566.6709 114.7734 566.3926 115.0513 566.2002 C115.0513 575.0293 l114.5176 575.5527 113.6396 575.5527 v112.7827 575.5527 111.3374 574.7832 110.7817 574.5039 c110.2974 574.2627 109.7886 574.0801 109.4175 574.0439 c109.3057 574.0342 109.3154 573.9434 YF117.0415 566.5 m118.5723 566.5 119.3696 565.5508 119.8887 565.3438 c121.0977 564.8633 121.3003 565.1094 Y121.3003 573.9688 l121.3003 574.0547 121.1724 574.0547 y119.9937 574.2363 119.5884 574.4834 v119.2036 574.7178 117.7695 575.5752 116.7207 575.5752 c115.6685 575.5752 115.4795 575.125 Y115.4795 566.1787 l115.9717 566.5 117.0415 566.5 VF*UULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
